/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LatestDependencyTotal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestDependencyTotal{}

// LatestDependencyTotal struct for LatestDependencyTotal
type LatestDependencyTotal struct {
	Total *float32 `json:"total,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewLatestDependencyTotal instantiates a new LatestDependencyTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestDependencyTotal() *LatestDependencyTotal {
	this := LatestDependencyTotal{}
	return &this
}

// NewLatestDependencyTotalWithDefaults instantiates a new LatestDependencyTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestDependencyTotalWithDefaults() *LatestDependencyTotal {
	this := LatestDependencyTotal{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *LatestDependencyTotal) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestDependencyTotal) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *LatestDependencyTotal) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *LatestDependencyTotal) SetTotal(v float32) {
	o.Total = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LatestDependencyTotal) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestDependencyTotal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LatestDependencyTotal) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *LatestDependencyTotal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o LatestDependencyTotal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestDependencyTotal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableLatestDependencyTotal struct {
	value *LatestDependencyTotal
	isSet bool
}

func (v NullableLatestDependencyTotal) Get() *LatestDependencyTotal {
	return v.value
}

func (v *NullableLatestDependencyTotal) Set(val *LatestDependencyTotal) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestDependencyTotal) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestDependencyTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestDependencyTotal(val *LatestDependencyTotal) *NullableLatestDependencyTotal {
	return &NullableLatestDependencyTotal{value: val, isSet: true}
}

func (v NullableLatestDependencyTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestDependencyTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


