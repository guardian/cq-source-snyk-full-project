/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectRelationshipsTargetDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectRelationshipsTargetDataAttributes{}

// ProjectRelationshipsTargetDataAttributes struct for ProjectRelationshipsTargetDataAttributes
type ProjectRelationshipsTargetDataAttributes struct {
	// The human readable name that represents this target. These are generated based on the provided properties, and the source. In the future we may support updating this value. 
	DisplayName *string `json:"display_name,omitempty"`
	// The URL for the resource. We do not use this as part of our representation of the identity of the target, as it can      be changed externally to Snyk We are reliant on individual integrations providing us with this value. Currently it is only provided by the CLI 
	Url NullableString `json:"url,omitempty"`
}

// NewProjectRelationshipsTargetDataAttributes instantiates a new ProjectRelationshipsTargetDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectRelationshipsTargetDataAttributes() *ProjectRelationshipsTargetDataAttributes {
	this := ProjectRelationshipsTargetDataAttributes{}
	return &this
}

// NewProjectRelationshipsTargetDataAttributesWithDefaults instantiates a new ProjectRelationshipsTargetDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectRelationshipsTargetDataAttributesWithDefaults() *ProjectRelationshipsTargetDataAttributes {
	this := ProjectRelationshipsTargetDataAttributes{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProjectRelationshipsTargetDataAttributes) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRelationshipsTargetDataAttributes) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProjectRelationshipsTargetDataAttributes) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProjectRelationshipsTargetDataAttributes) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectRelationshipsTargetDataAttributes) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectRelationshipsTargetDataAttributes) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ProjectRelationshipsTargetDataAttributes) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ProjectRelationshipsTargetDataAttributes) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *ProjectRelationshipsTargetDataAttributes) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ProjectRelationshipsTargetDataAttributes) UnsetUrl() {
	o.Url.Unset()
}

func (o ProjectRelationshipsTargetDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectRelationshipsTargetDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return toSerialize, nil
}

type NullableProjectRelationshipsTargetDataAttributes struct {
	value *ProjectRelationshipsTargetDataAttributes
	isSet bool
}

func (v NullableProjectRelationshipsTargetDataAttributes) Get() *ProjectRelationshipsTargetDataAttributes {
	return v.value
}

func (v *NullableProjectRelationshipsTargetDataAttributes) Set(val *ProjectRelationshipsTargetDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectRelationshipsTargetDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectRelationshipsTargetDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectRelationshipsTargetDataAttributes(val *ProjectRelationshipsTargetDataAttributes) *NullableProjectRelationshipsTargetDataAttributes {
	return &NullableProjectRelationshipsTargetDataAttributes{value: val, isSet: true}
}

func (v NullableProjectRelationshipsTargetDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectRelationshipsTargetDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


