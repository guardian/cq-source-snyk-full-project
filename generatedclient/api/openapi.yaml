openapi: 3.0.3
info:
  title: Snyk API
  version: REST
servers:
- description: Snyk REST API
  url: https://api.snyk.io/rest
security:
- BearerAuth: []
- APIToken: []
tags:
- description: "Third-party Apps that integrate with the Snyk platform. See our [overview\
    \ documentation](https://docs.snyk.io/integrations/snyk-apps) for more details."
  name: Apps
- description: Audit Logs
  name: Audit Logs
- description: User-defined collections of projects
  name: Collection
- description: Container Image resource
  name: ContainerImage
- description: "Through the Custom Base Image Recommendation feature, Snyk can recommend\
    \ an image upgrade from a pool of the your internal images. \nThis allows your\
    \ teams to be notified of newer and more secure versions of internal base images.\n\
    \nNotable changes to this API resource:\n- starting with version \"2023-09-20\"\
    , the `GET` `/custom_base_images` endpoint requires the `repository` filter when\
    \ sorting by `version`.\n- starting with version \"2024-01-04\", `VersioningSchema`\
    \ objects with `type` `\"date\"` are no longer supported. Snyk recommends updating\
    \ custom base images with the deprecated type to `\"single-selection\"`.\n"
  name: Custom Base Images
- description: An example of a v3 API resource
  name: Examples
- description: Infrastructure as Code Settings.
  name: IacSettings
- description: Organization Invites.
  name: Invites
- description: Issues relevant to a particular package
  name: Issues
- description: The OpenAPI specification for slack-app.
  name: OpenAPI
- description: "An Organization is the lowest level of Snyk's tenancy hierarchy, and\
    \ may contain projects and other data."
  name: Org
- description: |
    A project is a single external resource which has been scanned by Snyk such as a manifest file or a container image. It may also be continuously monitored by Snyk.
  name: Projects
- description: A Software Bill of Materials document
  name: SBOM
- description: SAST Settings modifications for an org
  name: SastSettings
- description: "Service accounts can be used for continuous integration (CI) and other\
    \ automation purposes, without using an actual Snyk userâ€™s token."
  name: ServiceAccounts
- description: Slack integration configuration.
  name: Slack
- description: Slack app integration settings.
  name: SlackSettings
paths:
  /custom_base_images:
    get:
      description: |
        Get a list of custom base images with support for ordering and filtering.
        Either the org_id or group_id parameters must be set to authorize successfully.
        If sorting by version, the repository filter is required.
      operationId: getCustomBaseImages
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The ID of the container project that the custom base image is
          based off of.
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The organization ID of the custom base image
        explode: true
        in: query
        name: org_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The group ID of the custom base image
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The image repository
        explode: true
        in: query
        name: repository
        required: false
        schema:
          type: string
        style: form
      - description: The image tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Whether this image should be recommended as a base image upgrade
        explode: true
        in: query
        name: include_in_recommendations
        required: false
        schema:
          type: boolean
        style: form
      - description: "Which column to sort by. \nIf sorting by version, the versioning\
          \ schema is used.\n"
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - repository
          - tag
          - version
          type: string
        style: form
      - description: Which direction to sort
        explode: true
        in: query
        name: sort_direction
        required: false
        schema:
          default: ASC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomBaseImageCollectionResponse'
          description: Returns custom base images
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a custom base image collection
      tags:
      - Custom Base Images
      x-snyk-api-releases:
      - 2023-08-21
      - 2023-09-20
      - 2024-01-04
      x-snyk-api-version: 2024-01-04
    post:
      description: |
        In order to create a custom base image, you first need to import your base images into Snyk.
        You can do this through the CLI, UI, or API.

        This endpoint marks an image as a custom base image. This means that the image will get
        added to the pool of images from which Snyk can recommend base image upgrades.

        Note, after the first image in a repository gets added, a versioning schema cannot be passed in this endpoint.
        To update the versioning schema, the PATCH endpoint must be used.
      operationId: createCustomBaseImage
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomBaseImagePostRequest'
        description: The properties used in the creation of a custom base image
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomBaseImageResponse'
          description: Successfully created a custom base image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create a Custom Base Image from an existing container project
      tags:
      - Custom Base Images
      x-snyk-api-releases:
      - 2023-08-21
      - 2023-09-20
      - 2024-01-04
      x-snyk-api-version: 2024-01-04
    x-snyk-api-resource: custombaseimages
  /custom_base_images/{custombaseimage_id}:
    delete:
      description: Delete a custom base image resource. (the related container project
        is unaffected)
      operationId: deleteCustomBaseImage
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for custom base image
        explode: false
        in: path
        name: custombaseimage_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted the custom base image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete a custom base image
      tags:
      - Custom Base Images
      x-snyk-api-releases:
      - 2023-08-21
      - 2023-09-20
      - 2024-01-04
      x-snyk-api-version: 2024-01-04
    get:
      description: Get a custom base image
      operationId: getCustomBaseImage
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for custom base image
        explode: false
        in: path
        name: custombaseimage_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomBaseImageResponse'
          description: Returns a custom base image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a custom base image
      tags:
      - Custom Base Images
      x-snyk-api-releases:
      - 2023-08-21
      - 2023-09-20
      - 2024-01-04
      x-snyk-api-version: 2024-01-04
    patch:
      description: Updates a custom base image's attributes
      operationId: updateCustomBaseImage
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for custom base image
        explode: false
        in: path
        name: custombaseimage_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomBaseImagePatchRequest'
        description: custom base image to be updated
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomBaseImageResponse'
          description: Returns the updated custom base image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update a custom base image
      tags:
      - Custom Base Images
      x-snyk-api-releases:
      - 2023-08-21
      - 2023-09-20
      - 2024-01-04
      x-snyk-api-version: 2024-01-04
    x-snyk-api-resource: custombaseimages
  /groups/{group_id}/apps/installs:
    get:
      description: Get a list of apps installed for a group.
      operationId: getAppInstallsForGroup
      parameters:
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - app
            type: string
          type: array
        style: form
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_200_response'
          description: A list of apps installed for the specified group.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps installed for a group.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    post:
      description: "Install a Snyk Apps to this group, the Snyk App must use unattended\
        \ authentication eg client credentials."
      operationId: createGroupAppInstall
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createGroupAppInstall_request'
        description: App Install to be created
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createGroupAppInstall_201_response'
          description: The newly created app install.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Install a Snyk Apps to this group.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /groups/{group_id}/apps/installs/{install_id}:
    delete:
      description: Revoke app authorization for an Snyk Group with install ID.
      operationId: deleteGroupAppInstallByID
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Install ID
        explode: false
        in: path
        name: install_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: The app install has been de-authorized.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke app authorization for an Snyk Group with install ID.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /groups/{group_id}/apps/installs/{install_id}/secrets:
    post:
      description: Manage client secret for non-interactive Snyk App installations.
      operationId: updateGroupAppInstallSecret
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Group ID
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Install ID
        explode: false
        in: path
        name: install_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateGroupAppInstallSecret_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/updateGroupAppInstallSecret_200_response'
          description: Secret has been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Manage client secret for non-interactive Snyk App installations.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /groups/{group_id}/audit_logs/search:
    get:
      description: |
        Search audit logs for a Group. Some Organization level events are supported as well as the following
        Group level events:
          - api.access
          - group.cloud_config.settings.edit
          - group.create
          - group.delete
          - group.edit
          - group.notification_settings.edit
          - group.org.add
          - group.org.remove
          - group.policy.create
          - group.policy.delete
          - group.policy.edit
          - group.request_access_settings.edit
          - group.role.create
          - group.role.delete
          - group.role.edit
          - group.service_account.create
          - group.service_account.delete
          - group.service_account.edit
          - group.settings.edit
          - group.settings.feature_flag.edit
          - group.sso.add
          - group.sso.auth0_connection.create
          - group.sso.auth0_connection.edit
          - group.sso.create
          - group.sso.delete
          - group.sso.edit
          - group.sso.membership.sync
          - group.sso.remove
          - group.tag.create
          - group.tag.delete
          - group.user.add
          - group.user.remove
          - group.user.role.edit
      operationId: listGroupAuditLogs
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The ID of the Group.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID for the next page of results.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start date (inclusive) of the audit logs search. Example: 2023-07-27
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: |
          The end date (inclusive) of the audit logs search. Example: 2023-07-27
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results to return per page.
        example: 10
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          multipleOf: 1
          type: integer
        style: form
      - description: Order in which results are returned.
        example: ASC
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Filter logs by user ID.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filter logs by project ID.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Filter logs by event type, cannot be used in conjunction with\
          \ exclude_event parameter."
        example: api.access
        explode: true
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - description: "Exclude event type from results, cannot be used in conjunctions\
          \ with event parameter."
        example: api.access
        explode: true
        in: query
        name: exclude_event
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listGroupAuditLogs_200_response'
          description: Group Audit Logs.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Search Group audit logs.
      tags:
      - Audit Logs
      x-snyk-api-releases:
      - 2023-08-04~beta
      - 2023-09-11
      x-snyk-api-version: 2023-09-11
    x-snyk-api-resource: audit_logs
    x-snyk-resource-singleton: true
  /groups/{group_id}/service_accounts:
    get:
      description: Get all service accounts for a group.
      operationId: getManyGroupServiceAccount
      parameters:
      - description: The ID of the Snyk Group that owns the service accounts.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getManyGroupServiceAccount_200_response'
          description: A list of service accounts is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a list of group service accounts.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    post:
      description: "Create a service account for a group. The service account can\
        \ be used to generate access tokens. Currently, we only allow group service\
        \ accounts using default group roles."
      operationId: createGroupServiceAccount
      parameters:
      - description: The ID of the Snyk Group that is creating and owns the service
          account
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createGroupServiceAccount_request'
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createGroupServiceAccount_201_response'
          description: A new service account has been created
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create a service account for a group.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /groups/{group_id}/service_accounts/{serviceaccount_id}:
    delete:
      description: Permanently delete a group-level service account by its ID.
      operationId: deleteOneGroupServiceAccount
      parameters:
      - description: The ID of the Snyk Group that owns the service account.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "204":
          description: Service account was successfully deleted.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete a group service account.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    get:
      description: Get a group-level service account by its ID.
      operationId: getOneGroupServiceAccount
      parameters:
      - description: The ID of the Snyk Group that owns the service account.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOneGroupServiceAccount_200_response'
          description: Service account is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a group service account.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    patch:
      description: Update the name of a group's service account by its ID.
      operationId: updateGroupServiceAccount
      parameters:
      - description: The ID of the Snyk Group that owns the service account.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateGroupServiceAccount_request'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOneGroupServiceAccount_200_response'
          description: Service account is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update a group service account.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /groups/{group_id}/service_accounts/{serviceaccount_id}/secrets:
    post:
      description: Manage the client secret of a group service account by the service
        account ID.
      operationId: updateServiceAccountSecret
      parameters:
      - description: The ID of the Snyk Group that owns the service account.
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateServiceAccountSecret_request'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createGroupServiceAccount_201_response'
          description: Service account client secret has been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Manage a group service account's client secret.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /groups/{group_id}/settings/iac:
    get:
      description: Get the Infrastructure as Code Settings for a group.
      operationId: getIacSettingsForGroup
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the group whose Infrastructure as Code settings are
          requested
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getIacSettingsForGroup_200_response'
          description: The Infrastructure as Code Settings of the group.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get the Infrastructure as Code Settings for a group
      tags:
      - IacSettings
      x-snyk-api-releases:
      - 2021-12-09
      x-snyk-api-version: 2021-12-09
    patch:
      description: Update the Infrastructure as Code Settings for a group.
      operationId: updateIacSettingsForGroup
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the group whose Infrastructure as Code settings are
          getting updated
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateIacSettingsForGroup_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getIacSettingsForGroup_200_response'
          description: The Infrastructure as Code Settings of the group were updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update the Infrastructure as Code Settings for a group
      tags:
      - IacSettings
      x-snyk-api-releases:
      - 2021-12-09
      x-snyk-api-version: 2021-12-09
    x-snyk-api-resource: iac_settings
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      tags:
      - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - description: The requested version of the API
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      tags:
      - OpenAPI
  /orgs:
    get:
      description: Get a paginated list of organizations you have access to.
      operationId: listOrgs
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: "If set, only return organizations within the specified group"
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "If true, only return organizations that are not part of a group."
        explode: true
        in: query
        name: is_personal
        required: false
        schema:
          type: boolean
        style: form
      - description: Only return orgs whose slug exactly matches this value.
        explode: true
        in: query
        name: slug
        required: false
        schema:
          type: string
        style: form
      - description: Only return orgs whose name contains this value.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Expand the specified related resources in the response to include
          their attributes.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - member_role
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listOrgs_200_response'
          description: A list of organizations you have access to.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List accessible organizations
      tags:
      - Org
      x-snyk-api-releases:
      - 2022-04-06~experimental
      - 2022-12-15~beta
      - 2023-05-29
      x-snyk-api-version: 2023-05-29
    x-snyk-api-resource: orgs
  /orgs/{org_id}:
    get:
      description: Get the full details of an organization.
      operationId: getOrg
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          example: b667f176-df52-4b0a-9954-117af6b05ab7
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOrg_200_response'
          description: Returns an instance of an organization
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get organization
      tags:
      - Org
      x-snyk-api-releases:
      - 2022-04-06~experimental
      - 2022-12-15~beta
      - 2023-05-29
      x-snyk-api-version: 2023-05-29
    patch:
      description: Update the details of an organization
      operationId: updateOrg
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          example: b667f176-df52-4b0a-9954-117af6b05ab7
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateOrg_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/updateOrg_200_response'
          description: Instance of org is updated
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "204":
          description: The operation completed successfully with no content
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update organization
      tags:
      - Org
      x-snyk-api-releases:
      - 2022-04-06~experimental
      - 2022-12-15~beta
      - 2023-05-29
      x-snyk-api-version: 2023-05-29
    x-snyk-api-resource: orgs
  /orgs/{org_id}/app_bots:
    get:
      description: Get a list of app bots authorized to an organization.
      operationId: getAppBots
      parameters:
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - app
            type: string
          type: array
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppBots_200_response'
          description: A list of app bots authorized to the specified organization
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of app bots authorized to an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: app_bots
  /orgs/{org_id}/app_bots/{bot_id}:
    delete:
      description: Revoke app bot authorization
      operationId: deleteAppBot
      parameters:
      - description: The ID of the app bot
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The app bot has been deauthorized
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke app bot authorization
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: app_bots
  /orgs/{org_id}/apps:
    get:
      description: Get a list of apps created by an organization.
      operationId: getApps
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getApps_200_response'
          description: A list of apps created by the specified organization
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps created by an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    post:
      description: Create a new app for an organization.
      operationId: createApp
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AppPostRequest'
        description: app to be created
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AppPostResponse'
          description: Created Snyk App successfully
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Create a new app for an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: apps
  /orgs/{org_id}/apps/creations:
    get:
      description: Get a list of apps created by an organization.
      operationId: getOrgApps
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getApps_200_response'
          description: A list of apps created by the specified organization
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps created by an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    post:
      description: Create a new Snyk App for an organization.
      operationId: createOrgApp
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AppPostRequest'
        description: Snyk App details for app to be created.
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AppPostResponse'
          description: Created Snyk App successfully.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Create a new Snyk App for an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: apps
  /orgs/{org_id}/apps/creations/{app_id}:
    delete:
      description: Delete an app by its App ID.
      operationId: deleteAppByID
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "204":
          description: The app has been deleted
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Delete an app by its App ID.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    get:
      description: Get a Snyk App by its App ID.
      operationId: getAppByID
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppByID_200_response'
          description: The requested app
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a Snyk App by its App ID.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    patch:
      description: Update app creation attributes with App ID.
      operationId: updateAppCreationByID
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AppPatchRequest'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppByID_200_response'
          description: The update app.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: "Update app creation attributes such as name, redirect URIs, and access\
        \ token time to live using the App ID."
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: apps
  /orgs/{org_id}/apps/creations/{app_id}/secrets:
    post:
      description: Manage client secret for the Snyk App.
      operationId: manageAppCreationSecret
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateGroupAppInstallSecret_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/manageAppCreationSecret_200_response'
          description: Secret has been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Manage client secret for the Snyk App.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: apps
  /orgs/{org_id}/apps/installs:
    get:
      description: Get a list of apps installed for an organization.
      operationId: getAppInstallsForOrg
      parameters:
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - app
            type: string
          type: array
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_200_response'
          description: A list of apps installed for the specified organization.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps installed for an organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    post:
      description: "Install a Snyk Apps to this organization, the Snyk App must use\
        \ unattended authentication eg client credentials."
      operationId: createOrgAppInstall
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createGroupAppInstall_request'
        description: App Install to be created
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createGroupAppInstall_201_response'
          description: The newly created app install.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Install a Snyk Apps to this organization.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /orgs/{org_id}/apps/installs/{install_id}:
    delete:
      description: Revoke app authorization for an Snyk Organization with install
        ID.
      operationId: deleteAppOrgInstallByID
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Install ID
        explode: false
        in: path
        name: install_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: The app install has been revoked.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke app authorization for an Snyk Organization with install ID.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /orgs/{org_id}/apps/installs/{install_id}/secrets:
    post:
      description: Manage client secret for non-interactive Snyk App installations.
      operationId: updateOrgAppInstallSecret
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Install ID
        explode: false
        in: path
        name: install_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateGroupAppInstallSecret_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/updateGroupAppInstallSecret_200_response'
          description: Secret has been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Manage client secret for non-interactive Snyk App installations.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /orgs/{org_id}/apps/{client_id}:
    delete:
      description: Delete an app by app id
      operationId: deleteApp
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Client ID
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
        x-go-name: ClientId
      responses:
        "204":
          description: The app has been deleted
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Delete an app
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    get:
      description: Get an App by client id
      operationId: getApp
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Client ID
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
        x-go-name: ClientId
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppByID_200_response'
          description: The requested app
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get an app by client id
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    patch:
      description: Update app attributes
      operationId: updateApp
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Client ID
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
        x-go-name: ClientId
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AppPatchRequest'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppByID_200_response'
          description: The update app.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: "Update app attributes that are name, redirect URIs, and access token\
        \ time to live"
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: apps
  /orgs/{org_id}/apps/{client_id}/secrets:
    post:
      description: Manage client secrets for an app.
      operationId: manageSecrets
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Client ID
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
        x-go-name: ClientId
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateGroupAppInstallSecret_request_data_attributes'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/manageAppCreationSecret_200_response'
          description: Secrets have been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Manage client secrets for an app.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: apps
  /orgs/{org_id}/audit_logs/search:
    get:
      description: |
        Search audit logs for an Organization. Supported event types:
          - api.access
          - org.app_bot.create
          - org.app.create
          - org.app.delete
          - org.app.edit
          - org.cloud_config.settings.edit
          - org.collection.create
          - org.collection.delete
          - org.collection.edit
          - org.create
          - org.delete
          - org.edit
          - org.ignore_policy.edit
          - org.integration.create
          - org.integration.delete
          - org.integration.edit
          - org.integration.settings.edit
          - org.language_settings.edit
          - org.notification_settings.edit
          - org.org_source.create
          - org.org_source.delete
          - org.org_source.edit
          - org.policy.edit
          - org.project_filter.create
          - org.project_filter.delete
          - org.project.add
          - org.project.attributes.edit
          - org.project.delete
          - org.project.edit
          - org.project.fix_pr.auto_open
          - org.project.fix_pr.manual_open
          - org.project.ignore.create
          - org.project.ignore.delete
          - org.project.ignore.edit
          - org.project.monitor
          - org.project.pr_check.edit
          - org.project.remove
          - org.project.settings.delete
          - org.project.settings.edit
          - org.project.stop_monitor
          - org.project.tag.add
          - org.project.tag.remove
          - org.project.test
          - org.request_access_settings.edit
          - org.sast_settings.edit
          - org.service_account.create
          - org.service_account.delete
          - org.service_account.edit
          - org.settings.feature_flag.edit
          - org.target.create
          - org.target.delete
          - org.user.add
          - org.user.invite
          - org.user.invite.accept
          - org.user.invite.revoke
          - org.user.invite_link.accept
          - org.user.invite_link.create
          - org.user.invite_link.revoke
          - org.user.leave
          - org.user.provision.accept
          - org.user.provision.create
          - org.user.provision.delete
          - org.user.remove
          - org.user.role.create
          - org.user.role.delete
          - org.user.role.details.edit
          - org.user.role.edit
          - org.user.role.permissions.edit
          - org.webhook.add
          - org.webhook.delete
          - user.org.notification_settings.edit
      operationId: listOrgAuditLogs
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The ID of the organization.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID for the next page of results.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: |
          The start date (inclusive) of the audit logs search. Example: 2023-07-27
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: |
          The end date (inclusive) of the audit logs search. Example: 2023-07-27
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results to return per page.
        example: 10
        explode: true
        in: query
        name: size
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 1
          multipleOf: 1
          type: integer
        style: form
      - description: Order in which results are returned.
        example: ASC
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Filter logs by user ID.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filter logs by project ID.
        example: 0d3728ec-eebf-484d-9907-ba238019f10b
        explode: true
        in: query
        name: project_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Filter logs by event type, cannot be used in conjunction with\
          \ exclude_event parameter."
        example: api.access
        explode: true
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - description: "Exclude event type from results, cannot be used in conjunctions\
          \ with event parameter."
        example: api.access
        explode: true
        in: query
        name: exclude_event
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listGroupAuditLogs_200_response'
          description: Organization Audit Logs.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Search Organization audit logs.
      tags:
      - Audit Logs
      x-snyk-api-releases:
      - 2023-08-04~beta
      - 2023-09-11
      x-snyk-api-version: 2023-09-11
    x-snyk-api-resource: audit_logs
    x-snyk-resource-singleton: true
  /orgs/{org_id}/collections:
    get:
      description: Return a list of organization's collections with issues counts  and
        projects count.
      operationId: getCollections
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: Return collections sorted by the specified attributes
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name
          - projectsCount
          - issues
          type: string
        style: form
      - description: Return collections sorted in the specified direction
        explode: true
        in: query
        name: direction
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - allowEmptyValue: true
        description: Return collections which names include the provided string
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 255
          type: string
        style: form
      - allowEmptyValue: true
        description: Return collections where is_generated matches the provided boolean
        explode: true
        in: query
        name: is_generated
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getCollections_200_response'
          description: Returns a list of collections
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get collections
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    post:
      description: Create a collection
      operationId: createCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createCollection_201_response'
          description: Returned collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    x-snyk-api-resource: collections
  /orgs/{org_id}/collections/{collection_id}:
    delete:
      description: Delete a collection
      operationId: deleteCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Collection was deleted successfully
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    get:
      description: Get a collection
      operationId: getCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createCollection_201_response'
          description: Returned collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    patch:
      description: Edit a collection
      operationId: updateCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionRequest'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createCollection_201_response'
          description: Returned collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Edit a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    x-snyk-api-resource: collections
  /orgs/{org_id}/collections/{collection_id}/relationships/projects:
    delete:
      description: "Remove projects from a collection by specifying an array of either\
        \ project ids or target ids (for targets, the respective projects will be\
        \ removed)"
      operationId: deleteProjectsCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeleteProjectsFromCollectionRequest'
      responses:
        "204":
          description: successfully removing projects from a collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Remove projects from a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    get:
      description: Return a list of organization's projects that are from the specified
        collection.
      operationId: getProjectsOfCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: Return projects sorted by the specified attributes
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - imported
          - last_tested_at
          - issues
          type: string
        style: form
      - description: Return projects sorted in the specified direction
        explode: true
        in: query
        name: direction
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Return projects that belong to the provided targets
        explode: true
        in: query
        name: target_id
        required: false
        schema:
          items:
            format: uuid
            type: string
          maxItems: 25
          type: array
        style: form
      - description: Return projects that are with or without issues
        explode: true
        in: query
        name: show
        required: false
        schema:
          items:
            enum:
            - vuln-groups
            - clean-groups
            type: string
          type: array
        style: form
      - description: Return projects that match the provided integration types
        explode: true
        in: query
        name: integration
        required: false
        schema:
          items:
            enum:
            - acr
            - api
            - artifactory-cr
            - aws-lambda
            - azure-functions
            - azure-repos
            - bitbucket-cloud
            - bitbucket-connect-app
            - bitbucket-server
            - cli
            - cloud-foundry
            - digitalocean-cr
            - docker-hub
            - ecr
            - gcr
            - github-cr
            - github-enterprise
            - github
            - gitlab-cr
            - gitlab
            - google-artifact-cr
            - harbor-cr
            - heroku
            - ibm-cloud
            - kubernetes
            - nexus-cr
            - pivotal
            - quay-cr
            - terraform-cloud
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetProjectsOfCollectionResponse'
          description: Returns a list of projects from the specified collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get projects from the specified collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    post:
      description: "Add projects to a collection by specifying an array of either\
        \ project ids or target ids (for targets, the respective projects will be\
        \ added, but they won't be updated when the target changes)"
      operationId: updateCollectionWithProjects
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a collection
        explode: false
        in: path
        name: collection_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionWithProjectsRequest'
      responses:
        "204":
          description: successfully adding projects to a collection
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Add projects to a collection
      tags:
      - Collection
      x-snyk-api-releases:
      - 2023-06-01~beta
      - 2023-09-12
      x-snyk-api-version: 2023-09-12
    x-snyk-api-resource: collections
  /orgs/{org_id}/container_images:
    get:
      description: List instances of container image
      operationId: listContainerImage
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          example: f59045b3-f093-40c3-871d-a334ae30c568
          format: uuid
          type: string
        style: simple
      - description: A comma-separated list of Image IDs
        example:
        - sha256:b26f21f90920dba8401e30b89ad803587f81cce9bd1f92750f963556da2f930f
        - sha256:28984a62eb713aa5fff922ba06e8689f20e4b2f07de30f3d753b868389c0904f
        explode: false
        in: query
        name: image_ids
        required: false
        schema:
          items:
            format: uri
            pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
            type: string
          maxItems: 100
          type: array
        style: form
      - description: The image Operating System and processor architecture
        example: linux/amd64
        explode: true
        in: query
        name: platform
        required: false
        schema:
          $ref: '#/components/schemas/Platform'
        style: form
      - description: The container registry names
        example:
        - gcr.io/snyk/redis:5
        explode: false
        in: query
        name: names
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageName'
          maxItems: 1
          type: array
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listContainerImage_200_response'
          description: Returns a list of container image instances
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List instances of container image
      tags:
      - ContainerImage
      x-snyk-api-releases:
      - 2023-03-08~beta
      - 2023-08-18~beta
      - 2023-11-02
      x-snyk-api-version: 2023-11-02
    x-snyk-api-resource: container_images
  /orgs/{org_id}/container_images/{image_id}:
    get:
      description: Get instance of container image
      operationId: getContainerImage
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          example: f59045b3-f093-40c3-871d-a334ae30c568
          format: uuid
          type: string
        style: simple
      - description: Image ID
        explode: false
        in: path
        name: image_id
        required: true
        schema:
          example: sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676
          format: uri
          pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getContainerImage_200_response'
          description: Returns an instance of container image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get instance of container image
      tags:
      - ContainerImage
      x-snyk-api-releases:
      - 2023-03-08~beta
      - 2023-11-02
      x-snyk-api-version: 2023-11-02
    x-snyk-api-resource: container_images
  /orgs/{org_id}/container_images/{image_id}/relationships/image_target_refs:
    get:
      description: List instances of image target references for a container image
      operationId: listImageTargetRefs
      parameters:
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          example: f59045b3-f093-40c3-871d-a334ae30c568
          format: uuid
          type: string
        style: simple
      - description: Image ID
        explode: false
        in: path
        name: image_id
        required: true
        schema:
          example: sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676
          format: uri
          pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listImageTargetRefs_200_response'
          description: Returns a list of image target references for a container image
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List instances of image target references for a container image
      tags:
      - ContainerImage
      x-snyk-api-releases:
      - 2023-08-18~beta
      - 2023-11-02
      x-snyk-api-version: 2023-11-02
    x-snyk-api-resource: container_images
  /orgs/{org_id}/invites:
    get:
      description: List pending user invitations to an organization.
      operationId: listOrgInvitation
      parameters:
      - description: The id of the org the user is being invited to
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listOrgInvitation_200_response'
          description: List of pending invitations to an organization.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List pending user invitations to an organization.
      tags:
      - Invites
      x-snyk-api-releases:
      - 2022-11-14
      x-snyk-api-version: 2022-11-14
    post:
      description: Invite a user to an organization with a role.
      operationId: createOrgInvitation
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org the user is being invited to
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createOrgInvitation_request'
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createOrgInvitation_201_response'
          description: A new organization invitation has been created
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Invite a user to an organization
      tags:
      - Invites
      x-snyk-api-releases:
      - 2022-06-01
      - 2023-04-28
      x-snyk-api-version: 2023-04-28
    x-snyk-api-resource: org_invitations
  /orgs/{org_id}/invites/{invite_id}:
    delete:
      description: Cancel a pending user invitations to an organization.
      operationId: deleteOrgInvitation
      parameters:
      - description: The id of the org the user is being invited to
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the pending invite to cancel
        explode: false
        in: path
        name: invite_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "204":
          description: The operation completed successfully with no content
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Cancel a pending user invitations to an organization.
      tags:
      - Invites
      x-snyk-api-releases:
      - 2022-11-14
      x-snyk-api-version: 2022-11-14
    x-snyk-api-resource: org_invitations
  /orgs/{org_id}/packages/issues:
    post:
      description: "This endpoint is not available to all customers. If you are interested\
        \ please contact support. Query issues for a batch of packages identified\
        \ by Package URL (purl). Only direct vulnerabilities are returned, transitive\
        \ vulnerabilities (from dependencies) are not returned because they can vary\
        \ depending on context."
      operationId: listIssuesForManyPurls
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for an organization
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/BulkPackageUrlsRequestBody'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/IssuesWithPurlsResponse'
          description: Returns an array of issues with the purl identifier of the
            package that caused them
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/Location'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List issues for a given set of packages  (Currently not available to
        all customers)
      tags:
      - Issues
      x-snyk-api-releases:
      - 2023-01-04~experimental
      - 2023-03-29~beta
      - 2023-04-17
      - 2023-08-21
      x-snyk-api-version: 2023-08-21
    x-snyk-api-resource: issues
  /orgs/{org_id}/packages/{purl}/issues:
    get:
      description: Query issues for a specific package version identified by Package
        URL (purl). Snyk returns only direct vulnerabilities. Transitive vulnerabilities
        (from dependencies) are not returned because they can vary depending on context.
      operationId: fetchIssuesPerPurl
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: "A URI-encoded Package URL (purl). Supported purl types are apk,\
          \ cargo, cocoapods, composer, deb, gem, generic, golang, hex, maven, npm,\
          \ nuget, pub, pypi, rpm, and swift. A version for the package is also required."
        example: pkg%3Amaven%2Fcom.fasterxml.woodstox%2Fwoodstox-core%405.0.0
        explode: false
        in: path
        name: purl
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier for an organization
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Specify the number of results to skip before returning results.
          Must be greater than or equal to 0. Default is 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: number
        style: form
      - description: Specify the number of results to return. Must be greater than
          0 and less than 1000. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/IssuesResponse'
          description: Returns an array of issues
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List issues for a package
      tags:
      - Issues
      x-snyk-api-releases:
      - 2022-06-29~beta
      - 2022-09-15
      x-snyk-api-version: 2022-09-15
    x-snyk-api-resource: issues
  /orgs/{org_id}/projects:
    get:
      description: List all Projects for an Org.
      operationId: listOrgProjects
      parameters:
      - description: The ID of the org that the projects belong to.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return projects that belong to the provided targets
        explode: true
        in: query
        name: target_id
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Return projects that match the provided target reference
        explode: true
        in: query
        name: target_reference
        required: false
        schema:
          type: string
        style: form
      - description: Return projects that match the provided target file
        explode: true
        in: query
        name: target_file
        required: false
        schema:
          type: string
        style: form
      - description: Return projects that match the provided target runtime
        explode: true
        in: query
        name: target_runtime
        required: false
        schema:
          type: string
        style: form
      - description: The collection count.
        explode: true
        in: query
        name: meta_count
        required: false
        schema:
          enum:
          - only
          type: string
        style: form
      - description: Return projects that match the provided IDs.
        explode: false
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Return projects that match the provided names.
        explode: false
        in: query
        name: names
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Return projects that match the provided origins.
        explode: false
        in: query
        name: origins
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Return projects that match the provided types.
        explode: false
        in: query
        name: types
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - target
            type: string
          type: array
        style: form
      - description: Include a summary count for the issues found in the most recent
          scan of this project
        explode: true
        in: query
        name: meta.latest_issue_counts
        required: false
        schema:
          type: boolean
        style: form
      - description: Include the total number of dependencies found in the most recent
          scan of this project
        explode: true
        in: query
        name: meta.latest_dependency_total
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter projects uploaded and monitored before this date (encoded
          value)
        example: 2021-05-29T09:50:54.014Z
        explode: true
        in: query
        name: cli_monitored_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter projects uploaded and monitored after this date (encoded
          value)
        example: 2021-05-29T09:50:54.014Z
        explode: true
        in: query
        name: cli_monitored_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Return projects that match the provided importing user public
          ids.
        explode: false
        in: query
        name: importing_user_public_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Return projects that match all the provided tags
        example:
        - key1:value1
        - key2:value2
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            pattern: "^[a-zA-Z0-9_-]+:[:/?#@&+=%a-zA-Z0-9_.~-]+$"
            type: string
          type: array
        style: form
      - description: Return projects that match all the provided business_criticality
          value
        explode: false
        in: query
        name: business_criticality
        required: false
        schema:
          items:
            enum:
            - critical
            - high
            - medium
            - low
            type: string
          type: array
        style: form
      - description: Return projects that match all the provided environment values
        explode: false
        in: query
        name: environment
        required: false
        schema:
          items:
            enum:
            - frontend
            - backend
            - internal
            - external
            - mobile
            - saas
            - onprem
            - hosted
            - distributed
            type: string
          type: array
        style: form
      - description: Return projects that match all the provided lifecycle values
        explode: false
        in: query
        name: lifecycle
        required: false
        schema:
          items:
            enum:
            - production
            - development
            - sandbox
            type: string
          type: array
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listOrgProjects_200_response'
          description: A list of projects is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: List all Projects for an Org with the given Org ID.
      tags:
      - Projects
      x-snyk-api-releases:
      - 2021-06-04~beta
      - 2022-08-12~experimental
      - 2022-12-21~experimental
      - 2023-02-15
      - 2023-08-28
      - 2023-09-11
      - 2023-11-06
      x-snyk-api-version: 2023-11-06
    x-snyk-api-resource: projects
  /orgs/{org_id}/projects/{project_id}:
    delete:
      description: Delete one project in the organization by project ID.
      operationId: deleteOrgProject
      parameters:
      - description: The ID of the org to which the project belongs to.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the project.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "204":
          description: The project has been deleted
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete project by project ID.
      tags:
      - Projects
      x-snyk-api-releases:
      - 2023-11-06
      x-snyk-api-version: 2023-11-06
    get:
      description: Get one project of the organization by project ID.
      operationId: getOrgProject
      parameters:
      - description: The ID of the org to which the project belongs to.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the project.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - target
            type: string
          type: array
        style: form
      - description: Include a summary count for the issues found in the most recent
          scan of this project
        explode: true
        in: query
        name: meta.latest_issue_counts
        required: false
        schema:
          type: boolean
        style: form
      - description: Include the total number of dependencies found in the most recent
          scan of this project
        explode: true
        in: query
        name: meta.latest_dependency_total
        required: false
        schema:
          type: boolean
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOrgProject_200_response'
          description: A project is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get project by project ID.
      tags:
      - Projects
      x-snyk-api-releases:
      - 2022-02-01~experimental
      - 2022-08-12~experimental
      - 2022-12-21~experimental
      - 2023-02-15
      - 2023-08-28
      - 2023-09-11
      - 2023-11-06
      x-snyk-api-version: 2023-11-06
    patch:
      description: Updates one project of the organization by project ID.
      operationId: updateOrgProject
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The ID of the Org the project belongs to.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the project to patch.
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - target
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchProjectRequest'
        description: The project attributes to be updated.
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/updateOrgProject_200_response'
          description: A project is updated for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Updates project by project ID.
      tags:
      - Projects
      x-snyk-api-releases:
      - 2022-12-21~experimental
      - 2023-02-15
      - 2023-08-28
      - 2023-09-11
      - 2023-11-06
      x-snyk-api-version: 2023-11-06
    x-snyk-api-resource: projects
  /orgs/{org_id}/projects/{project_id}/sbom:
    get:
      description: |-
        This endpoint lets you retrieve the SBOM document of a software project.
        It supports the following formats:
        * CycloneDX version 1.4 in JSON (set `format` to `cyclonedx1.4+json`).
        * CycloneDX version 1.4 in XML (set `format` to `cyclonedx1.4+xml`).
        * SPDX version 2.3 in JSON (set `format` to `spdx2.3+json`).

        By default it will respond with an empty JSON:API response.
      operationId: getSbom
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Unique identifier for an organization
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Unique identifier for a project
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The desired SBOM format of the response.
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - cyclonedx1.4+json
          - cyclonedx1.4+xml
          - spdx2.3+json
          example: cyclonedx1.4+json
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpdxDocument'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SbomResponse'
            application/vnd.cyclonedx+json:
              schema:
                $ref: '#/components/schemas/CycloneDxDocument'
            application/vnd.cyclonedx+xml:
              schema:
                $ref: '#/components/schemas/CycloneDxXmlDocument'
          description: Returns the SBOM document of a project
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a projectâ€™s SBOM document
      tags:
      - SBOM
      x-snyk-api-releases:
      - 2022-03-31~experimental
      - 2022-12-06~beta
      - 2023-03-20
      x-snyk-api-version: 2023-03-20
    x-snyk-api-resource: sboms
    x-snyk-resource-singleton: true
  /orgs/{org_id}/service_accounts:
    get:
      description: Get all service accounts for an organization.
      operationId: getManyOrgServiceAccounts
      parameters:
      - description: The ID of the Snyk Organization that owns the service accounts.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getManyGroupServiceAccount_200_response'
          description: A list of service accounts is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a list of organization service accounts.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    post:
      description: Create a service account for an organization. The service account
        can be used to generate access tokens.
      operationId: createOrgServiceAccount
      parameters:
      - description: The ID of the Snyk Organization that is creating and will own
          the service account.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/createOrgServiceAccount_request'
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOneGroupServiceAccount_200_response'
          description: A new service account has been created
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create a service account for an organization.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /orgs/{org_id}/service_accounts/{serviceaccount_id}:
    delete:
      description: Delete a service account in an organization.
      operationId: deleteServiceAccount
      parameters:
      - description: The ID of org to which the service account belongs.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "204":
          description: The service account has been deleted.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete a service account in an organization.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    get:
      description: Get an organization-level service account by its ID.
      operationId: getOneOrgServiceAccount
      parameters:
      - description: The ID of the Snyk Organization that owns the service account.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOneGroupServiceAccount_200_response'
          description: Service account is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get an organization service account.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    patch:
      description: Update the name of an organization-level service account by its
        ID.
      operationId: updateOrgServiceAccount
      parameters:
      - description: The ID of the Snyk Organization that owns the service account.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateOrgServiceAccount_request'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOneGroupServiceAccount_200_response'
          description: Service account is returned.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update an organization service account.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /orgs/{org_id}/service_accounts/{serviceaccount_id}/secrets:
    post:
      description: Manage the client secret of an organization-level service account
        by the service account ID.
      operationId: updateOrgServiceAccountSecret
      parameters:
      - description: The ID of the Snyk Organization that owns the service account.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the service account.
        explode: false
        in: path
        name: serviceaccount_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateServiceAccountSecret_request'
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createGroupServiceAccount_201_response'
          description: Service account client secret has been updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Manage an organization service account's client secret.
      tags:
      - ServiceAccounts
      x-snyk-api-releases:
      - 2023-09-07
      x-snyk-api-version: 2023-09-07
    x-snyk-api-resource: service_accounts
  /orgs/{org_id}/settings/iac:
    get:
      description: Get the Infrastructure as Code Settings for an org.
      operationId: getIacSettingsForOrg
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org whose Infrastructure as Code settings are requested.
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getIacSettingsForOrg_200_response'
          description: The Infrastructure as Code Settings of the org.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get the Infrastructure as Code Settings for an org.
      tags:
      - IacSettings
      x-snyk-api-releases:
      - 2021-12-09
      x-snyk-api-version: 2021-12-09
    patch:
      description: Update the Infrastructure as Code Settings for an org.
      operationId: updateIacSettingsForOrg
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org whose Infrastructure as Code settings are getting
          updated
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateIacSettingsForOrg_request'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getIacSettingsForOrg_200_response'
          description: The Infrastructure as Code Settings of the org were updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update the Infrastructure as Code Settings for an org
      tags:
      - IacSettings
      x-snyk-api-releases:
      - 2021-12-09
      x-snyk-api-version: 2021-12-09
    x-snyk-api-resource: iac_settings
    x-snyk-resource-singleton: true
  /orgs/{org_id}/settings/sast:
    get:
      description: Retrieves the SAST settings for an org
      operationId: getSastSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org for which we want to retrieve the SAST settings
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getSastSettings_200_response'
          description: The SAST settings for the org are being retrieved
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Retrieves the SAST settings for an org
      tags:
      - SastSettings
      x-snyk-api-releases:
      - 2023-06-22
      x-snyk-api-version: 2023-06-22
    patch:
      description: Enable/Disable the Snyk Code settings for an org
      operationId: updateOrgSastSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org for which we want to update the Snyk Code setting
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/updateOrgSastSettings_request'
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getSastSettings_200_response'
          description: The SAST settings for the org are being updated
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Enable/Disable the Snyk Code settings for an org
      tags:
      - SastSettings
      x-snyk-api-releases:
      - 2023-08-24~experimental
      - 2023-09-11
      x-snyk-api-version: 2023-09-11
    x-snyk-api-resource: sast_settings
    x-snyk-resource-singleton: true
  /orgs/{org_id}/slack_app/{bot_id}:
    delete:
      description: Remove the given Slack App integration
      operationId: deleteSlackDefaultNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: Slack App integration successfully removed
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Remove the given Slack App integration
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    get:
      description: Get Slack integration default notification settings for the provided
        tenant ID and bot ID.
      operationId: getSlackDefaultNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getSlackDefaultNotificationSettings_200_response'
          description: Default settings created successfully
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get Slack integration default notification settings.
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    post:
      description: Create new Slack notification default settings for a given tenant.
      operationId: createSlackDefaultNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SettingsRequest'
        description: Create new Slack notification default settings for a tenant.
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getSlackDefaultNotificationSettings_200_response'
          description: Default settings created successfully
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create new Slack notification default settings.
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    x-snyk-api-resource: settings
  /orgs/{org_id}/slack_app/{bot_id}/projects:
    get:
      description: Slack notification settings overrides for projects. These settings
        overrides the default settings configured for the tenant.
      operationId: getSlackProjectNotificationSettingsCollection
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetProjectSettingsCollection'
          description: Return default settings for a tenant
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Slack notification settings overrides for projects
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    x-snyk-api-resource: settings
  /orgs/{org_id}/slack_app/{bot_id}/projects/{project_id}:
    delete:
      description: Remove Slack settings override for a project.
      operationId: deleteSlackProjectNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: Slack settings override for the project removed successfully.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Remove Slack settings override for a project.
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    patch:
      description: Update Slack notification settings for a project.
      operationId: updateSlackProjectNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProjectSettingsPatchRequest'
        description: Update existing project specific settings for a project.
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createSlackProjectNotificationSettings_201_response'
          description: Slack notification settings for a project updated successfully.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Update Slack notification settings for a project.
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    post:
      description: Create Slack settings override for a project.
      operationId: createSlackProjectNotificationSettings
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Project ID
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Bot ID
        explode: false
        in: path
        name: bot_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SettingsRequest'
        description: Create new Slack notification default settings for a tenant.
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/createSlackProjectNotificationSettings_201_response'
          description: Project settings created successfully
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Create a new Slack settings override for a given project.
      tags:
      - SlackSettings
      x-snyk-api-releases:
      - 2022-11-07~experimental
      - 2022-12-14
      x-snyk-api-version: 2022-12-14
    x-snyk-api-resource: settings
  /orgs/{org_id}/slack_app/{tenant_id}/channels:
    get:
      description: "Requires the Snyk Slack App to be set up for this org, will retrieve\
        \ a list of channels the Snyk Slack App can access. Note that it is currently\
        \ only possible to page forwards through this collection, no prev links will\
        \ be generated and the ending_before parameter will not function."
      operationId: listChannels
      parameters:
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 1000
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: path
        name: tenant_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/listChannels_200_response'
          description: List of Slack channels
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get a list of Slack channels
      tags:
      - Slack
      x-snyk-api-releases:
      - 2022-11-07
      x-snyk-api-version: 2022-11-07
    x-snyk-api-resource: channels
  /orgs/{org_id}/slack_app/{tenant_id}/channels/{channel_id}:
    get:
      description: Requires the Snyk Slack App to be set up for this org. It will
        return the Slack channel name for the provided Slack channel ID.
      operationId: getChannelNameById
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Org ID
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Slack Channel ID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Tenant ID
        explode: false
        in: path
        name: tenant_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getChannelNameById_200_response'
          description: List of Slack channels
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get Slack Channel name by Slack Channel ID.
      tags:
      - Slack
      x-snyk-api-releases:
      - 2022-11-07
      x-snyk-api-version: 2022-11-07
    x-snyk-api-resource: channels
  /self/apps:
    get:
      description: Get a list of apps that can act on your behalf.
      operationId: getUserInstalledApps
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getUserInstalledApps_200_response'
          description: A list of apps install that can act on your behalf
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps that can act on your behalf.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: user_app_installs
  /self/apps/installs:
    get:
      description: Get a list of apps installed for an user.
      operationId: getAppInstallsForUser
      parameters:
      - description: Expand relationships.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - app
            type: string
          type: array
        style: form
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_200_response'
          description: A list of apps installed for the specified organization.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of apps installed for an user.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /self/apps/installs/{install_id}:
    delete:
      description: Revoke access for an app by install ID.
      operationId: deleteUserAppInstallByID
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Install ID
        explode: false
        in: path
        name: install_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: The app install has been revoked.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke access for an app by install ID.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-06-19~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: app_installs
  /self/apps/{app_id}:
    delete:
      description: Revoke access for an app by app id
      operationId: revokeUserInstalledApp
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "204":
          description: The app has been revoked
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke an app
      tags:
      - Apps
      x-snyk-api-releases:
      - 2022-03-11
      x-snyk-api-version: 2022-03-11
    x-snyk-api-resource: user_app_installs
  /self/apps/{app_id}/sessions:
    get:
      description: Get a list of active OAuth sessions for the app.
      operationId: getUserAppSessions
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getUserAppSessions_200_response'
          description: A list of active OAuth sessions for the app.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Get a list of active OAuth sessions for the app.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-03-30~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: sessions
  /self/apps/{app_id}/sessions/{session_id}:
    delete:
      description: Revoke an active user app session.
      operationId: revokeUserAppSession
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: App ID
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
        style: simple
      - description: Session ID
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The user app sessions has been revoked.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              explode: false
              schema:
                type: string
              style: simple
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Unauthorized: the request requires an authentication token\
            \ or a token with more permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Conflict: The requested operation conflicts with the current\
            \ state of the resource in some way."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getAppInstallsForGroup_400_response'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              description: |
                A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
                https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
              example: 2021-07-01T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
            snyk-request-id:
              description: |
                A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
              example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
              explode: false
              schema:
                format: uuid
                type: string
              style: simple
            snyk-version-lifecycle-stage:
              description: |
                A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
              explode: false
              schema:
                enum:
                - wip
                - experimental
                - beta
                - ga
                - deprecated
                - sunset
                example: ga
                type: string
              style: simple
            snyk-version-requested:
              description: A header containing the version of the endpoint requested
                by the caller.
              example: 2021-06-04
              explode: false
              schema:
                description: Requested API version
                pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
                type: string
              style: simple
            snyk-version-served:
              description: A header containing the version of the endpoint that was
                served by the API.
              example: 2021-06-04
              explode: false
              schema:
                description: Resolved API version
                pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
                type: string
              style: simple
            sunset:
              description: |
                A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
                https://datatracker.ietf.org/doc/html/rfc8594
              example: 2021-08-02T00:00:00Z
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
      summary: Revoke an active user app session.
      tags:
      - Apps
      x-snyk-api-releases:
      - 2023-03-30~experimental
      - 2023-11-03
      x-snyk-api-version: 2023-11-03
    x-snyk-api-resource: sessions
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: 2021-07-01T00:00:00Z
      explode: false
      schema:
        format: date-time
        type: string
      style: simple
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      explode: false
      schema:
        type: string
      style: simple
      x-snyk-internal: true
    InternalGlooOrgIdHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      explode: false
      schema:
        format: uuid
        type: string
      style: simple
      x-snyk-internal: true
    Location:
      explode: false
      schema:
        type: string
      style: simple
    LocationHeader:
      description: |
        A header providing a URL for the location of a resource
      example: https://example.com/resource/4
      explode: false
      schema:
        format: url
        type: string
      style: simple
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      explode: false
      schema:
        format: uuid
        type: string
      style: simple
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: 2021-08-02T00:00:00Z
      explode: false
      schema:
        format: date-time
        type: string
      style: simple
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: 2021-06-04
      explode: false
      schema:
        $ref: '#/components/schemas/QueryVersion'
      style: simple
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: 2021-06-04
      explode: false
      schema:
        $ref: '#/components/schemas/ActualVersion'
      style: simple
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      explode: false
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        example: ga
        type: string
      style: simple
  parameters:
    AppId:
      description: App ID
      explode: false
      in: path
      name: app_id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    BotId:
      description: Bot ID
      explode: false
      in: path
      name: bot_id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    ChannelId:
      description: Slack Channel ID
      explode: false
      in: path
      name: channel_id
      required: true
      schema:
        format: uri
        type: string
      style: simple
    ChannelLimit:
      description: Number of results to return per page
      example: 100
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 1000
        format: int32
        maximum: 1000
        minimum: 10
        multipleOf: 10
        type: integer
      style: form
    ClientId:
      description: Client ID
      explode: false
      in: path
      name: client_id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
      x-go-name: ClientId
    CollectionId:
      description: Unique identifier for a collection
      explode: false
      in: path
      name: collection_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    CustomBaseImageId:
      description: Unique identifier for custom base image
      explode: false
      in: path
      name: custombaseimage_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    EndingBefore:
      description: Return the page of results immediately before this cursor
      example: v1.eyJpZCI6IjExMDAifQo=
      explode: true
      in: query
      name: ending_before
      required: false
      schema:
        type: string
      style: form
    Format:
      description: The desired SBOM format of the response.
      explode: true
      in: query
      name: format
      required: false
      schema:
        enum:
        - cyclonedx1.4+json
        - cyclonedx1.4+xml
        - spdx2.3+json
        example: cyclonedx1.4+json
        type: string
      style: form
    GroupId:
      description: The group ID of the custom base image
      explode: true
      in: query
      name: group_id
      required: false
      schema:
        format: uuid
        type: string
      style: form
    ImageId:
      description: Image ID
      explode: false
      in: path
      name: image_id
      required: true
      schema:
        example: sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676
        format: uri
        pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
        type: string
      style: simple
    ImageIds:
      description: A comma-separated list of Image IDs
      example:
      - sha256:b26f21f90920dba8401e30b89ad803587f81cce9bd1f92750f963556da2f930f
      - sha256:28984a62eb713aa5fff922ba06e8689f20e4b2f07de30f3d753b868389c0904f
      explode: false
      in: query
      name: image_ids
      required: false
      schema:
        items:
          format: uri
          pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
          type: string
        maxItems: 100
        type: array
      style: form
    IncludeInRecommendations:
      description: Whether this image should be recommended as a base image upgrade
      explode: true
      in: query
      name: include_in_recommendations
      required: false
      schema:
        type: boolean
      style: form
    InstallId:
      description: Install ID
      explode: false
      in: path
      name: install_id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    Limit:
      description: Number of results to return per page
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 10
        format: int32
        maximum: 100
        minimum: 10
        multipleOf: 10
        type: integer
      style: form
    Names:
      description: The container registry names
      example:
      - gcr.io/snyk/redis:5
      explode: false
      in: query
      name: names
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ImageName'
        maxItems: 1
        type: array
      style: form
    OrgId:
      description: The organization ID of the custom base image
      explode: true
      in: query
      name: org_id
      required: false
      schema:
        format: uuid
        type: string
      style: form
    PackageUrl:
      description: "A URI-encoded Package URL (purl). Supported purl types are apk,\
        \ cargo, cocoapods, composer, deb, gem, generic, golang, hex, maven, npm,\
        \ nuget, pub, pypi, rpm, and swift. A version for the package is also required."
      example: pkg%3Amaven%2Fcom.fasterxml.woodstox%2Fwoodstox-core%405.0.0
      explode: false
      in: path
      name: purl
      required: true
      schema:
        type: string
      style: simple
    Platform:
      description: The image Operating System and processor architecture
      example: linux/amd64
      explode: true
      in: query
      name: platform
      required: false
      schema:
        $ref: '#/components/schemas/Platform'
      style: form
    ProjectId:
      description: The ID of the container project that the custom base image is based
        off of.
      explode: true
      in: query
      name: project_id
      required: false
      schema:
        format: uuid
        type: string
      style: form
    Repository:
      description: The image repository
      explode: true
      in: query
      name: repository
      required: false
      schema:
        type: string
      style: form
    SortBy:
      description: "Which column to sort by. \nIf sorting by version, the versioning\
        \ schema is used.\n"
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        enum:
        - repository
        - tag
        - version
        type: string
      style: form
    SortDirection:
      description: Which direction to sort
      explode: true
      in: query
      name: sort_direction
      required: false
      schema:
        default: ASC
        enum:
        - ASC
        - DESC
        type: string
      style: form
    StartingAfter:
      description: Return the page of results immediately after this cursor
      example: v1.eyJpZCI6IjEwMDAifQo=
      explode: true
      in: query
      name: starting_after
      required: false
      schema:
        type: string
      style: form
    Tag:
      description: The image tag
      explode: true
      in: query
      name: tag
      required: false
      schema:
        type: string
      style: form
    TenantId:
      description: Tenant ID
      explode: false
      in: path
      name: tenant_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    Version:
      description: The requested version of the endpoint to process the request
      example: 2021-06-04
      explode: true
      in: query
      name: version
      required: true
      schema:
        $ref: '#/components/schemas/QueryVersion'
      style: form
  responses:
    "204":
      description: The operation completed successfully with no content
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Bad Request: A parameter provided as a part of the request was\
        \ invalid."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Unauthorized: the request requires an authentication token."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "403":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Forbidden: the request requires an authentication token with more\
        \ or different permissions."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Not Found: The resource being operated on could not be found."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "409":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Conflict: The requested operation conflicts with the current state\
        \ of the resource in some way."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Internal Server Error: An error was encountered while attempting\
        \ to process the request."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    AccessTokenTtlSeconds:
      description: "The access token time to live for your app, in seconds. It only\
        \ affects the newly generated access tokens, existing access token will  continue\
        \ to have their previous time to live as expiration."
      example: 3600
      maximum: 86400
      minimum: 3600
      type: number
    ActualVersion:
      description: Resolved API version
      pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
      type: string
    AppBot:
      additionalProperties: false
      properties:
        attributes:
          type: object
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        relationships:
          $ref: '#/components/schemas/AppBot_relationships'
        type:
          type: string
      required:
      - id
      - relationships
      - type
      type: object
    AppData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppResourceAttributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    AppDataWithSecret:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppResourceAttributesWithSecret'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    AppInstallData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppInstallData_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        relationships:
          $ref: '#/components/schemas/AppInstallData_relationships'
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    AppInstallDataWithSecret:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppInstallDataWithSecret_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        relationships:
          $ref: '#/components/schemas/AppInstallData_relationships'
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    AppInstallWithClient:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppInstallWithClient_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        relationships:
          $ref: '#/components/schemas/AppInstallWithClient_relationships'
        type:
          type: string
      required:
      - attributes
      - id
      - relationships
      - type
      type: object
    AppName:
      description: New name of the app to display to users during authorization flow.
      example: My App
      minLength: 1
      type: string
    AppPatchRequest:
      properties:
        data:
          $ref: '#/components/schemas/AppPatchRequest_data'
      required:
      - data
      type: object
    AppPostRequest:
      properties:
        data:
          $ref: '#/components/schemas/AppPostRequest_data'
      required:
      - data
      type: object
    AppPostResponse:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AppDataWithSecret'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    AppResourceAttributes:
      additionalProperties: false
      properties:
        access_token_ttl_seconds:
          description: "The access token time to live for your app, in seconds. It\
            \ only affects the newly generated access tokens, existing access token\
            \ will  continue to have their previous time to live as expiration."
          example: 3600
          maximum: 86400
          minimum: 3600
          type: number
        client_id:
          description: The oauth2 client id for the app.
          example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
          format: uuid
          type: string
          x-go-name: OauthClientId
        context:
          $ref: '#/components/schemas/Context'
        grant_type:
          $ref: '#/components/schemas/GrantType'
        is_confidential:
          description: A boolean to indicate if an app is confidential or not as per
            the OAuth2 RFC. Confidential apps can securely store secrets. Examples
            of non-confidential apps are full web-based or CLIs.
          example: true
          type: boolean
        is_public:
          description: A boolean to indicate if an app is publicly available or not.
          example: false
          type: boolean
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        org_public_id:
          format: uuid
          type: string
        redirect_uris:
          description: List of allowed redirect URIs to call back after authentication.
          example:
          - https://example.com/callback
          items:
            format: uri
            type: string
          minItems: 1
          type: array
        scopes:
          description: The scopes this app is allowed to request during authorization.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - access_token_ttl_seconds
      - context
      - grant_type
      - is_confidential
      - is_public
      - name
      - scopes
      type: object
    AppResourceAttributesWithSecret:
      additionalProperties: false
      properties:
        access_token_ttl_seconds:
          description: "The access token time to live for your app, in seconds. It\
            \ only affects the newly generated access tokens, existing access token\
            \ will  continue to have their previous time to live as expiration."
          example: 3600
          maximum: 86400
          minimum: 3600
          type: number
        client_id:
          description: The oauth2 client id for the app.
          example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
          format: uuid
          type: string
          x-go-name: OauthClientId
        client_secret:
          description: "The oauth2 client secret for the app. This is the only time\
            \ this secret will be returned, store it securely and donâ€™t lose it."
          example: "snyk_cs_ctZW0JsWG^Bm`*oPo=mnV26qU_6pjxht<]S_v1"
          minLength: 1
          type: string
        context:
          $ref: '#/components/schemas/Context'
        grant_type:
          $ref: '#/components/schemas/GrantType'
        is_confidential:
          description: A boolean to indicate if an app is confidential or not as per
            the OAuth2 RFC. Confidential apps can securely store secrets. Examples
            of non-confidential apps are full web-based or CLIs.
          example: true
          type: boolean
        is_public:
          description: A boolean to indicate if an app is publicly available or not.
          example: false
          type: boolean
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        org_public_id:
          format: uuid
          type: string
        redirect_uris:
          description: List of allowed redirect URIs to call back after authentication.
          example:
          - https://example.com/callback
          items:
            format: uri
            type: string
          minItems: 1
          type: array
        scopes:
          description: The scopes this app is allowed to request during authorization.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - access_token_ttl_seconds
      - client_id
      - client_secret
      - context
      - grant_type
      - is_confidential
      - is_public
      - name
      - redirect_uris
      - scopes
      type: object
    AuditLogSearch:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditLogSearch_items_inner'
          type: array
        type:
          type: string
      type: object
    AutoDependencyUpgradeSettings:
      additionalProperties: false
      description: "Automatically create pull requests on recurring tests for dependencies\
        \ as upgrades become available. If not specified, settings will be inherited\
        \ from the Project's integration."
      properties:
        ignored_dependencies:
          description: Dependencies which should NOT be included in an automatic upgrade
            operation.
          example:
          - typescript
          items:
            type: string
          type: array
        is_enabled:
          description: Automatically raise pull requests to update out-of-date dependencies.
          example: true
          type: boolean
        is_inherited:
          description: Apply the auto dependency integration settings of the Organization
            to this project.
          example: true
          type: boolean
        is_major_upgrade_enabled:
          description: Include major version in dependency upgrade recommendation.
          example: true
          type: boolean
        limit:
          description: "Limit of dependency upgrade PRs which can be opened simultaneously.\
            \ When the limit is reached, no new upgrade PRs are created. If specified,\
            \ must be between 1 and 10."
          example: 10
          maximum: 10
          minimum: 1
          type: number
        minimum_age:
          description: "Minimum dependency maturity period in days. If specified,\
            \ must be between 1 and 365."
          example: 365
          type: number
      type: object
    AutoRemediationPRsSettings:
      additionalProperties: false
      description: "Automatically raise pull requests on recurring tests to fix new\
        \ and existing vulnerabilities. If not specified, settings will be inherited\
        \ from the Project's integration."
      properties:
        is_backlog_prs_enabled:
          description: Automatically create pull requests on scheduled tests for known
            (backlog) vulnerabilities.
          example: true
          type: boolean
        is_fresh_prs_enabled:
          description: Automatically create pull requests on scheduled tests for new
            vulnerabilities.
          example: true
          type: boolean
        is_patch_remediation_enabled:
          description: Include vulnerability patches in automatic pull requests.
          example: true
          type: boolean
      type: object
    BulkPackageUrlsRequestBody:
      properties:
        data:
          $ref: '#/components/schemas/BulkPackageUrlsRequestBody_data'
      required:
      - data
      type: object
    ClientId:
      description: The oauth2 client id for the app.
      example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
      format: uuid
      type: string
      x-go-name: OauthClientId
    ClientSecret:
      description: "The oauth2 client secret for the app. This is the only time this\
        \ secret will be returned, store it securely and donâ€™t lose it."
      example: "snyk_cs_ctZW0JsWG^Bm`*oPo=mnV26qU_6pjxht<]S_v1"
      minLength: 1
      type: string
    CollectionAttributes:
      additionalProperties: false
      properties:
        is_generated:
          type: boolean
        name:
          description: User-defined name of the collection
          maxLength: 255
          minLength: 1
          pattern: "^([a-zA-Z0-9 _\\-\\/:.])+$"
          type: string
      required:
      - name
      type: object
    CollectionMeta:
      additionalProperties: false
      properties:
        issues_critical_count:
          description: The sum of critical severity issues of the collection's projects
          example: 10
          type: number
        issues_high_count:
          description: The sum of high severity issues of the collection's projects
          example: 10
          type: number
        issues_low_count:
          description: The sum of low severity issues of the collection's projects
          example: 10
          type: number
        issues_medium_count:
          description: The sum of medium severity issues of the collection's projects
          example: 10
          type: number
        projects_count:
          description: The amount of projects belonging to this collection
          example: 7
          type: number
      required:
      - issues_critical_count
      - issues_high_count
      - issues_low_count
      - issues_medium_count
      - projects_count
      type: object
    CollectionRelationships:
      additionalProperties: false
      properties:
        created_by_user:
          $ref: '#/components/schemas/CollectionRelationships_created_by_user'
        org:
          $ref: '#/components/schemas/CollectionRelationships_org'
      required:
      - created_by_user
      - org
      type: object
    CollectionResponse:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CollectionAttributes'
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/CollectionMeta'
        relationships:
          $ref: '#/components/schemas/CollectionRelationships'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - id
      - meta
      - relationships
      - type
      type: object
    CommonIssueModel:
      properties:
        attributes:
          $ref: '#/components/schemas/CommonIssueModel_attributes'
        id:
          description: The Snyk ID of the vulnerability.
          example: SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754
          type: string
        type:
          description: The type of the REST resource. Always â€˜issueâ€™.
          example: issue
          type: string
      type: object
    CommonIssueModelVTwo:
      properties:
        attributes:
          $ref: '#/components/schemas/CommonIssueModelVTwo_attributes'
        id:
          description: The Snyk ID of the vulnerability.
          example: SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754
          type: string
        type:
          description: The type of the REST resource. Always â€˜issueâ€™.
          example: issue
          type: string
      type: object
    ContainerBuildArgs:
      additionalProperties: false
      properties:
        platform:
          type: string
      required:
      - platform
      type: object
    Context:
      description: "Allow installing the app to a org/group or to a user, default\
        \ tenant."
      enum:
      - tenant
      - user
      type: string
    Coordinate:
      properties:
        remedies:
          items:
            $ref: '#/components/schemas/Remedy'
          type: array
        representation:
          description: The affected versions of this vulnerability.
          items:
            example: 5.3.0
            type: string
          type: array
      type: object
    CoordinateVTwo:
      properties:
        remedies:
          items:
            $ref: '#/components/schemas/Remedy'
          type: array
        representations:
          description: The affected versions of this vulnerability.
          items:
            $ref: '#/components/schemas/CoordinateVTwo_representations_inner'
          type: array
      required:
      - representations
      type: object
    CreateCollectionRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCollectionRequest_data'
      required:
      - data
      type: object
    CustomBaseImageAttributes:
      additionalProperties: false
      properties:
        include_in_recommendations:
          description: "Whether this image should be recommended as a base image upgrade.\
            \ \nIf set to true, this image could be shown as a base image upgrade\
            \ to other projects.\nIf set to false this image will never be recommended\
            \ as an upgrade.\n"
          example: true
          type: boolean
        project_id:
          description: |
            The ID of the container project that the custom base image is based off of.
            The attributes of this custom base image are taken from the latest snapshot at the time of creation.
            This means that no changes should be made to the original project after the creation of the custom base image,
            as new snapshots created from any changes will NOT be picked up.
          example: 2cab3939-d112-4ef0-836d-e09c87cbe69b
          format: uuid
          type: string
        versioning_schema:
          $ref: '#/components/schemas/VersioningSchema'
      required:
      - include_in_recommendations
      - project_id
      type: object
    CustomBaseImageCollectionResponse:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/CustomBaseImageCollectionResponse_data_inner'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      type: object
    CustomBaseImagePatchRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CustomBaseImagePatchRequest_data'
      required:
      - data
      type: object
    CustomBaseImagePostRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CustomBaseImagePostRequest_data'
      required:
      - data
      type: object
    CustomBaseImageResource:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CustomBaseImageAttributes'
        id:
          example: 2cab3939-d112-4ef0-836d-e09c87cbe69b
          format: uuid
          type: string
        type:
          example: custom_base_image
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    CustomBaseImageResponse:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CustomBaseImageResource'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
      - data
      - jsonapi
      type: object
    CustomBaseImageSnapshot:
      properties:
        group_id:
          format: uuid
          type: string
        include_in_recommendations:
          type: boolean
        org_id:
          format: uuid
          type: string
        project_id:
          format: uuid
          type: string
        repository:
          type: string
        tag:
          type: string
      type: object
    CycloneDxComponent:
      properties:
        bom-ref:
          example: common-util@3.0.0
          type: string
          xml:
            attribute: true
        name:
          example: acme-lib
          type: string
        purl:
          example: pkg:golang/golang.org/x/text@v0.3.7
          type: string
        type:
          example: library
          type: string
          xml:
            attribute: true
        version:
          example: 1.0.0
          type: string
      type: object
      xml:
        name: component
    CycloneDxDependency:
      properties:
        dependsOn:
          example:
          - web-framework@1.0.0
          - persistence@3.1.0
          items:
            type: string
          type: array
          xml:
            name: dependency
        ref:
          example: common-util@3.0.0
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: dependency
    CycloneDxDocument:
      properties:
        bomFormat:
          enum:
          - CycloneDX
          example: CycloneDX
          type: string
        components:
          description: A list of included software components
          items:
            $ref: '#/components/schemas/CycloneDxComponent'
          type: array
        dependencies:
          items:
            $ref: '#/components/schemas/CycloneDxDependency'
          type: array
        metadata:
          $ref: '#/components/schemas/CycloneDxMetadata'
        specVersion:
          example: "1.4"
          type: string
        version:
          example: 1
          type: integer
      required:
      - bomFormat
      - dependencies
      - metadata
      - specVersion
      - version
      type: object
    CycloneDxMetadata:
      properties:
        component:
          $ref: '#/components/schemas/CycloneDxComponent'
        properties:
          items:
            $ref: '#/components/schemas/CycloneDxProperty'
          type: array
          xml:
            wrapped: true
        timestamp:
          example: 2021-02-09T20:40:32Z
          type: string
        tools:
          items:
            $ref: '#/components/schemas/CycloneDxTool'
          type: array
          xml:
            wrapped: true
      type: object
    CycloneDxProperty:
      properties:
        name:
          example: snyk:org_id
          type: string
          xml:
            attribute: true
        value:
          example: f1bb66d1-a94e-4574-aea1-9697d794e04d
          type: string
      type: object
      xml:
        name: property
    CycloneDxTool:
      properties:
        name:
          example: Snyk Open Source
          type: string
        vendor:
          example: Snyk
          type: string
      type: object
      xml:
        name: tool
    CycloneDxXmlDocument:
      properties:
        components:
          description: A list of included software components
          items:
            $ref: '#/components/schemas/CycloneDxComponent'
          type: array
          xml:
            wrapped: true
        dependencies:
          items:
            $ref: '#/components/schemas/CycloneDxDependency'
          type: array
          xml:
            wrapped: true
        metadata:
          $ref: '#/components/schemas/CycloneDxMetadata'
      required:
      - components
      - dependencies
      - metadata
      type: object
      xml:
        name: bom
    DeleteProjectsFromCollectionRequest:
      additionalProperties: false
      properties:
        data:
          description: IDs of items to remove from a collection
          items:
            $ref: '#/components/schemas/DeleteProjectsFromCollectionRequest_data_inner'
          maxItems: 100
          type: array
      required:
      - data
      type: object
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: "An application-specific error code, expressed as a string\
            \ value."
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The request was missing these required fields: ..."
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          $ref: '#/components/schemas/getAppInstallsForGroup_400_response_errors_inner_source'
        status:
          description: "The HTTP status code applicable to this problem, expressed\
            \ as a string value."
          example: "400"
          pattern: "^[45]\\d\\d$"
          type: string
        title:
          description: "A short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization."
          example: Bad request
          type: string
      required:
      - detail
      - status
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - errors
      - jsonapi
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    GetProjectSettingsCollection:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectSettingsData'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    GetProjectsOfCollectionResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectOfCollection'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      type: object
    GrantType:
      description: An authorization grant is a credential representing the resource
        owner's authorization (to access its protected resources) used by the client
        to obtain an access token. The grant type represents the way your app will
        get the access token.
      enum:
      - authorization_code
      - client_credentials
      type: string
    GroupIacSettingsRequest:
      description: The Infrastructure as Code settings for a group.
      properties:
        attributes:
          $ref: '#/components/schemas/GroupIacSettingsRequest_attributes'
        type:
          description: Content type
          example: iac_settings
          type: string
      required:
      - attributes
      - type
      type: object
    GroupIacSettingsResponse:
      description: The Infrastructure as Code settings for a group.
      properties:
        attributes:
          $ref: '#/components/schemas/GroupIacSettingsResponse_attributes'
        id:
          description: ID
          example: ea536a06-0566-40ca-b96b-155568aa2027
          format: uuid
          type: string
        type:
          description: Content type
          example: iac_settings
          type: string
      type: object
    HelloWorld:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/HelloWorld_attributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    Id:
      format: uuid
      type: string
    Image:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ImageAttributes'
        id:
          example: sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676
          format: uri
          pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
          type: string
        relationships:
          $ref: '#/components/schemas/Image_relationships'
        type:
          enum:
          - container_image
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    ImageAttributes:
      properties:
        layers:
          items:
            $ref: '#/components/schemas/ImageDigest'
          minItems: 1
          type: array
        names:
          items:
            $ref: '#/components/schemas/ImageName'
          type: array
        platform:
          $ref: '#/components/schemas/Platform'
      required:
      - layers
      - platform
      type: object
    ImageDigest:
      example: sha256:2bd864580926b790a22c8b96fd74496fe87b3c59c0774fe144bab2788e78e676
      format: uri
      pattern: "^sha256(:|%3A)[a-f0-9]{64}$"
      type: string
    ImageName:
      example: gcr.io/snyk/redis:5
      pattern: "^((?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+)?(?::[0-9]+)?\\\
        /)?[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?(?:(?:\\/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?)(?::([\\\
        w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][A-Fa-f0-9]{32,}))?$"
      type: string
    ImageTargetRef:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ImageTargetRefAttributes'
        id:
          example: 3cd4af4c-fb15-45c4-9acd-8e8fcc6690af
          format: uuid
          type: string
        type:
          enum:
          - image_target_reference
          type: string
      type: object
    ImageTargetRefAttributes:
      properties:
        platform:
          $ref: '#/components/schemas/Platform'
        target_id:
          format: uuid
          type: string
        target_reference:
          type: string
      type: object
    InheritFromParent:
      description: Which parent to inherit settings from.
      enum:
      - group
      type: string
    IsActive:
      description: Current status of the project settings.
      example: true
      type: boolean
    IsConfidential:
      description: A boolean to indicate if an app is confidential or not as per the
        OAuth2 RFC. Confidential apps can securely store secrets. Examples of non-confidential
        apps are full web-based or CLIs.
      example: true
      type: boolean
    IsEnabled:
      description: Whether the custom rules feature is enabled or not.
      example: true
      type: boolean
    IsPublic:
      description: A boolean to indicate if an app is publicly available or not.
      example: false
      type: boolean
    IssuesMeta:
      properties:
        package:
          $ref: '#/components/schemas/PackageMeta'
      type: object
    IssuesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonIssueModel'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
        meta:
          $ref: '#/components/schemas/IssuesMeta'
      type: object
    IssuesWithPurlsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CommonIssueModelVTwo'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
        meta:
          $ref: '#/components/schemas/IssuesWithPurlsResponse_meta'
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
          type: string
      required:
      - version
      type: object
    LatestDependencyTotal:
      additionalProperties: false
      properties:
        total:
          type: number
        updated_at:
          format: date-time
          type: string
      type: object
    LatestIssueCounts:
      additionalProperties: false
      properties:
        critical:
          type: number
        high:
          type: number
        low:
          type: number
        medium:
          type: number
        updated_at:
          format: date-time
          type: string
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the linkâ€™s URL.
        example: https://example.com/api/resource
        type: string
      - $ref: '#/components/schemas/LinkProperty_oneOf'
    Links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    ManualRemediationPRsSettings:
      additionalProperties: false
      description: "Manually raise pull requests to fix new and existing vulnerabilities.\
        \ If not specified, settings will be inherited from the Project's integration."
      properties:
        is_patch_remediation_enabled:
          description: Include vulnerability patches in manual pull requests.
          example: true
          type: boolean
      type: object
    MemberRoleRelationship:
      additionalProperties: false
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/MemberRoleRelationship_data'
      required:
      - data
      type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      type: object
    NugetBuildArgs:
      additionalProperties: false
      properties:
        target_framework:
          type: string
      required:
      - target_framework
      type: object
    OciRegistryTag:
      description: The tag for an OCI artifact inside an OCI registry.
      example: latest
      type: string
    OciRegistryUrl:
      description: The URL to an OCI registry.
      example: https://registry-1.docker.io/account/bundle
      type: string
    Org:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgAttributes'
        id:
          description: The Snyk ID of the organization.
          example: 59d6d97e-3106-4ebb-b608-352fad9c5b34
          format: uuid
          type: string
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    OrgAttributes:
      additionalProperties: false
      properties:
        created_at:
          description: The time the organization was created.
          example: 2022-03-16T00:00:00Z
          format: date-time
          type: string
        group_id:
          description: The Snyk ID of the group to which the organization belongs.
          example: 59d6d97e-3106-4ebb-b608-352fad9c5b34
          format: uuid
          type: string
        is_personal:
          description: "Whether the organization is independent (that is, not part\
            \ of a group)."
          example: true
          type: boolean
        name:
          description: The display name of the organization.
          example: My Org
          type: string
        slug:
          description: The canonical (unique and URL-friendly) name of the organization.
          example: my-org
          type: string
        updated_at:
          description: The time the organization was last modified.
          example: 2022-03-16T00:00:00Z
          format: date-time
          type: string
      required:
      - is_personal
      - name
      - slug
      type: object
    OrgIacSettingsRequest:
      description: The Infrastructure as Code settings for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgIacSettingsRequest_attributes'
        type:
          description: Content type
          example: iac_settings
          type: string
      required:
      - attributes
      - type
      type: object
    OrgIacSettingsResponse:
      description: The Infrastructure as Code settings for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgIacSettingsResponse_attributes'
        id:
          description: ID
          example: ea536a06-0566-40ca-b96b-155568aa2027
          format: uuid
          type: string
        type:
          description: Content type
          example: iac_settings
          type: string
      type: object
    OrgInvitation:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgInvitationAttributes'
        id:
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/OrgInvitation_relationships'
        type:
          enum:
          - org_invitation
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    OrgInvitationAttributes:
      additionalProperties: false
      properties:
        email:
          description: The email address of the invitee.
          example: example@email.com
          type: string
        is_active:
          description: |
            The active status of the invitation. is_active of true indicates that the invitation is still waiting to be accepted. Invitations are considered inactive when accepted or revoked.
          example: true
          type: boolean
        role:
          description: The role public ID that will be granted to to invitee on acceptance.
          example: f1968726-1dca-42d4-a4dc-80cab99e2b6c
          format: uuid
          type: string
      required:
      - email
      - is_active
      - role
      type: object
    OrgInvitationPostAttributes:
      additionalProperties: false
      properties:
        email:
          description: The email address of the invitee.
          example: example@email.com
          type: string
        role:
          description: The role public ID that will be granted to to invitee on acceptance.
          example: f1968726-1dca-42d4-a4dc-80cab99e2b6c
          format: uuid
      required:
      - email
      - role
      type: object
    OrgInvitationPostData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgInvitationPostAttributes'
        relationships:
          $ref: '#/components/schemas/OrgInvitation_relationships'
        type:
          enum:
          - org_invitation
          type: string
      required:
      - attributes
      - type
      type: object
    OrgRelationships:
      additionalProperties: false
      properties:
        member_role:
          $ref: '#/components/schemas/MemberRoleRelationship'
      type: object
    OrgRoleAttributes:
      properties:
        name:
          description: The display name of the organization role.
          example: Collaborator
          type: string
      type: object
    OrgUpdateAttributes:
      additionalProperties: false
      properties:
        name:
          description: The display name of the organization.
          example: My Org
          maxLength: 60
          minLength: 1
          type: string
      required:
      - name
      type: object
    OrgWithRelationships:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgAttributes'
        id:
          description: The Snyk ID of the organization.
          example: 59d6d97e-3106-4ebb-b608-352fad9c5b34
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/OrgRelationships'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    Package:
      properties:
        name:
          description: The packageâ€™s name
          example: spring-core
          type: string
        namespace:
          description: "A name prefix, such as a maven group id or docker image owner"
          example: org.springframework
          type: string
        type:
          description: The package type or protocol
          example: maven
          type: string
        url:
          description: The purl of the package
          example: pkg:maven/com.fasterxml.woodstox/woodstox-core@5.0.0
          type: string
        version:
          description: The version of the package
          example: 1.0.0
          type: string
      required:
      - name
      - type
      - url
      - version
      type: object
    PackageMeta:
      properties:
        name:
          description: The packageâ€™s name
          example: woodstox-core
          type: string
        namespace:
          description: "A name prefix, such as a maven group id or docker image owner"
          example: com.fasterxml.woodstox
          type: string
        type:
          description: The package type or protocol
          example: maven
          type: string
        url:
          description: The purl of the package
          example: pkg:maven/com.fasterxml.woodstox/woodstox-core@5.0.0
          type: string
        version:
          description: The version of the package
          example: 5.0.0
          type: string
      type: object
    PackageRepresentation:
      properties:
        package:
          $ref: '#/components/schemas/PackageMeta'
      type: object
    PaginatedLinks:
      additionalProperties: false
      example:
        first: https://example.com/api/resource?ending_before=v1.eyJpZCI6IjExIn0K
        last: https://example.com/api/resource?starting_after=v1.eyJpZCI6IjMwIn0K
        next: https://example.com/api/resource?starting_after=v1.eyJpZCI6IjEwIn0K
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    PatchProjectRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PatchProjectRequest_data'
      required:
      - data
      type: object
    Platform:
      enum:
      - aix/ppc64
      - android/386
      - android/amd64
      - android/arm
      - android/arm/v5
      - android/arm/v6
      - android/arm/v7
      - android/arm64
      - android/arm64/v8
      - darwin/amd64
      - darwin/arm
      - darwin/arm/v5
      - darwin/arm/v6
      - darwin/arm/v7
      - darwin/arm64
      - darwin/arm64/v8
      - dragonfly/amd64
      - freebsd/386
      - freebsd/amd64
      - freebsd/arm
      - freebsd/arm/v5
      - freebsd/arm/v6
      - freebsd/arm/v7
      - illumos/amd64
      - ios/arm64
      - ios/arm64/v8
      - js/wasm
      - linux/386
      - linux/amd64
      - linux/arm
      - linux/arm/v5
      - linux/arm/v6
      - linux/arm/v7
      - linux/arm64
      - linux/arm64/v8
      - linux/loong64
      - linux/mips
      - linux/mipsle
      - linux/mips64
      - linux/mips64le
      - linux/ppc64
      - linux/ppc64le
      - linux/riscv64
      - linux/s390x
      - linux/x86_64
      - netbsd/386
      - netbsd/amd64
      - netbsd/arm
      - netbsd/arm/v5
      - netbsd/arm/v6
      - netbsd/arm/v7
      - openbsd/386
      - openbsd/amd64
      - openbsd/arm
      - openbsd/arm/v5
      - openbsd/arm/v6
      - openbsd/arm/v7
      - openbsd/arm64
      - openbsd/arm64/v8
      - plan9/386
      - plan9/amd64
      - plan9/arm
      - plan9/arm/v5
      - plan9/arm/v6
      - plan9/arm/v7
      - solaris/amd64
      - windows/386
      - windows/amd64
      - windows/arm
      - windows/arm/v5
      - windows/arm/v6
      - windows/arm/v7
      - windows/arm64
      - windows/arm64/v8
      example: linux/amd64
      type: string
    Problem:
      properties:
        disclosed_at:
          description: When this problem was disclosed to the public.
          format: date-time
          type: string
        discovered_at:
          description: When this problem was first discovered.
          format: date-time
          type: string
        id:
          example: CWE-61
          maxLength: 1024
          minLength: 1
          type: string
        source:
          example: CVE
          maxLength: 64
          minLength: 1
          type: string
        updated_at:
          description: When this problem was last updated.
          format: date-time
          type: string
        url:
          description: An optional URL for this problem.
          format: uri
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - id
      - source
      type: object
    ProjectAttributes:
      additionalProperties: false
      properties:
        build_args:
          $ref: '#/components/schemas/ProjectAttributes_build_args'
        business_criticality:
          example:
          - medium
          items:
            enum:
            - critical
            - high
            - medium
            - low
            type: string
          type: array
        created:
          description: The date that the project was created on
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          type: string
        environment:
          example:
          - external
          - hosted
          items:
            enum:
            - frontend
            - backend
            - internal
            - external
            - mobile
            - saas
            - onprem
            - hosted
            - distributed
            type: string
          type: array
        lifecycle:
          example:
          - production
          items:
            enum:
            - production
            - development
            - sandbox
            type: string
          type: array
        name:
          description: Project name.
          example: snyk/goof
          type: string
        origin:
          description: The origin the project was added from.
          example: github
          type: string
        read_only:
          description: Whether the project is read-only
          type: boolean
        settings:
          $ref: '#/components/schemas/ProjectSettings'
        status:
          description: Describes if a project is currently monitored or it is de-activated.
          enum:
          - active
          - inactive
          example: active
          type: string
        tags:
          example:
          - key: tag-key
            value: tag-value
          items:
            $ref: '#/components/schemas/PatchProjectRequest_data_attributes_tags_inner'
          type: array
        target_file:
          description: "Path within the target to identify a specific file/directory/image\
            \ etc. when scanning just part  of the target, and not the entity."
          example: package.json
          type: string
        target_reference:
          description: The additional information required to resolve which revision
            of the resource should be scanned.
          example: main
          type: string
        target_runtime:
          description: "Dotnet Target, for relevant projects"
          type: string
        type:
          description: The package manager of the project.
          example: maven
          type: string
      required:
      - created
      - name
      - origin
      - read_only
      - settings
      - status
      - target_file
      - target_reference
      - type
      type: object
    ProjectMeta:
      additionalProperties: false
      properties:
        imported:
          description: The time the project was imported
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          type: string
        issues_critical_count:
          description: The sum of critical severity issues of the project
          example: 10
          type: number
        issues_high_count:
          description: The sum of high severity issues of the project
          example: 10
          type: number
        issues_low_count:
          description: The sum of low severity issues of the project
          example: 10
          type: number
        issues_medium_count:
          description: The sum of medium severity issues of the project
          example: 10
          type: number
        last_tested_at:
          description: The time the project was last tested
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          type: string
      required:
      - imported
      - issues_critical_count
      - issues_high_count
      - issues_low_count
      - issues_medium_count
      - last_tested_at
      type: object
    ProjectOfCollection:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/ProjectMeta'
        relationships:
          $ref: '#/components/schemas/ProjectOfCollection_relationships'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - meta
      - relationships
      - type
      type: object
    ProjectRelationships:
      additionalProperties: false
      properties:
        importer:
          $ref: '#/components/schemas/Relationship'
        organization:
          $ref: '#/components/schemas/Relationship'
        owner:
          $ref: '#/components/schemas/Relationship'
        target:
          $ref: '#/components/schemas/ProjectRelationships_target'
      required:
      - organization
      - target
      type: object
    ProjectRelationshipsTarget:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ProjectRelationshipsTarget_data'
        links:
          $ref: '#/components/schemas/RelatedLink'
      required:
      - data
      - links
      type: object
    ProjectSettings:
      additionalProperties: false
      properties:
        auto_dependency_upgrade:
          $ref: '#/components/schemas/AutoDependencyUpgradeSettings'
        auto_remediation_prs:
          $ref: '#/components/schemas/AutoRemediationPRsSettings'
        manual_remediation_prs:
          $ref: '#/components/schemas/ManualRemediationPRsSettings'
        pull_request_assignment:
          $ref: '#/components/schemas/PullRequestAssignmentSettings'
        pull_requests:
          $ref: '#/components/schemas/PullRequestsSettings'
        recurring_tests:
          $ref: '#/components/schemas/RecurringTestsSettings'
      required:
      - pull_requests
      - recurring_tests
      type: object
    ProjectSettingsData:
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectSettingsData_attributes'
        id:
          format: uuid
          type: string
        type:
          example: slack
          type: string
      type: object
    ProjectSettingsPatchRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ProjectSettingsPatchRequest_data'
      type: object
    PublicApp:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PublicAppAttributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        type:
          type: string
      required:
      - id
      - type
      type: object
    PublicAppAttributes:
      properties:
        client_id:
          description: The oauth2 client id for the app.
          example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
          format: uuid
          type: string
          x-go-name: OauthClientId
        context:
          $ref: '#/components/schemas/Context'
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        scopes:
          description: The scopes this app is allowed to request during authorization.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - client_id
      - name
      type: object
    PublicAppData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PublicAppData_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        type:
          type: string
      required:
      - id
      - type
      type: object
    PullRequestAssignmentSettings:
      additionalProperties: false
      description: "Automatically assign pull requests created by Snyk (limited to\
        \ private repos). If not specified, settings will be inherited from the Project's\
        \ integration."
      properties:
        assignees:
          description: Manually specify users to assign (and all will be assigned).
          example:
          - my-github-username
          items:
            type: string
          type: array
        is_enabled:
          description: Automatically assign pull requests created by Snyk.
          example: true
          type: boolean
        type:
          description: "Automatically assign the last user to change the manifest\
            \ file (\"auto\"), or manually specify a list of users (\"manual\")."
          enum:
          - auto
          - manual
          example: auto
          type: string
      type: object
    PullRequestsSettings:
      additionalProperties: false
      description: Settings which describe how pull requests for a project are tested.
      properties:
        fail_only_for_issues_with_fix:
          description: Only fail when the issues found have a fix available.
          example: true
          type: boolean
        policy:
          description: "Fail if the project has any issues (\"all\"), or fail if a\
            \ PR is introducing a new dependency with issues (\"only_new\"). If this\
            \ value is unset, the setting is inherited from the org default."
          enum:
          - all
          - only_new
          example: all
          type: string
        severity_threshold:
          description: "Only fail for issues greater than or equal to the specified\
            \ severity. If this value is unset, the setting is inherited from the\
            \ org default."
          enum:
          - low
          - medium
          - high
          - critical
          example: high
          type: string
      type: object
    QueryVersion:
      description: Requested API version
      pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
      type: string
    RecurringTestsSettings:
      additionalProperties: false
      description: Settings which describe how recurring tests are run for a project.
      properties:
        frequency:
          description: Test frequency of a project. Also controls when automated PRs
            may be created.
          enum:
          - daily
          - weekly
          - never
          example: daily
          type: string
      type: object
    RedirectUris:
      description: List of allowed redirect URIs to call back after authentication.
      example:
      - https://example.com/callback
      items:
        format: uri
        type: string
      minItems: 1
      type: array
    RedirectUrisNoMin:
      description: List of allowed redirect URIs to call back after authentication.
      example:
      - https://example.com/callback
      items:
        format: uri
        type: string
      type: array
    RelatedLink:
      additionalProperties: false
      example:
        related: https://example.com/api/other_resource
      properties:
        related:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Relationship:
      example:
        data:
          id: 4a72d1db-b465-4764-99e1-ecedad03b06a
          type: resource
        links:
          related:
            href: https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a
      properties:
        data:
          $ref: '#/components/schemas/Relationship_data'
        links:
          $ref: '#/components/schemas/RelatedLink'
        meta:
          additionalProperties: true
          description: Free-form object that may contain non-standard information.
          example:
            key1: value1
            key2:
              sub_key: sub_value
            key3:
            - array_value1
            - array_value2
          type: object
      required:
      - data
      - links
      type: object
    Remedy:
      properties:
        description:
          description: A markdown-formatted optional description of this remedy.
          example: "Upgrade the package version to 5.4.0,6.4.0 to fix this vulnerability"
          type: string
        details:
          $ref: '#/components/schemas/Remedy_details'
        type:
          description: The type of the remedy. Always â€˜indeterminateâ€™.
          example: indeterminate
          type: string
      type: object
    ResourcePath:
      example: ",5.4.0),[6.0.0.pr1,6.4.0)"
      maxLength: 2024
      minLength: 1
      type: string
    ResourcePathRepresentation:
      description: An object that contains an opaque identifying string.
      properties:
        resource_path:
          example: ",5.4.0),[6.0.0.pr1,6.4.0)"
          maxLength: 2024
          minLength: 1
          type: string
      required:
      - resource_path
      type: object
    SastEnablement:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SastEnablement_attributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    SbomResource:
      additionalProperties: false
      properties:
        id:
          example: b68b0b85-d039-4c05-abc0-04eb50ca0fe9
          format: uuid
          type: string
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - type
      type: object
    SbomResponse:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SbomResource'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - data
      - jsonapi
      type: object
    Scopes:
      description: The scopes this app is allowed to request during authorization.
      items:
        minLength: 1
        type: string
      minItems: 1
      type: array
    SelfLink:
      additionalProperties: false
      example:
        self: https://example.com/api/this_resource
      properties:
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    ServiceAccount:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links'
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    SessionAttributes:
      properties:
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      type: object
    SessionData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SessionAttributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    SettingsAttributes:
      additionalProperties: false
      properties:
        severity_threshold:
          $ref: '#/components/schemas/SeverityThreshold'
        target_channel_id:
          example: slack://channel?team=team-id&id=channel-id
          format: uri
          type: string
      required:
      - severity_threshold
      - target_channel_id
      type: object
    SettingsRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SettingsRequest_data'
      required:
      - data
      type: object
    Severity:
      properties:
        level:
          example: medium
          type: string
        score:
          description: The CVSSv3 value of the vulnerability.
          example: 5.3
          nullable: true
          type: number
        source:
          description: "The source of this severity. The value must be the id of a\
            \ referenced problem or class, in which case that problem or class is\
            \ the source of this issue. If source is omitted, this severity is sourced\
            \ internally in the Snyk application."
          example: Snyk
          type: string
        vector:
          description: The CVSSv3 value of the vulnerability.
          example: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L
          nullable: true
          type: string
      type: object
    SeverityThreshold:
      description: "Minimum Snyk issue severity to send a notification for, messages\
        \ will not be sent for any issue below this value"
      enum:
      - low
      - medium
      - high
      - critical
      example: high
      type: string
    SlackChannel:
      properties:
        attributes:
          $ref: '#/components/schemas/SlackChannel_attributes'
        id:
          example: slack://channel?team=T123456&id=C123456
          format: uri
          type: string
        type:
          example: slack_channel
          type: string
      type: object
    SlackDefaultSettingsData:
      properties:
        attributes:
          $ref: '#/components/schemas/SlackDefaultSettingsData_attributes'
        id:
          format: uuid
          type: string
        type:
          example: slack
          type: string
      type: object
    Slots:
      properties:
        disclosure_time:
          description: The time at which this vulnerability was disclosed.
          example: 2022-06-16T13:51:13Z
          format: date-time
          type: string
        exploit:
          description: "The exploit maturity. Value of â€˜No Dataâ€™, â€˜Not Definedâ€™, â€˜\
            Unprovenâ€™, â€˜Proof of Conceptâ€™, â€˜Functionalâ€™ or â€˜Highâ€™."
          example: Not Defined
          type: string
        publication_time:
          description: The time at which this vulnerability was published.
          example: 2022-06-16T14:00:24.315507Z
          type: string
        references:
          items:
            $ref: '#/components/schemas/Slots_references_inner'
          type: array
      type: object
    SpdxDocument:
      additionalProperties: true
      type: object
    TargetChannelId:
      example: slack://channel?team=team-id&id=channel-id
      format: uri
      type: string
    TargetChannelName:
      example: channel-name
      minLength: 1
      type: string
    Type:
      type: string
    Types:
      example: resource
      pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
      type: string
    UpdateCollectionRequest:
      properties:
        data:
          $ref: '#/components/schemas/UpdateCollectionRequest_data'
      required:
      - data
      type: object
    UpdateCollectionWithProjectsRequest:
      additionalProperties: false
      properties:
        data:
          description: IDs of items to add to a collection
          items:
            $ref: '#/components/schemas/DeleteProjectsFromCollectionRequest_data_inner'
          maxItems: 100
          type: array
      required:
      - data
      type: object
    Updated:
      description: The last time the settings were updated.
      example: 2021-11-12T10:31:06.026Z
      format: date-time
      type: string
    Uuid:
      format: uuid
      type: string
    VersioningSchema:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/VersioningSchemaSemverType'
        - $ref: '#/components/schemas/VersioningSchemaCustomType'
        - $ref: '#/components/schemas/VersioningSchemaSingleSelectionType'
      description: "The versioning scheme used by images in the repository.\n\nA versioning\
        \ schema is a system for identifying and organizing different versions of\
        \ a project. \nIt is used to track changes and updates to the project over\
        \ time, and to help users identify which version they are using. \nA versioning\
        \ schema typically consists of a series of numbers or labels that are incremented\
        \ to reflect the progression of versions. \nFor example, a versioning schema\
        \ might use a series of numbers, such as \"1.0\", \"1.1\", \"2.0\", and so\
        \ on, to indicate major and minor releases of a product. \nA consistent and\
        \ well-defined versioning schema helps users and tools understand and track\
        \ the development of a project.\n"
    VersioningSchemaCustomType:
      additionalProperties: false
      description: "The Custom Schema type is a way for Snyk to understand your companyâ€™\
        s container image tag versioning scheme,\nenabling Snyk to give more accurate\
        \ base image upgrade recommendations.\n\nThis schema type is essentially a\
        \ regular expression that groups the different parts of an imageâ€™s tag into\
        \ comparable sections.\n\nIf your container image's tags follow a versioning\
        \ scheme other than Semantic Versioning (SemVer), \nit is highly recommended\
        \ that you select the \"Custom Versioning\" schema for your image repositories.\n"
      properties:
        expression:
          description: |
            The regular expression used to describe the format of tags.
            Keep in mind that backslashes in the expression need to be escaped due to being encompassed in a JSON string.
          example: (?<C0>.)\-(?<M2>.*)
          type: string
        label:
          description: |
            A customizable string that can be set for a custom versioning schema to describe its meaning.
            This label has no function.
          example: calendar with flavor schema
          type: string
        type:
          enum:
          - custom
          type: string
      required:
      - expression
      - type
      type: object
    VersioningSchemaSemverType:
      additionalProperties: false
      properties:
        type:
          enum:
          - semver
          example: semver
          type: string
      required:
      - type
      type: object
    VersioningSchemaSingleSelectionType:
      additionalProperties: false
      description: "The Single Selection Versioning Schema allows manual setting of\
        \ which image should be given as a recommendation.\n\nOnly one image can be\
        \ set as the current recommendation. If no images are set as the current selection,\
        \ \nno recommendation will be given.\n\nIt is recommended to use this versioning\
        \ schema if your repository's tags aren't supported by the other schemas.\n"
      properties:
        is_selected:
          description: |
            Whether this image should be the recommendation. Only one image can be selected at a given time. Setting this
            as true will remove previous selection.
          example: true
          type: boolean
        type:
          enum:
          - single-selection
          example: single-selection
          type: string
      required:
      - is_selected
      - type
      type: object
    YarnBuildArgs:
      additionalProperties: false
      properties:
        root_workspace:
          type: string
      required:
      - root_workspace
      type: object
    name:
      description: User-defined name of the collection
      maxLength: 255
      minLength: 1
      pattern: "^([a-zA-Z0-9 _\\-\\/:.])+$"
      type: string
    getAppInstallsForGroup_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/AppInstallData'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getAppInstallsForGroup_400_response_errors_inner_source:
      additionalProperties: false
      example:
        pointer: /data/attributes
      properties:
        parameter:
          description: A string indicating which URI query parameter caused the error.
          example: param1
          type: string
        pointer:
          description: "A JSON Pointer [RFC6901] to the associated entity in the request\
            \ document."
          example: /data/attributes
          type: string
      type: object
    getAppInstallsForGroup_400_response_errors_inner:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: "An application-specific error code, expressed as a string\
            \ value."
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The request was missing these required fields: ..."
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          $ref: '#/components/schemas/getAppInstallsForGroup_400_response_errors_inner_source'
        status:
          description: "The HTTP status code applicable to this problem, expressed\
            \ as a string value."
          example: "400"
          pattern: "^[45]\\d\\d$"
          type: string
        title:
          description: "A short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization."
          example: Bad request
          type: string
      required:
      - detail
      - status
      type: object
    getAppInstallsForGroup_400_response_jsonapi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
          type: string
      required:
      - version
      type: object
    getAppInstallsForGroup_400_response:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/getAppInstallsForGroup_400_response_errors_inner'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/getAppInstallsForGroup_400_response_jsonapi'
      required:
      - errors
      - jsonapi
      type: object
    createGroupAppInstall_request_data:
      properties:
        type:
          enum:
          - app_install
          example: app_install
          type: string
      type: object
    createGroupAppInstall_request_relationships_app_data:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        type:
          enum:
          - app
          example: app
          type: string
      required:
      - id
      - type
      type: object
    createGroupAppInstall_request_relationships_app:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createGroupAppInstall_request_relationships_app_data'
      required:
      - data
      type: object
    createGroupAppInstall_request_relationships:
      additionalProperties: false
      properties:
        app:
          $ref: '#/components/schemas/createGroupAppInstall_request_relationships_app'
      required:
      - app
      type: object
    createGroupAppInstall_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createGroupAppInstall_request_data'
        relationships:
          $ref: '#/components/schemas/createGroupAppInstall_request_relationships'
      required:
      - data
      - relationships
      type: object
    createGroupAppInstall_201_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AppInstallWithClient'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateGroupAppInstallSecret_request_data_attributes:
      additionalProperties: false
      properties:
        mode:
          description: |
            Operation to perform:
              * `replace` - Replace existing secrets with a new generated
            secret
              * `create` - Add a new secret, preserving existing secrets
              * `delete` - Remove an existing secret by value
          enum:
          - replace
          - create
          - delete
          type: string
        secret:
          description: Secret to delete when using `delete` mode
          type: string
      required:
      - mode
      type: object
    updateGroupAppInstallSecret_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/updateGroupAppInstallSecret_request_data_attributes'
        type:
          enum:
          - app
          type: string
      required:
      - attributes
      - type
      type: object
    updateGroupAppInstallSecret_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateGroupAppInstallSecret_request_data'
      required:
      - data
      type: object
    updateGroupAppInstallSecret_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AppInstallDataWithSecret'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    listGroupAuditLogs_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AuditLogSearch'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      type: object
    getManyGroupServiceAccount_200_response_data_inner_attributes:
      properties:
        access_token_ttl_seconds:
          description: "The time, in seconds, that a generated access token will be\
            \ valid for. Defaults to 1hr if unset. Only provided when auth_type is\
            \ oauth_private_key_jwt."
          type: number
        api_key:
          description: "The Snyk API Key for this service account. Only returned on\
            \ creation, and only when auth_type is api_key."
          type: string
        auth_type:
          description: |-
            The authentication strategy for the service account:
              * api_key - Regular Snyk API Key.
              * oauth_client_secret - OAuth2 client_credentials grant, which returns a client secret that can be used to retrieve an access token.
              * oauth_private_key_jwt - OAuth2 client_credentials grant, using private_key_jwt client_assertion as laid out OIDC Connect Core 1.0, section 9.
          enum:
          - api_key
          - oauth_client_secret
          - oauth_private_key_jwt
          type: string
        client_id:
          description: The service account's attached client-id. Used to request an
            access-token. Only provided when auth_type is oauth_private_key_jwt.
          type: string
        client_secret:
          description: The client secret used for obtaining access tokens. Only sent
            on creation of new service accounts and cannot be retrieved thereafter.
            Only provided when auth_type is oauth_client_secret.
          type: string
        jwks_url:
          description: A JWKs URL used to verify signed JWT requests against. Must
            be https. Only provided when auth_type is oauth_private_key_jwt.
          type: string
        level:
          description: |-
            The level of access for the service account:
              * Group - the service account was created at the Group level.
              * Org - the service account was created at the Org level.
          enum:
          - Group
          - Org
          type: string
        name:
          description: A human-friendly name of the service account.
          type: string
        role_id:
          description: The ID of the role which the Service Account is associated
            with.
          format: uuid
          type: string
      required:
      - auth_type
      - name
      - role_id
      type: object
    getManyGroupServiceAccount_200_response_data_inner_links_first_oneOf:
      additionalProperties: false
      example:
        href: https://example.com/api/resource
      properties:
        href:
          description: A string containing the linkâ€™s URL.
          example: https://example.com/api/resource
          type: string
        meta:
          additionalProperties: true
          description: Free-form object that may contain non-standard information.
          example:
            key1: value1
            key2:
              sub_key: sub_value
            key3:
            - array_value1
            - array_value2
          type: object
      required:
      - href
      type: object
    getManyGroupServiceAccount_200_response_data_inner_links_first:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the linkâ€™s URL.
        example: https://example.com/api/resource
        type: string
      - $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first_oneOf'
    getManyGroupServiceAccount_200_response_data_inner_links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
        last:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
        next:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
        prev:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
        related:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
        self:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links_first'
      type: object
    getManyGroupServiceAccount_200_response_data_inner:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_attributes'
        id:
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner_links'
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    getManyGroupServiceAccount_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    createGroupServiceAccount_request_data_attributes:
      additionalProperties: false
      properties:
        access_token_ttl_seconds:
          description: "The time, in seconds, that a generated access token will be\
            \ valid for. Defaults to 1 hour if unset. Only used when auth_type is\
            \ one of the oauth_* variants."
          maximum: 86400
          minimum: 3600
          type: number
        auth_type:
          description: |-
            Authentication strategy for the service account:
              * api_key - Regular Snyk API Key.
              * oauth_client_secret - OAuth2 client_credentials grant, which returns a client secret that can be used to retrieve an access token.
              * oauth_private_key_jwt - OAuth2 client_credentials grant, using private_key_jwt client_assertion as laid out in OIDC Connect Core 1.0, section 9.
          enum:
          - api_key
          - oauth_client_secret
          - oauth_private_key_jwt
          type: string
        jwks_url:
          description: "A JWKs URL hosting your public keys, used to verify signed\
            \ JWT requests. Must be https. Required only when auth_type is oauth_private_key_jwt."
          type: string
        name:
          description: A human-friendly name for the service account.
          type: string
        role_id:
          description: The ID of the role which the created service account should
            use.
          format: uuid
          type: string
      required:
      - auth_type
      - name
      - role_id
      type: object
    createGroupServiceAccount_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/createGroupServiceAccount_request_data_attributes'
        type:
          description: The Resource type.
          enum:
          - service_account
          type: string
      required:
      - attributes
      - type
      type: object
    createGroupServiceAccount_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createGroupServiceAccount_request_data'
      required:
      - data
      type: object
    createGroupServiceAccount_201_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      type: object
    getOneGroupServiceAccount_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/getManyGroupServiceAccount_200_response_data_inner'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateGroupServiceAccount_request_data_attributes:
      additionalProperties: false
      properties:
        name:
          description: A human-friendly name for the service account. Must be unique
            within the group.
          type: string
      required:
      - name
      type: object
    updateGroupServiceAccount_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/updateGroupServiceAccount_request_data_attributes'
        id:
          description: The ID of the service account. Must match the id in the url
            path.
          format: uuid
          type: string
        type:
          description: The Resource type.
          enum:
          - service_account
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    updateGroupServiceAccount_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateGroupServiceAccount_request_data'
      required:
      - data
      type: object
    updateServiceAccountSecret_request_data_attributes:
      additionalProperties: false
      properties:
        mode:
          description: |
            Operation to perform:
              * `replace` - Replace existing secrets with a new generated secret.
              * `create` - Add a new secret, preserving existing secrets. A maximum of to two secrets can exist at a time.
              * `delete` - Remove an existing secret by value. At least one secret must remain per service account.
          enum:
          - replace
          - create
          - delete
          type: string
        secret:
          description: Secret to delete when using `delete` mode
          type: string
      required:
      - mode
      type: object
    updateServiceAccountSecret_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/updateServiceAccountSecret_request_data_attributes'
        type:
          description: The Resource type.
          enum:
          - service_account
          type: string
      required:
      - attributes
      - type
      type: object
    updateServiceAccountSecret_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateServiceAccountSecret_request_data'
      required:
      - data
      type: object
    getIacSettingsForGroup_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/GroupIacSettingsResponse'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateIacSettingsForGroup_request:
      properties:
        data:
          $ref: '#/components/schemas/GroupIacSettingsRequest'
      type: object
    listOrgs_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrgWithRelationships'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getOrg_200_response:
      properties:
        data:
          $ref: '#/components/schemas/Org'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    updateOrg_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgUpdateAttributes'
        id:
          format: uuid
          type: string
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      type: object
    updateOrg_request:
      properties:
        data:
          $ref: '#/components/schemas/updateOrg_request_data'
      required:
      - data
      type: object
    updateOrg_200_response_data:
      additionalProperties: false
      description: org resource object
      properties:
        attributes:
          $ref: '#/components/schemas/OrgAttributes'
        id:
          example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/OrgRelationships'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - type
      type: object
    updateOrg_200_response:
      properties:
        data:
          $ref: '#/components/schemas/updateOrg_200_response_data'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    getAppBots_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/AppBot'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getApps_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/AppData'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getAppByID_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AppData'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    manageAppCreationSecret_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AppDataWithSecret'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    getCollections_200_response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CollectionResponse'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      type: object
    createCollection_201_response_data:
      additionalProperties: false
      description: collection resource object
      properties:
        attributes:
          $ref: '#/components/schemas/CollectionAttributes'
        id:
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/CollectionRelationships'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - id
      - relationships
      type: object
    createCollection_201_response:
      properties:
        data:
          $ref: '#/components/schemas/createCollection_201_response_data'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    listContainerImage_200_response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      type: object
    getContainerImage_200_response:
      properties:
        data:
          $ref: '#/components/schemas/Image'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    listImageTargetRefs_200_response:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ImageTargetRef'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      type: object
    listOrgInvitation_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrgInvitation'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    createOrgInvitation_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/OrgInvitationPostData'
      required:
      - data
      type: object
    createOrgInvitation_201_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/OrgInvitation'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      type: object
    listOrgProjects_200_response_data_inner_meta:
      additionalProperties: false
      properties:
        cli_monitored_at:
          description: The date that the project was last uploaded and monitored using
            cli.
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          nullable: true
          type: string
        latest_dependency_total:
          $ref: '#/components/schemas/LatestDependencyTotal'
        latest_issue_counts:
          $ref: '#/components/schemas/LatestIssueCounts'
      type: object
    listOrgProjects_200_response_data_inner:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectAttributes'
        id:
          description: Resource ID.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/listOrgProjects_200_response_data_inner_meta'
        relationships:
          $ref: '#/components/schemas/ProjectRelationships'
        type:
          description: The Resource type.
          example: project
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    listOrgProjects_200_response_meta:
      properties:
        count:
          minimum: 0
          type: number
      type: object
    listOrgProjects_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/listOrgProjects_200_response_data_inner'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/listOrgProjects_200_response_meta'
      required:
      - jsonapi
      - links
      type: object
    getOrgProject_200_response_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectAttributes'
        id:
          description: The Resource ID.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/listOrgProjects_200_response_data_inner_meta'
        relationships:
          $ref: '#/components/schemas/ProjectRelationships'
        type:
          description: The Resource type.
          example: project
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    getOrgProject_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/getOrgProject_200_response_data'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateOrgProject_200_response_data_meta:
      additionalProperties: false
      properties:
        cli_monitored_at:
          description: The date that the project was last uploaded and monitored using
            cli.
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          nullable: true
          type: string
      type: object
    updateOrgProject_200_response_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectAttributes'
        id:
          description: The Resource ID.
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/updateOrgProject_200_response_data_meta'
        relationships:
          $ref: '#/components/schemas/ProjectRelationships'
        type:
          description: The Resource type.
          example: project
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    updateOrgProject_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateOrgProject_200_response_data'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    createOrgServiceAccount_request_data_attributes:
      additionalProperties: false
      properties:
        access_token_ttl_seconds:
          description: "The time, in seconds, that a generated access token will be\
            \ valid for. Defaults to 1 hour if unset. Only used when auth_type is\
            \ one of the oauth_* variants."
          maximum: 86400
          minimum: 3600
          type: number
        auth_type:
          description: |-
            Authentication strategy for the service account:
              * api_key - Regular Snyk API Key.
              * oauth_client_secret - OAuth2 client_credentials grant, which returns a client secret that can be used to retrieve an access token.
              * oauth_private_key_jwt - OAuth2 client_credentials grant, using private_key_jwt client_assertion as laid out in OIDC Connect Core 1.0, section 9.
          enum:
          - api_key
          - oauth_client_secret
          - oauth_private_key_jwt
          type: string
        jwks_url:
          description: "A JWKs URL hosting your public keys, used to verify signed\
            \ JWT requests. Must be https. Required only when auth_type is oauth_private_key_jwt."
          type: string
        name:
          description: A human-friendly name for the service account.
          type: string
        role_id:
          description: "The ID of the role which the created service account should\
            \ use. Obtained in the Snyk UI, via \"Group Page\" -> \"Settings\" ->\
            \ \"Member Roles\" -> \"Create new Role\". Can be shared among multiple\
            \ accounts."
          format: uuid
          type: string
      required:
      - auth_type
      - name
      - role_id
      type: object
    createOrgServiceAccount_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/createOrgServiceAccount_request_data_attributes'
        type:
          description: The Resource type.
          enum:
          - service_account
          type: string
      required:
      - attributes
      type: object
    createOrgServiceAccount_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/createOrgServiceAccount_request_data'
      required:
      - data
      type: object
    updateOrgServiceAccount_request_data_attributes:
      additionalProperties: false
      properties:
        name:
          description: A human-friendly name for the service account. Must be unique
            within the organization.
          type: string
      required:
      - name
      type: object
    updateOrgServiceAccount_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/updateOrgServiceAccount_request_data_attributes'
        id:
          description: The ID of the service account. Must match the id in the url
            path.
          format: uuid
          type: string
        type:
          description: The Resource type.
          enum:
          - service_account
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    updateOrgServiceAccount_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateOrgServiceAccount_request_data'
      required:
      - data
      type: object
    getIacSettingsForOrg_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/OrgIacSettingsResponse'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateIacSettingsForOrg_request:
      properties:
        data:
          $ref: '#/components/schemas/OrgIacSettingsRequest'
      type: object
    getSastSettings_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SastEnablement'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    updateOrgSastSettings_request_data_attributes:
      additionalProperties: false
      properties:
        sast_enabled:
          description: The value of the updated settings for sastEnabled setting
          type: boolean
      required:
      - sast_enabled
      type: object
    updateOrgSastSettings_request_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/updateOrgSastSettings_request_data_attributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    updateOrgSastSettings_request:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/updateOrgSastSettings_request_data'
      required:
      - data
      type: object
    getSlackDefaultNotificationSettings_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SlackDefaultSettingsData'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    createSlackProjectNotificationSettings_201_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ProjectSettingsData'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    listChannels_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SlackChannel'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getChannelNameById_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SlackChannel'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/SelfLink'
      required:
      - data
      - jsonapi
      - links
      type: object
    getUserInstalledApps_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PublicApp'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      - links
      type: object
    getUserAppSessions_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SessionData'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
      required:
      - data
      - jsonapi
      type: object
    AppBot_relationships_app:
      properties:
        data:
          $ref: '#/components/schemas/PublicApp'
      type: object
    AppBot_relationships:
      properties:
        app:
          $ref: '#/components/schemas/AppBot_relationships_app'
      required:
      - app
      type: object
    AppInstallData_attributes:
      properties:
        client_id:
          description: The oauth2 client id for the app.
          example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
          format: uuid
          type: string
          x-go-name: OauthClientId
      type: object
    AppInstallData_relationships_app:
      properties:
        data:
          $ref: '#/components/schemas/PublicAppData'
      type: object
    AppInstallData_relationships:
      properties:
        app:
          $ref: '#/components/schemas/AppInstallData_relationships_app'
      type: object
    AppInstallDataWithSecret_attributes:
      properties:
        client_id:
          description: The oauth2 client id for the app.
          example: 941b423a-e0a0-4a33-a7ca-dd9e9e6bd8cf
          format: uuid
          type: string
          x-go-name: OauthClientId
        client_secret:
          description: "The oauth2 client secret for the app. This is the only time\
            \ this secret will be returned, store it securely and donâ€™t lose it."
          example: "snyk_cs_ctZW0JsWG^Bm`*oPo=mnV26qU_6pjxht<]S_v1"
          minLength: 1
          type: string
      required:
      - client_id
      - client_secret
      type: object
    AppInstallWithClient_attributes:
      properties:
        client_id:
          format: uuid
          type: string
        client_secret:
          type: string
      required:
      - client_id
      - client_secret
      type: object
    AppInstallWithClient_relationships_app_data:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    AppInstallWithClient_relationships_app:
      properties:
        data:
          $ref: '#/components/schemas/AppInstallWithClient_relationships_app_data'
      type: object
    AppInstallWithClient_relationships:
      properties:
        app:
          $ref: '#/components/schemas/AppInstallWithClient_relationships_app'
      type: object
    AppPatchRequest_data_attributes:
      additionalProperties: false
      minProperties: 1
      properties:
        access_token_ttl_seconds:
          description: "The access token time to live for your app, in seconds. It\
            \ only affects the newly generated access tokens, existing access token\
            \ will  continue to have their previous time to live as expiration."
          example: 3600
          maximum: 86400
          minimum: 3600
          type: number
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        redirect_uris:
          description: List of allowed redirect URIs to call back after authentication.
          example:
          - https://example.com/callback
          items:
            format: uri
            type: string
          minItems: 1
          type: array
      type: object
    AppPatchRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/AppPatchRequest_data_attributes'
        type:
          enum:
          - app
          type: string
      type: object
    AppPostRequest_data_attributes:
      additionalProperties: false
      properties:
        access_token_ttl_seconds:
          description: "The access token time to live for your app, in seconds. It\
            \ only affects the newly generated access tokens, existing access token\
            \ will  continue to have their previous time to live as expiration."
          example: 3600
          maximum: 86400
          minimum: 3600
          type: number
        context:
          $ref: '#/components/schemas/Context'
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        redirect_uris:
          description: List of allowed redirect URIs to call back after authentication.
          example:
          - https://example.com/callback
          items:
            format: uri
            type: string
          minItems: 1
          type: array
        scopes:
          description: The scopes this app is allowed to request during authorization.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - context
      - name
      - redirect_uris
      - scopes
      type: object
    AppPostRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/AppPostRequest_data_attributes'
        type:
          enum:
          - app
          type: string
      required:
      - attributes
      - type
      type: object
    AuditLogSearch_items_inner:
      properties:
        content:
          type: object
        created:
          example: 2021-07-01T00:00:00Z
          format: date-time
          type: string
        event:
          example: api.access
          type: string
        group_id:
          example: 0d3728ec-eebf-484d-9907-ba238019f10b
          format: uuid
          type: string
        org_id:
          example: 0d3728ec-eebf-484d-9907-ba238019f10b
          format: uuid
          type: string
        project_id:
          example: 0d3728ec-eebf-484d-9907-ba238019f10b
          format: uuid
          type: string
      required:
      - created
      - event
      type: object
    BulkPackageUrlsRequestBody_data_attributes:
      properties:
        purls:
          description: "An array of Package URLs (purl). Supported purl types are\
            \ apk, cargo, cocoapods, composer, deb, gem, generic, golang, hex, maven,\
            \ npm, nuget, pub, pypi, rpm, and swift. A version for the package is\
            \ also required."
          items:
            type: string
          type: array
      required:
      - purls
      type: object
    BulkPackageUrlsRequestBody_data:
      properties:
        attributes:
          $ref: '#/components/schemas/BulkPackageUrlsRequestBody_data_attributes'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      type: object
    CollectionRelationships_created_by_user_data:
      properties:
        id:
          description: ID of the user that created the collection. Null for auto-collections.
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          nullable: true
          type: string
        type:
          enum:
          - user
          type: string
      required:
      - id
      - type
      type: object
    CollectionRelationships_created_by_user:
      properties:
        data:
          $ref: '#/components/schemas/CollectionRelationships_created_by_user_data'
      required:
      - data
      type: object
    CollectionRelationships_org_data:
      properties:
        id:
          description: ID of the org that this collection belongs to
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          type: string
        type:
          enum:
          - org
          type: string
      required:
      - id
      - type
      type: object
    CollectionRelationships_org:
      properties:
        data:
          $ref: '#/components/schemas/CollectionRelationships_org_data'
      required:
      - data
      type: object
    CommonIssueModel_attributes:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/Coordinate'
          type: array
        created_at:
          example: 2022-06-16T13:51:13Z
          format: date-time
          type: string
        description:
          description: A description of the issue in Markdown format
          example: '## Overview\n\n\nAffected versions of this package are vulnerable
            to XML External Entity (XXE) Injection.'
          type: string
        effective_severity_level:
          description: "The type from enumeration of the issueâ€™s severity level. This\
            \ is usually set from the issueâ€™s producer, but can be overridden by policies."
          enum:
          - info
          - low
          - medium
          - high
          - critical
          type: string
        key:
          description: The Snyk vulnerability ID.
          example: SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754
          type: string
        problems:
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        severities:
          description: "The severity level of the vulnerability: â€˜lowâ€™, â€˜mediumâ€™,\
            \ â€˜highâ€™ or â€˜criticalâ€™."
          items:
            $ref: '#/components/schemas/Severity'
          type: array
        slots:
          $ref: '#/components/schemas/Slots'
        title:
          description: A human-readable title for this issue.
          example: XML External Entity (XXE) Injection
          type: string
        type:
          description: The issue type
          example: package_vulnerability
          type: string
        updated_at:
          description: When the vulnerability information was last modified.
          example: 2022-06-16T14:00:24.315507Z
          format: date-time
          type: string
      type: object
    CommonIssueModelVTwo_attributes:
      properties:
        coordinates:
          items:
            $ref: '#/components/schemas/CoordinateVTwo'
          type: array
        created_at:
          example: 2022-06-16T13:51:13Z
          format: date-time
          type: string
        description:
          description: A description of the issue in Markdown format
          example: '## Overview\n\n\nAffected versions of this package are vulnerable
            to XML External Entity (XXE) Injection.'
          type: string
        effective_severity_level:
          description: "The type from enumeration of the issueâ€™s severity level. This\
            \ is usually set from the issueâ€™s producer, but can be overridden by policies."
          enum:
          - info
          - low
          - medium
          - high
          - critical
          type: string
        problems:
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        severities:
          description: "The severity level of the vulnerability: â€˜lowâ€™, â€˜mediumâ€™,\
            \ â€˜highâ€™ or â€˜criticalâ€™."
          items:
            $ref: '#/components/schemas/Severity'
          type: array
        slots:
          $ref: '#/components/schemas/Slots'
        title:
          description: A human-readable title for this issue.
          example: XML External Entity (XXE) Injection
          type: string
        type:
          description: The issue type
          example: package_vulnerability
          type: string
        updated_at:
          description: When the vulnerability information was last modified.
          example: 2022-06-16T14:00:24.315507Z
          format: date-time
          type: string
      type: object
    CoordinateVTwo_representations_inner:
      anyOf:
      - $ref: '#/components/schemas/ResourcePathRepresentation'
      - $ref: '#/components/schemas/PackageRepresentation'
    CreateCollectionRequest_data_attributes:
      additionalProperties: false
      properties:
        name:
          description: User-defined name of the collection
          maxLength: 255
          minLength: 1
          pattern: "^([a-zA-Z0-9 _\\-\\/:.])+$"
          type: string
      required:
      - name
      type: object
    CreateCollectionRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CreateCollectionRequest_data_attributes'
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - type
      type: object
    CustomBaseImageCollectionResponse_data_inner:
      properties:
        attributes:
          $ref: '#/components/schemas/CustomBaseImageSnapshot'
        id:
          format: uuid
          type: string
        type:
          type: string
      type: object
    CustomBaseImagePatchRequest_data_attributes:
      additionalProperties: false
      minProperties: 1
      properties:
        include_in_recommendations:
          example: true
          type: boolean
        versioning_schema:
          $ref: '#/components/schemas/VersioningSchema'
      type: object
    CustomBaseImagePatchRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CustomBaseImagePatchRequest_data_attributes'
        id:
          description: The ID of the custom base image that should be updated. (Same
            one used in the URI)
          format: uuid
          type: string
        type:
          description: This should always be "custom_base_image"
          example: custom_base_image
          type: string
      required:
      - attributes
      - type
      type: object
    CustomBaseImagePostRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CustomBaseImageAttributes'
        type:
          description: This should always be "custom_base_image"
          example: custom_base_image
          type: string
      required:
      - attributes
      - type
      type: object
    DeleteProjectsFromCollectionRequest_data_inner:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        type:
          description: Type of the item id
          enum:
          - project
          type: string
      required:
      - id
      - type
      type: object
    GroupIacSettingsRequest_attributes_custom_rules:
      additionalProperties: false
      description: The Infrastructure as Code custom rules settings for a group.
      minProperties: 1
      properties:
        is_enabled:
          description: Whether the custom rules feature is enabled or not.
          example: true
          type: boolean
        oci_registry_tag:
          description: The tag for an OCI artifact inside an OCI registry.
          example: latest
          type: string
        oci_registry_url:
          description: The URL to an OCI registry.
          example: https://registry-1.docker.io/account/bundle
          type: string
      type: object
    GroupIacSettingsRequest_attributes:
      properties:
        custom_rules:
          $ref: '#/components/schemas/GroupIacSettingsRequest_attributes_custom_rules'
      type: object
    GroupIacSettingsResponse_attributes_custom_rules:
      description: The Infrastructure as Code custom rules settings for a group.
      properties:
        is_enabled:
          description: Whether the custom rules feature is enabled or not.
          example: true
          type: boolean
        oci_registry_tag:
          description: The tag for an OCI artifact inside an OCI registry.
          example: latest
          type: string
        oci_registry_url:
          description: The URL to an OCI registry.
          example: https://registry-1.docker.io/account/bundle
          type: string
      type: object
    GroupIacSettingsResponse_attributes:
      properties:
        custom_rules:
          $ref: '#/components/schemas/GroupIacSettingsResponse_attributes_custom_rules'
        updated:
          description: The last time the settings were updated.
          example: 2021-11-12T10:31:06.026Z
          format: date-time
          type: string
      type: object
    HelloWorld_attributes_requestSubject:
      additionalProperties: false
      properties:
        clientId:
          format: uuid
          type: string
        publicId:
          format: uuid
          type: string
        type:
          type: string
      required:
      - publicId
      - type
      type: object
    HelloWorld_attributes:
      additionalProperties: false
      properties:
        message:
          type: string
        requestSubject:
          $ref: '#/components/schemas/HelloWorld_attributes_requestSubject'
      required:
      - message
      - requestSubject
      type: object
    Image_relationships_image_target_refs:
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
      type: object
    Image_relationships:
      properties:
        image_target_refs:
          $ref: '#/components/schemas/Image_relationships_image_target_refs'
      type: object
    IssuesWithPurlsResponse_meta:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    LinkProperty_oneOf:
      additionalProperties: false
      example:
        href: https://example.com/api/resource
      properties:
        href:
          description: A string containing the linkâ€™s URL.
          example: https://example.com/api/resource
          type: string
        meta:
          additionalProperties: true
          description: Free-form object that may contain non-standard information.
          example:
            key1: value1
            key2:
              sub_key: sub_value
            key3:
            - array_value1
            - array_value2
          type: object
      required:
      - href
      type: object
    MemberRoleRelationship_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/OrgRoleAttributes'
        id:
          description: The Snyk ID of the organization role.
          example: f60ff965-6889-4db2-8c86-0285d62f35ab
          format: uuid
          type: string
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - type
      type: object
    OrgIacSettingsRequest_attributes_custom_rules:
      additionalProperties: false
      description: The Infrastructure as Code custom rules settings for an org.
      minProperties: 1
      properties:
        inherit_from_parent:
          $ref: '#/components/schemas/InheritFromParent'
        is_enabled:
          description: Whether the custom rules feature is enabled or not.
          example: true
          type: boolean
        oci_registry_tag:
          description: The tag for an OCI artifact inside an OCI registry.
          example: latest
          type: string
        oci_registry_url:
          description: The URL to an OCI registry.
          example: https://registry-1.docker.io/account/bundle
          type: string
      type: object
    OrgIacSettingsRequest_attributes:
      properties:
        custom_rules:
          $ref: '#/components/schemas/OrgIacSettingsRequest_attributes_custom_rules'
      type: object
    OrgIacSettingsResponse_attributes_custom_rules_parents_group:
      description: The Infrastructure as Code settings at the group level.
      properties:
        custom_rules:
          $ref: '#/components/schemas/GroupIacSettingsResponse_attributes_custom_rules'
        updated:
          description: The last time the settings were updated.
          example: 2021-11-12T10:31:06.026Z
          format: date-time
          type: string
      type: object
    OrgIacSettingsResponse_attributes_custom_rules_parents:
      description: Contains all parents the org can inherit settings from.
      properties:
        group:
          $ref: '#/components/schemas/OrgIacSettingsResponse_attributes_custom_rules_parents_group'
      type: object
    OrgIacSettingsResponse_attributes_custom_rules:
      description: The Infrastructure as Code custom rules settings for an org.
      properties:
        inherit_from_parent:
          $ref: '#/components/schemas/InheritFromParent'
        is_enabled:
          description: Whether the custom rules feature is enabled or not.
          example: true
          type: boolean
        oci_registry_tag:
          description: The tag for an OCI artifact inside an OCI registry.
          example: latest
          type: string
        oci_registry_url:
          description: The URL to an OCI registry.
          example: https://registry-1.docker.io/account/bundle
          type: string
        parents:
          $ref: '#/components/schemas/OrgIacSettingsResponse_attributes_custom_rules_parents'
        updated:
          description: The last time the settings were updated.
          example: 2021-11-12T10:31:06.026Z
          format: date-time
          type: string
      type: object
    OrgIacSettingsResponse_attributes:
      properties:
        custom_rules:
          $ref: '#/components/schemas/OrgIacSettingsResponse_attributes_custom_rules'
      type: object
    OrgInvitation_relationships:
      properties:
        org:
          $ref: '#/components/schemas/Relationship'
      type: object
    PatchProjectRequest_data_attributes_tags_inner:
      properties:
        key:
          example: tag-key
          type: string
        value:
          example: tag-value
          type: string
      type: object
    PatchProjectRequest_data_attributes:
      properties:
        business_criticality:
          example:
          - medium
          items:
            enum:
            - critical
            - high
            - medium
            - low
            type: string
          type: array
        environment:
          example:
          - external
          - hosted
          items:
            enum:
            - frontend
            - backend
            - internal
            - external
            - mobile
            - saas
            - onprem
            - hosted
            - distributed
            type: string
          type: array
        lifecycle:
          example:
          - production
          items:
            enum:
            - production
            - development
            - sandbox
            type: string
          type: array
        tags:
          example:
          - key: tag-key
            value: tag-value
          items:
            $ref: '#/components/schemas/PatchProjectRequest_data_attributes_tags_inner'
          type: array
        test_frequency:
          description: Test frequency of a project. Also controls when automated PRs
            may be created.
          enum:
          - daily
          - weekly
          - never
          example: daily
          type: string
      type: object
    PatchProjectRequest_data_relationships_owner_data:
      properties:
        id:
          description: The public ID of the user that owns the project
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          nullable: true
          type: string
        type:
          enum:
          - user
          type: string
      required:
      - id
      - type
      type: object
    PatchProjectRequest_data_relationships_owner:
      properties:
        data:
          $ref: '#/components/schemas/PatchProjectRequest_data_relationships_owner_data'
      required:
      - data
      type: object
    PatchProjectRequest_data_relationships:
      properties:
        owner:
          $ref: '#/components/schemas/PatchProjectRequest_data_relationships_owner'
      type: object
    PatchProjectRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PatchProjectRequest_data_attributes'
        id:
          description: The Resource ID.
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/PatchProjectRequest_data_relationships'
        type:
          description: The Resource type.
          enum:
          - project
          type: string
      required:
      - attributes
      - id
      - relationships
      - type
      type: object
    ProjectAttributes_build_args:
      oneOf:
      - $ref: '#/components/schemas/YarnBuildArgs'
      - $ref: '#/components/schemas/ContainerBuildArgs'
      - $ref: '#/components/schemas/NugetBuildArgs'
    ProjectOfCollection_relationships_target_data:
      properties:
        id:
          description: ID of the target that owns the project
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          type: string
        type:
          enum:
          - target
          type: string
      required:
      - id
      - type
      type: object
    ProjectOfCollection_relationships_target:
      properties:
        data:
          $ref: '#/components/schemas/ProjectOfCollection_relationships_target_data'
      required:
      - data
      type: object
    ProjectOfCollection_relationships:
      additionalProperties: false
      properties:
        target:
          $ref: '#/components/schemas/ProjectOfCollection_relationships_target'
      required:
      - target
      type: object
    ProjectRelationships_target:
      oneOf:
      - $ref: '#/components/schemas/Relationship'
      - $ref: '#/components/schemas/ProjectRelationshipsTarget'
    ProjectRelationshipsTarget_data_attributes:
      additionalProperties: false
      properties:
        display_name:
          description: |
            The human readable name that represents this target. These are generated based on the provided properties, and the source. In the future we may support updating this value.
          example: snyk-fixtures/goof
          type: string
        url:
          description: |
            The URL for the resource. We do not use this as part of our representation of the identity of the target, as it can      be changed externally to Snyk We are reliant on individual integrations providing us with this value. Currently it is only provided by the CLI
          example: http://github.com/snyk/local-goof
          nullable: true
          type: string
      type: object
    ProjectRelationshipsTarget_data_meta:
      properties:
        integration_data:
          description: A collection of properties regarding integration data
          type: object
      type: object
    ProjectRelationshipsTarget_data:
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectRelationshipsTarget_data_attributes'
        id:
          description: The Resource ID.
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/ProjectRelationshipsTarget_data_meta'
        type:
          description: The Resource type.
          example: target
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    ProjectSettingsData_attributes:
      additionalProperties: false
      properties:
        is_active:
          description: Current status of the project settings.
          example: true
          type: boolean
        severity_threshold:
          $ref: '#/components/schemas/SeverityThreshold'
        target_channel_id:
          example: slack://channel?team=team-id&id=channel-id
          format: uri
          type: string
        target_channel_name:
          example: channel-name
          minLength: 1
          type: string
        target_project_name:
          description: The target file name for the project.
          example: snyk/goof:package.json
          type: string
      required:
      - is_active
      - severity_threshold
      - target_channel_id
      - target_channel_name
      - target_project_name
      type: object
    ProjectSettingsPatchRequest_data_attributes:
      additionalProperties: false
      minProperties: 1
      properties:
        is_active:
          description: Current status of the project settings.
          example: true
          type: boolean
        severity_threshold:
          $ref: '#/components/schemas/SeverityThreshold'
        target_channel_id:
          example: slack://channel?team=team-id&id=channel-id
          format: uri
          type: string
      type: object
    ProjectSettingsPatchRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectSettingsPatchRequest_data_attributes'
        id:
          format: uuid
          type: string
        type:
          enum:
          - slack
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    PublicAppData_attributes:
      additionalProperties: false
      properties:
        client_id:
          format: uuid
          type: string
        context:
          description: "Allow installing the app to a org/group or to a user, default\
            \ tenant."
          enum:
          - tenant
          - user
          type: string
        name:
          description: New name of the app to display to users during authorization
            flow.
          example: My App
          minLength: 1
          type: string
        scopes:
          description: The scopes this app is allowed to request during authorization.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - client_id
      - name
      type: object
    Relationship_data:
      additionalProperties: false
      properties:
        id:
          example: 4a72d1db-b465-4764-99e1-ecedad03b06a
          format: uuid
          type: string
        type:
          description: Type of the related resource
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - type
      type: object
    Remedy_details:
      properties:
        upgrade_package:
          description: A minimum version to upgrade to in order to remedy the issue.
          example: "5.4.0,6.4.0"
          type: string
      type: object
    SastEnablement_attributes:
      additionalProperties: false
      properties:
        autofix_enabled:
          type: boolean
        sast_enabled:
          type: boolean
      required:
      - sast_enabled
      type: object
    SettingsRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SettingsAttributes'
        type:
          enum:
          - slack
          type: string
      required:
      - attributes
      - type
      type: object
    SlackChannel_attributes:
      properties:
        name:
          description: Name of the Slack Channel
          example: general
          type: string
        type:
          description: Channel type
          enum:
          - public
          - private
          - direct_message
          - multiparty_direct_message
          type: string
      type: object
    SlackDefaultSettingsData_attributes:
      additionalProperties: false
      properties:
        severity_threshold:
          $ref: '#/components/schemas/SeverityThreshold'
        target_channel_id:
          example: slack://channel?team=team-id&id=channel-id
          format: uri
          type: string
        target_channel_name:
          example: channel-name
          minLength: 1
          type: string
      required:
      - severity_threshold
      - target_channel_id
      - target_channel_name
      type: object
    Slots_references_inner:
      properties:
        title:
          description: Descriptor for an external reference to the issue
          type: string
        url:
          description: URL for an external reference to the issue
          type: string
      type: object
    UpdateCollectionRequest_data:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/CreateCollectionRequest_data_attributes'
        id:
          format: uuid
          type: string
        type:
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - attributes
      - type
      type: object
  securitySchemes:
    APIToken:
      description: API key value must be prefixed with \"Token \".
      in: header
      name: Authorization
      type: apiKey
    BearerAuth:
      scheme: bearer
      type: http
x-optic-url: https://app.useoptic.com/organizations/390ef489-882c-48ba-acb3-4e0b73e48767/apis/5Tz5UMTNEIuz5-FZ6J2ki
x-snyk-api-lifecycle: released
x-snyk-api-version: 2024-01-04
