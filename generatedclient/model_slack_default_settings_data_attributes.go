/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SlackDefaultSettingsDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlackDefaultSettingsDataAttributes{}

// SlackDefaultSettingsDataAttributes struct for SlackDefaultSettingsDataAttributes
type SlackDefaultSettingsDataAttributes struct {
	SeverityThreshold SeverityThreshold `json:"severity_threshold"`
	TargetChannelId string `json:"target_channel_id"`
	TargetChannelName string `json:"target_channel_name"`
}

type _SlackDefaultSettingsDataAttributes SlackDefaultSettingsDataAttributes

// NewSlackDefaultSettingsDataAttributes instantiates a new SlackDefaultSettingsDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackDefaultSettingsDataAttributes(severityThreshold SeverityThreshold, targetChannelId string, targetChannelName string) *SlackDefaultSettingsDataAttributes {
	this := SlackDefaultSettingsDataAttributes{}
	this.SeverityThreshold = severityThreshold
	this.TargetChannelId = targetChannelId
	this.TargetChannelName = targetChannelName
	return &this
}

// NewSlackDefaultSettingsDataAttributesWithDefaults instantiates a new SlackDefaultSettingsDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackDefaultSettingsDataAttributesWithDefaults() *SlackDefaultSettingsDataAttributes {
	this := SlackDefaultSettingsDataAttributes{}
	return &this
}

// GetSeverityThreshold returns the SeverityThreshold field value
func (o *SlackDefaultSettingsDataAttributes) GetSeverityThreshold() SeverityThreshold {
	if o == nil {
		var ret SeverityThreshold
		return ret
	}

	return o.SeverityThreshold
}

// GetSeverityThresholdOk returns a tuple with the SeverityThreshold field value
// and a boolean to check if the value has been set.
func (o *SlackDefaultSettingsDataAttributes) GetSeverityThresholdOk() (*SeverityThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SeverityThreshold, true
}

// SetSeverityThreshold sets field value
func (o *SlackDefaultSettingsDataAttributes) SetSeverityThreshold(v SeverityThreshold) {
	o.SeverityThreshold = v
}

// GetTargetChannelId returns the TargetChannelId field value
func (o *SlackDefaultSettingsDataAttributes) GetTargetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetChannelId
}

// GetTargetChannelIdOk returns a tuple with the TargetChannelId field value
// and a boolean to check if the value has been set.
func (o *SlackDefaultSettingsDataAttributes) GetTargetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetChannelId, true
}

// SetTargetChannelId sets field value
func (o *SlackDefaultSettingsDataAttributes) SetTargetChannelId(v string) {
	o.TargetChannelId = v
}

// GetTargetChannelName returns the TargetChannelName field value
func (o *SlackDefaultSettingsDataAttributes) GetTargetChannelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetChannelName
}

// GetTargetChannelNameOk returns a tuple with the TargetChannelName field value
// and a boolean to check if the value has been set.
func (o *SlackDefaultSettingsDataAttributes) GetTargetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetChannelName, true
}

// SetTargetChannelName sets field value
func (o *SlackDefaultSettingsDataAttributes) SetTargetChannelName(v string) {
	o.TargetChannelName = v
}

func (o SlackDefaultSettingsDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlackDefaultSettingsDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["severity_threshold"] = o.SeverityThreshold
	toSerialize["target_channel_id"] = o.TargetChannelId
	toSerialize["target_channel_name"] = o.TargetChannelName
	return toSerialize, nil
}

func (o *SlackDefaultSettingsDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"severity_threshold",
		"target_channel_id",
		"target_channel_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSlackDefaultSettingsDataAttributes := _SlackDefaultSettingsDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSlackDefaultSettingsDataAttributes)

	if err != nil {
		return err
	}

	*o = SlackDefaultSettingsDataAttributes(varSlackDefaultSettingsDataAttributes)

	return err
}

type NullableSlackDefaultSettingsDataAttributes struct {
	value *SlackDefaultSettingsDataAttributes
	isSet bool
}

func (v NullableSlackDefaultSettingsDataAttributes) Get() *SlackDefaultSettingsDataAttributes {
	return v.value
}

func (v *NullableSlackDefaultSettingsDataAttributes) Set(val *SlackDefaultSettingsDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackDefaultSettingsDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackDefaultSettingsDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackDefaultSettingsDataAttributes(val *SlackDefaultSettingsDataAttributes) *NullableSlackDefaultSettingsDataAttributes {
	return &NullableSlackDefaultSettingsDataAttributes{value: val, isSet: true}
}

func (v NullableSlackDefaultSettingsDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackDefaultSettingsDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


