/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CollectionRelationshipsCreatedByUserData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionRelationshipsCreatedByUserData{}

// CollectionRelationshipsCreatedByUserData struct for CollectionRelationshipsCreatedByUserData
type CollectionRelationshipsCreatedByUserData struct {
	// ID of the user that created the collection. Null for auto-collections.
	Id NullableString `json:"id"`
	Type string `json:"type"`
}

type _CollectionRelationshipsCreatedByUserData CollectionRelationshipsCreatedByUserData

// NewCollectionRelationshipsCreatedByUserData instantiates a new CollectionRelationshipsCreatedByUserData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionRelationshipsCreatedByUserData(id NullableString, type_ string) *CollectionRelationshipsCreatedByUserData {
	this := CollectionRelationshipsCreatedByUserData{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewCollectionRelationshipsCreatedByUserDataWithDefaults instantiates a new CollectionRelationshipsCreatedByUserData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionRelationshipsCreatedByUserDataWithDefaults() *CollectionRelationshipsCreatedByUserData {
	this := CollectionRelationshipsCreatedByUserData{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CollectionRelationshipsCreatedByUserData) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CollectionRelationshipsCreatedByUserData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *CollectionRelationshipsCreatedByUserData) SetId(v string) {
	o.Id.Set(&v)
}

// GetType returns the Type field value
func (o *CollectionRelationshipsCreatedByUserData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CollectionRelationshipsCreatedByUserData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CollectionRelationshipsCreatedByUserData) SetType(v string) {
	o.Type = v
}

func (o CollectionRelationshipsCreatedByUserData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionRelationshipsCreatedByUserData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id.Get()
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CollectionRelationshipsCreatedByUserData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCollectionRelationshipsCreatedByUserData := _CollectionRelationshipsCreatedByUserData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCollectionRelationshipsCreatedByUserData)

	if err != nil {
		return err
	}

	*o = CollectionRelationshipsCreatedByUserData(varCollectionRelationshipsCreatedByUserData)

	return err
}

type NullableCollectionRelationshipsCreatedByUserData struct {
	value *CollectionRelationshipsCreatedByUserData
	isSet bool
}

func (v NullableCollectionRelationshipsCreatedByUserData) Get() *CollectionRelationshipsCreatedByUserData {
	return v.value
}

func (v *NullableCollectionRelationshipsCreatedByUserData) Set(val *CollectionRelationshipsCreatedByUserData) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionRelationshipsCreatedByUserData) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionRelationshipsCreatedByUserData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionRelationshipsCreatedByUserData(val *CollectionRelationshipsCreatedByUserData) *NullableCollectionRelationshipsCreatedByUserData {
	return &NullableCollectionRelationshipsCreatedByUserData{value: val, isSet: true}
}

func (v NullableCollectionRelationshipsCreatedByUserData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionRelationshipsCreatedByUserData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


