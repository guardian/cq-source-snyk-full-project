/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListOrgProjects200ResponseMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrgProjects200ResponseMeta{}

// ListOrgProjects200ResponseMeta struct for ListOrgProjects200ResponseMeta
type ListOrgProjects200ResponseMeta struct {
	Count *float32 `json:"count,omitempty"`
}

// NewListOrgProjects200ResponseMeta instantiates a new ListOrgProjects200ResponseMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrgProjects200ResponseMeta() *ListOrgProjects200ResponseMeta {
	this := ListOrgProjects200ResponseMeta{}
	return &this
}

// NewListOrgProjects200ResponseMetaWithDefaults instantiates a new ListOrgProjects200ResponseMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrgProjects200ResponseMetaWithDefaults() *ListOrgProjects200ResponseMeta {
	this := ListOrgProjects200ResponseMeta{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListOrgProjects200ResponseMeta) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseMeta) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ListOrgProjects200ResponseMeta) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *ListOrgProjects200ResponseMeta) SetCount(v float32) {
	o.Count = &v
}

func (o ListOrgProjects200ResponseMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrgProjects200ResponseMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableListOrgProjects200ResponseMeta struct {
	value *ListOrgProjects200ResponseMeta
	isSet bool
}

func (v NullableListOrgProjects200ResponseMeta) Get() *ListOrgProjects200ResponseMeta {
	return v.value
}

func (v *NullableListOrgProjects200ResponseMeta) Set(val *ListOrgProjects200ResponseMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrgProjects200ResponseMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrgProjects200ResponseMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrgProjects200ResponseMeta(val *ListOrgProjects200ResponseMeta) *NullableListOrgProjects200ResponseMeta {
	return &NullableListOrgProjects200ResponseMeta{value: val, isSet: true}
}

func (v NullableListOrgProjects200ResponseMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrgProjects200ResponseMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


