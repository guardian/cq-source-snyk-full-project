/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListOrgProjects200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrgProjects200ResponseDataInner{}

// ListOrgProjects200ResponseDataInner struct for ListOrgProjects200ResponseDataInner
type ListOrgProjects200ResponseDataInner struct {
	Attributes ProjectAttributes `json:"attributes"`
	// Resource ID.
	Id string `json:"id"`
	Meta *ListOrgProjects200ResponseDataInnerMeta `json:"meta,omitempty"`
	Relationships *ProjectRelationships `json:"relationships,omitempty"`
	// The Resource type.
	Type string `json:"type"`
}

type _ListOrgProjects200ResponseDataInner ListOrgProjects200ResponseDataInner

// NewListOrgProjects200ResponseDataInner instantiates a new ListOrgProjects200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrgProjects200ResponseDataInner(attributes ProjectAttributes, id string, type_ string) *ListOrgProjects200ResponseDataInner {
	this := ListOrgProjects200ResponseDataInner{}
	this.Attributes = attributes
	this.Id = id
	this.Type = type_
	return &this
}

// NewListOrgProjects200ResponseDataInnerWithDefaults instantiates a new ListOrgProjects200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrgProjects200ResponseDataInnerWithDefaults() *ListOrgProjects200ResponseDataInner {
	this := ListOrgProjects200ResponseDataInner{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *ListOrgProjects200ResponseDataInner) GetAttributes() ProjectAttributes {
	if o == nil {
		var ret ProjectAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseDataInner) GetAttributesOk() (*ProjectAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *ListOrgProjects200ResponseDataInner) SetAttributes(v ProjectAttributes) {
	o.Attributes = v
}

// GetId returns the Id field value
func (o *ListOrgProjects200ResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListOrgProjects200ResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListOrgProjects200ResponseDataInner) GetMeta() ListOrgProjects200ResponseDataInnerMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListOrgProjects200ResponseDataInnerMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseDataInner) GetMetaOk() (*ListOrgProjects200ResponseDataInnerMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListOrgProjects200ResponseDataInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListOrgProjects200ResponseDataInnerMeta and assigns it to the Meta field.
func (o *ListOrgProjects200ResponseDataInner) SetMeta(v ListOrgProjects200ResponseDataInnerMeta) {
	o.Meta = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *ListOrgProjects200ResponseDataInner) GetRelationships() ProjectRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret ProjectRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseDataInner) GetRelationshipsOk() (*ProjectRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *ListOrgProjects200ResponseDataInner) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given ProjectRelationships and assigns it to the Relationships field.
func (o *ListOrgProjects200ResponseDataInner) SetRelationships(v ProjectRelationships) {
	o.Relationships = &v
}

// GetType returns the Type field value
func (o *ListOrgProjects200ResponseDataInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListOrgProjects200ResponseDataInner) SetType(v string) {
	o.Type = v
}

func (o ListOrgProjects200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrgProjects200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributes"] = o.Attributes
	toSerialize["id"] = o.Id
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *ListOrgProjects200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributes",
		"id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListOrgProjects200ResponseDataInner := _ListOrgProjects200ResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListOrgProjects200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = ListOrgProjects200ResponseDataInner(varListOrgProjects200ResponseDataInner)

	return err
}

type NullableListOrgProjects200ResponseDataInner struct {
	value *ListOrgProjects200ResponseDataInner
	isSet bool
}

func (v NullableListOrgProjects200ResponseDataInner) Get() *ListOrgProjects200ResponseDataInner {
	return v.value
}

func (v *NullableListOrgProjects200ResponseDataInner) Set(val *ListOrgProjects200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrgProjects200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrgProjects200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrgProjects200ResponseDataInner(val *ListOrgProjects200ResponseDataInner) *NullableListOrgProjects200ResponseDataInner {
	return &NullableListOrgProjects200ResponseDataInner{value: val, isSet: true}
}

func (v NullableListOrgProjects200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrgProjects200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


