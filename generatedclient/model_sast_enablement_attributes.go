/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SastEnablementAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SastEnablementAttributes{}

// SastEnablementAttributes struct for SastEnablementAttributes
type SastEnablementAttributes struct {
	AutofixEnabled *bool `json:"autofix_enabled,omitempty"`
	SastEnabled bool `json:"sast_enabled"`
}

type _SastEnablementAttributes SastEnablementAttributes

// NewSastEnablementAttributes instantiates a new SastEnablementAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSastEnablementAttributes(sastEnabled bool) *SastEnablementAttributes {
	this := SastEnablementAttributes{}
	this.SastEnabled = sastEnabled
	return &this
}

// NewSastEnablementAttributesWithDefaults instantiates a new SastEnablementAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSastEnablementAttributesWithDefaults() *SastEnablementAttributes {
	this := SastEnablementAttributes{}
	return &this
}

// GetAutofixEnabled returns the AutofixEnabled field value if set, zero value otherwise.
func (o *SastEnablementAttributes) GetAutofixEnabled() bool {
	if o == nil || IsNil(o.AutofixEnabled) {
		var ret bool
		return ret
	}
	return *o.AutofixEnabled
}

// GetAutofixEnabledOk returns a tuple with the AutofixEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SastEnablementAttributes) GetAutofixEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutofixEnabled) {
		return nil, false
	}
	return o.AutofixEnabled, true
}

// HasAutofixEnabled returns a boolean if a field has been set.
func (o *SastEnablementAttributes) HasAutofixEnabled() bool {
	if o != nil && !IsNil(o.AutofixEnabled) {
		return true
	}

	return false
}

// SetAutofixEnabled gets a reference to the given bool and assigns it to the AutofixEnabled field.
func (o *SastEnablementAttributes) SetAutofixEnabled(v bool) {
	o.AutofixEnabled = &v
}

// GetSastEnabled returns the SastEnabled field value
func (o *SastEnablementAttributes) GetSastEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SastEnabled
}

// GetSastEnabledOk returns a tuple with the SastEnabled field value
// and a boolean to check if the value has been set.
func (o *SastEnablementAttributes) GetSastEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SastEnabled, true
}

// SetSastEnabled sets field value
func (o *SastEnablementAttributes) SetSastEnabled(v bool) {
	o.SastEnabled = v
}

func (o SastEnablementAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SastEnablementAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutofixEnabled) {
		toSerialize["autofix_enabled"] = o.AutofixEnabled
	}
	toSerialize["sast_enabled"] = o.SastEnabled
	return toSerialize, nil
}

func (o *SastEnablementAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sast_enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSastEnablementAttributes := _SastEnablementAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSastEnablementAttributes)

	if err != nil {
		return err
	}

	*o = SastEnablementAttributes(varSastEnablementAttributes)

	return err
}

type NullableSastEnablementAttributes struct {
	value *SastEnablementAttributes
	isSet bool
}

func (v NullableSastEnablementAttributes) Get() *SastEnablementAttributes {
	return v.value
}

func (v *NullableSastEnablementAttributes) Set(val *SastEnablementAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSastEnablementAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSastEnablementAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSastEnablementAttributes(val *SastEnablementAttributes) *NullableSastEnablementAttributes {
	return &NullableSastEnablementAttributes{value: val, isSet: true}
}

func (v NullableSastEnablementAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSastEnablementAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


