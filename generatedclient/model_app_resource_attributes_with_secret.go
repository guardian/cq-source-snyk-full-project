/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppResourceAttributesWithSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppResourceAttributesWithSecret{}

// AppResourceAttributesWithSecret struct for AppResourceAttributesWithSecret
type AppResourceAttributesWithSecret struct {
	// The access token time to live for your app, in seconds. It only affects the newly generated access tokens, existing access token will  continue to have their previous time to live as expiration.
	AccessTokenTtlSeconds float32 `json:"access_token_ttl_seconds"`
	// The oauth2 client id for the app.
	ClientId string `json:"client_id"`
	// The oauth2 client secret for the app. This is the only time this secret will be returned, store it securely and donâ€™t lose it.
	ClientSecret string `json:"client_secret"`
	Context Context `json:"context"`
	GrantType GrantType `json:"grant_type"`
	// A boolean to indicate if an app is confidential or not as per the OAuth2 RFC. Confidential apps can securely store secrets. Examples of non-confidential apps are full web-based or CLIs.
	IsConfidential bool `json:"is_confidential"`
	// A boolean to indicate if an app is publicly available or not.
	IsPublic bool `json:"is_public"`
	// New name of the app to display to users during authorization flow.
	Name string `json:"name"`
	OrgPublicId *string `json:"org_public_id,omitempty"`
	// List of allowed redirect URIs to call back after authentication.
	RedirectUris []string `json:"redirect_uris"`
	// The scopes this app is allowed to request during authorization.
	Scopes []string `json:"scopes"`
}

type _AppResourceAttributesWithSecret AppResourceAttributesWithSecret

// NewAppResourceAttributesWithSecret instantiates a new AppResourceAttributesWithSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppResourceAttributesWithSecret(accessTokenTtlSeconds float32, clientId string, clientSecret string, context Context, grantType GrantType, isConfidential bool, isPublic bool, name string, redirectUris []string, scopes []string) *AppResourceAttributesWithSecret {
	this := AppResourceAttributesWithSecret{}
	this.AccessTokenTtlSeconds = accessTokenTtlSeconds
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.Context = context
	this.GrantType = grantType
	this.IsConfidential = isConfidential
	this.IsPublic = isPublic
	this.Name = name
	this.RedirectUris = redirectUris
	this.Scopes = scopes
	return &this
}

// NewAppResourceAttributesWithSecretWithDefaults instantiates a new AppResourceAttributesWithSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppResourceAttributesWithSecretWithDefaults() *AppResourceAttributesWithSecret {
	this := AppResourceAttributesWithSecret{}
	return &this
}

// GetAccessTokenTtlSeconds returns the AccessTokenTtlSeconds field value
func (o *AppResourceAttributesWithSecret) GetAccessTokenTtlSeconds() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AccessTokenTtlSeconds
}

// GetAccessTokenTtlSecondsOk returns a tuple with the AccessTokenTtlSeconds field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetAccessTokenTtlSecondsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessTokenTtlSeconds, true
}

// SetAccessTokenTtlSeconds sets field value
func (o *AppResourceAttributesWithSecret) SetAccessTokenTtlSeconds(v float32) {
	o.AccessTokenTtlSeconds = v
}

// GetClientId returns the ClientId field value
func (o *AppResourceAttributesWithSecret) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *AppResourceAttributesWithSecret) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *AppResourceAttributesWithSecret) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *AppResourceAttributesWithSecret) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetContext returns the Context field value
func (o *AppResourceAttributesWithSecret) GetContext() Context {
	if o == nil {
		var ret Context
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetContextOk() (*Context, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *AppResourceAttributesWithSecret) SetContext(v Context) {
	o.Context = v
}

// GetGrantType returns the GrantType field value
func (o *AppResourceAttributesWithSecret) GetGrantType() GrantType {
	if o == nil {
		var ret GrantType
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetGrantTypeOk() (*GrantType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *AppResourceAttributesWithSecret) SetGrantType(v GrantType) {
	o.GrantType = v
}

// GetIsConfidential returns the IsConfidential field value
func (o *AppResourceAttributesWithSecret) GetIsConfidential() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsConfidential
}

// GetIsConfidentialOk returns a tuple with the IsConfidential field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetIsConfidentialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsConfidential, true
}

// SetIsConfidential sets field value
func (o *AppResourceAttributesWithSecret) SetIsConfidential(v bool) {
	o.IsConfidential = v
}

// GetIsPublic returns the IsPublic field value
func (o *AppResourceAttributesWithSecret) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *AppResourceAttributesWithSecret) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetName returns the Name field value
func (o *AppResourceAttributesWithSecret) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AppResourceAttributesWithSecret) SetName(v string) {
	o.Name = v
}

// GetOrgPublicId returns the OrgPublicId field value if set, zero value otherwise.
func (o *AppResourceAttributesWithSecret) GetOrgPublicId() string {
	if o == nil || IsNil(o.OrgPublicId) {
		var ret string
		return ret
	}
	return *o.OrgPublicId
}

// GetOrgPublicIdOk returns a tuple with the OrgPublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetOrgPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgPublicId) {
		return nil, false
	}
	return o.OrgPublicId, true
}

// HasOrgPublicId returns a boolean if a field has been set.
func (o *AppResourceAttributesWithSecret) HasOrgPublicId() bool {
	if o != nil && !IsNil(o.OrgPublicId) {
		return true
	}

	return false
}

// SetOrgPublicId gets a reference to the given string and assigns it to the OrgPublicId field.
func (o *AppResourceAttributesWithSecret) SetOrgPublicId(v string) {
	o.OrgPublicId = &v
}

// GetRedirectUris returns the RedirectUris field value
func (o *AppResourceAttributesWithSecret) GetRedirectUris() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetRedirectUrisOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedirectUris, true
}

// SetRedirectUris sets field value
func (o *AppResourceAttributesWithSecret) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetScopes returns the Scopes field value
func (o *AppResourceAttributesWithSecret) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *AppResourceAttributesWithSecret) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *AppResourceAttributesWithSecret) SetScopes(v []string) {
	o.Scopes = v
}

func (o AppResourceAttributesWithSecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppResourceAttributesWithSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token_ttl_seconds"] = o.AccessTokenTtlSeconds
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["context"] = o.Context
	toSerialize["grant_type"] = o.GrantType
	toSerialize["is_confidential"] = o.IsConfidential
	toSerialize["is_public"] = o.IsPublic
	toSerialize["name"] = o.Name
	if !IsNil(o.OrgPublicId) {
		toSerialize["org_public_id"] = o.OrgPublicId
	}
	toSerialize["redirect_uris"] = o.RedirectUris
	toSerialize["scopes"] = o.Scopes
	return toSerialize, nil
}

func (o *AppResourceAttributesWithSecret) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token_ttl_seconds",
		"client_id",
		"client_secret",
		"context",
		"grant_type",
		"is_confidential",
		"is_public",
		"name",
		"redirect_uris",
		"scopes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppResourceAttributesWithSecret := _AppResourceAttributesWithSecret{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppResourceAttributesWithSecret)

	if err != nil {
		return err
	}

	*o = AppResourceAttributesWithSecret(varAppResourceAttributesWithSecret)

	return err
}

type NullableAppResourceAttributesWithSecret struct {
	value *AppResourceAttributesWithSecret
	isSet bool
}

func (v NullableAppResourceAttributesWithSecret) Get() *AppResourceAttributesWithSecret {
	return v.value
}

func (v *NullableAppResourceAttributesWithSecret) Set(val *AppResourceAttributesWithSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableAppResourceAttributesWithSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableAppResourceAttributesWithSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppResourceAttributesWithSecret(val *AppResourceAttributesWithSecret) *NullableAppResourceAttributesWithSecret {
	return &NullableAppResourceAttributesWithSecret{value: val, isSet: true}
}

func (v NullableAppResourceAttributesWithSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppResourceAttributesWithSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


