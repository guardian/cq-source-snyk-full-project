/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomBaseImageCollectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomBaseImageCollectionResponse{}

// CustomBaseImageCollectionResponse struct for CustomBaseImageCollectionResponse
type CustomBaseImageCollectionResponse struct {
	Data []CustomBaseImageCollectionResponseDataInner `json:"data"`
	Jsonapi JsonApi `json:"jsonapi"`
	Links *PaginatedLinks `json:"links,omitempty"`
}

type _CustomBaseImageCollectionResponse CustomBaseImageCollectionResponse

// NewCustomBaseImageCollectionResponse instantiates a new CustomBaseImageCollectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomBaseImageCollectionResponse(data []CustomBaseImageCollectionResponseDataInner, jsonapi JsonApi) *CustomBaseImageCollectionResponse {
	this := CustomBaseImageCollectionResponse{}
	this.Data = data
	this.Jsonapi = jsonapi
	return &this
}

// NewCustomBaseImageCollectionResponseWithDefaults instantiates a new CustomBaseImageCollectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomBaseImageCollectionResponseWithDefaults() *CustomBaseImageCollectionResponse {
	this := CustomBaseImageCollectionResponse{}
	return &this
}

// GetData returns the Data field value
func (o *CustomBaseImageCollectionResponse) GetData() []CustomBaseImageCollectionResponseDataInner {
	if o == nil {
		var ret []CustomBaseImageCollectionResponseDataInner
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CustomBaseImageCollectionResponse) GetDataOk() ([]CustomBaseImageCollectionResponseDataInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *CustomBaseImageCollectionResponse) SetData(v []CustomBaseImageCollectionResponseDataInner) {
	o.Data = v
}

// GetJsonapi returns the Jsonapi field value
func (o *CustomBaseImageCollectionResponse) GetJsonapi() JsonApi {
	if o == nil {
		var ret JsonApi
		return ret
	}

	return o.Jsonapi
}

// GetJsonapiOk returns a tuple with the Jsonapi field value
// and a boolean to check if the value has been set.
func (o *CustomBaseImageCollectionResponse) GetJsonapiOk() (*JsonApi, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jsonapi, true
}

// SetJsonapi sets field value
func (o *CustomBaseImageCollectionResponse) SetJsonapi(v JsonApi) {
	o.Jsonapi = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CustomBaseImageCollectionResponse) GetLinks() PaginatedLinks {
	if o == nil || IsNil(o.Links) {
		var ret PaginatedLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomBaseImageCollectionResponse) GetLinksOk() (*PaginatedLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CustomBaseImageCollectionResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given PaginatedLinks and assigns it to the Links field.
func (o *CustomBaseImageCollectionResponse) SetLinks(v PaginatedLinks) {
	o.Links = &v
}

func (o CustomBaseImageCollectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomBaseImageCollectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["jsonapi"] = o.Jsonapi
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

func (o *CustomBaseImageCollectionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"jsonapi",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomBaseImageCollectionResponse := _CustomBaseImageCollectionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomBaseImageCollectionResponse)

	if err != nil {
		return err
	}

	*o = CustomBaseImageCollectionResponse(varCustomBaseImageCollectionResponse)

	return err
}

type NullableCustomBaseImageCollectionResponse struct {
	value *CustomBaseImageCollectionResponse
	isSet bool
}

func (v NullableCustomBaseImageCollectionResponse) Get() *CustomBaseImageCollectionResponse {
	return v.value
}

func (v *NullableCustomBaseImageCollectionResponse) Set(val *CustomBaseImageCollectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomBaseImageCollectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomBaseImageCollectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomBaseImageCollectionResponse(val *CustomBaseImageCollectionResponse) *NullableCustomBaseImageCollectionResponse {
	return &NullableCustomBaseImageCollectionResponse{value: val, isSet: true}
}

func (v NullableCustomBaseImageCollectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomBaseImageCollectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


