/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCollections200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCollections200Response{}

// GetCollections200Response struct for GetCollections200Response
type GetCollections200Response struct {
	Data []CollectionResponse `json:"data,omitempty"`
	Jsonapi *JsonApi `json:"jsonapi,omitempty"`
	Links *PaginatedLinks `json:"links,omitempty"`
}

// NewGetCollections200Response instantiates a new GetCollections200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCollections200Response() *GetCollections200Response {
	this := GetCollections200Response{}
	return &this
}

// NewGetCollections200ResponseWithDefaults instantiates a new GetCollections200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCollections200ResponseWithDefaults() *GetCollections200Response {
	this := GetCollections200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetCollections200Response) GetData() []CollectionResponse {
	if o == nil || IsNil(o.Data) {
		var ret []CollectionResponse
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCollections200Response) GetDataOk() ([]CollectionResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetCollections200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []CollectionResponse and assigns it to the Data field.
func (o *GetCollections200Response) SetData(v []CollectionResponse) {
	o.Data = v
}

// GetJsonapi returns the Jsonapi field value if set, zero value otherwise.
func (o *GetCollections200Response) GetJsonapi() JsonApi {
	if o == nil || IsNil(o.Jsonapi) {
		var ret JsonApi
		return ret
	}
	return *o.Jsonapi
}

// GetJsonapiOk returns a tuple with the Jsonapi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCollections200Response) GetJsonapiOk() (*JsonApi, bool) {
	if o == nil || IsNil(o.Jsonapi) {
		return nil, false
	}
	return o.Jsonapi, true
}

// HasJsonapi returns a boolean if a field has been set.
func (o *GetCollections200Response) HasJsonapi() bool {
	if o != nil && !IsNil(o.Jsonapi) {
		return true
	}

	return false
}

// SetJsonapi gets a reference to the given JsonApi and assigns it to the Jsonapi field.
func (o *GetCollections200Response) SetJsonapi(v JsonApi) {
	o.Jsonapi = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetCollections200Response) GetLinks() PaginatedLinks {
	if o == nil || IsNil(o.Links) {
		var ret PaginatedLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCollections200Response) GetLinksOk() (*PaginatedLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetCollections200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given PaginatedLinks and assigns it to the Links field.
func (o *GetCollections200Response) SetLinks(v PaginatedLinks) {
	o.Links = &v
}

func (o GetCollections200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCollections200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Jsonapi) {
		toSerialize["jsonapi"] = o.Jsonapi
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetCollections200Response struct {
	value *GetCollections200Response
	isSet bool
}

func (v NullableGetCollections200Response) Get() *GetCollections200Response {
	return v.value
}

func (v *NullableGetCollections200Response) Set(val *GetCollections200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCollections200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCollections200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCollections200Response(val *GetCollections200Response) *NullableGetCollections200Response {
	return &NullableGetCollections200Response{value: val, isSet: true}
}

func (v NullableGetCollections200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCollections200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


