/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListOrgProjects200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrgProjects200Response{}

// ListOrgProjects200Response struct for ListOrgProjects200Response
type ListOrgProjects200Response struct {
	Data []ListOrgProjects200ResponseDataInner `json:"data,omitempty"`
	Jsonapi JsonApi `json:"jsonapi"`
	Links Links `json:"links"`
	Meta *ListOrgProjects200ResponseMeta `json:"meta,omitempty"`
}

type _ListOrgProjects200Response ListOrgProjects200Response

// NewListOrgProjects200Response instantiates a new ListOrgProjects200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrgProjects200Response(jsonapi JsonApi, links Links) *ListOrgProjects200Response {
	this := ListOrgProjects200Response{}
	this.Jsonapi = jsonapi
	this.Links = links
	return &this
}

// NewListOrgProjects200ResponseWithDefaults instantiates a new ListOrgProjects200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrgProjects200ResponseWithDefaults() *ListOrgProjects200Response {
	this := ListOrgProjects200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListOrgProjects200Response) GetData() []ListOrgProjects200ResponseDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []ListOrgProjects200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200Response) GetDataOk() ([]ListOrgProjects200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListOrgProjects200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ListOrgProjects200ResponseDataInner and assigns it to the Data field.
func (o *ListOrgProjects200Response) SetData(v []ListOrgProjects200ResponseDataInner) {
	o.Data = v
}

// GetJsonapi returns the Jsonapi field value
func (o *ListOrgProjects200Response) GetJsonapi() JsonApi {
	if o == nil {
		var ret JsonApi
		return ret
	}

	return o.Jsonapi
}

// GetJsonapiOk returns a tuple with the Jsonapi field value
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200Response) GetJsonapiOk() (*JsonApi, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jsonapi, true
}

// SetJsonapi sets field value
func (o *ListOrgProjects200Response) SetJsonapi(v JsonApi) {
	o.Jsonapi = v
}

// GetLinks returns the Links field value
func (o *ListOrgProjects200Response) GetLinks() Links {
	if o == nil {
		var ret Links
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200Response) GetLinksOk() (*Links, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *ListOrgProjects200Response) SetLinks(v Links) {
	o.Links = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListOrgProjects200Response) GetMeta() ListOrgProjects200ResponseMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListOrgProjects200ResponseMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrgProjects200Response) GetMetaOk() (*ListOrgProjects200ResponseMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListOrgProjects200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListOrgProjects200ResponseMeta and assigns it to the Meta field.
func (o *ListOrgProjects200Response) SetMeta(v ListOrgProjects200ResponseMeta) {
	o.Meta = &v
}

func (o ListOrgProjects200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrgProjects200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["jsonapi"] = o.Jsonapi
	toSerialize["links"] = o.Links
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

func (o *ListOrgProjects200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jsonapi",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListOrgProjects200Response := _ListOrgProjects200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListOrgProjects200Response)

	if err != nil {
		return err
	}

	*o = ListOrgProjects200Response(varListOrgProjects200Response)

	return err
}

type NullableListOrgProjects200Response struct {
	value *ListOrgProjects200Response
	isSet bool
}

func (v NullableListOrgProjects200Response) Get() *ListOrgProjects200Response {
	return v.value
}

func (v *NullableListOrgProjects200Response) Set(val *ListOrgProjects200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrgProjects200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrgProjects200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrgProjects200Response(val *ListOrgProjects200Response) *NullableListOrgProjects200Response {
	return &NullableListOrgProjects200Response{value: val, isSet: true}
}

func (v NullableListOrgProjects200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrgProjects200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


