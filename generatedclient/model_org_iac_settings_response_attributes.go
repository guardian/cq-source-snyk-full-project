/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrgIacSettingsResponseAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgIacSettingsResponseAttributes{}

// OrgIacSettingsResponseAttributes struct for OrgIacSettingsResponseAttributes
type OrgIacSettingsResponseAttributes struct {
	CustomRules *OrgIacSettingsResponseAttributesCustomRules `json:"custom_rules,omitempty"`
}

// NewOrgIacSettingsResponseAttributes instantiates a new OrgIacSettingsResponseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgIacSettingsResponseAttributes() *OrgIacSettingsResponseAttributes {
	this := OrgIacSettingsResponseAttributes{}
	return &this
}

// NewOrgIacSettingsResponseAttributesWithDefaults instantiates a new OrgIacSettingsResponseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgIacSettingsResponseAttributesWithDefaults() *OrgIacSettingsResponseAttributes {
	this := OrgIacSettingsResponseAttributes{}
	return &this
}

// GetCustomRules returns the CustomRules field value if set, zero value otherwise.
func (o *OrgIacSettingsResponseAttributes) GetCustomRules() OrgIacSettingsResponseAttributesCustomRules {
	if o == nil || IsNil(o.CustomRules) {
		var ret OrgIacSettingsResponseAttributesCustomRules
		return ret
	}
	return *o.CustomRules
}

// GetCustomRulesOk returns a tuple with the CustomRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgIacSettingsResponseAttributes) GetCustomRulesOk() (*OrgIacSettingsResponseAttributesCustomRules, bool) {
	if o == nil || IsNil(o.CustomRules) {
		return nil, false
	}
	return o.CustomRules, true
}

// HasCustomRules returns a boolean if a field has been set.
func (o *OrgIacSettingsResponseAttributes) HasCustomRules() bool {
	if o != nil && !IsNil(o.CustomRules) {
		return true
	}

	return false
}

// SetCustomRules gets a reference to the given OrgIacSettingsResponseAttributesCustomRules and assigns it to the CustomRules field.
func (o *OrgIacSettingsResponseAttributes) SetCustomRules(v OrgIacSettingsResponseAttributesCustomRules) {
	o.CustomRules = &v
}

func (o OrgIacSettingsResponseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgIacSettingsResponseAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomRules) {
		toSerialize["custom_rules"] = o.CustomRules
	}
	return toSerialize, nil
}

type NullableOrgIacSettingsResponseAttributes struct {
	value *OrgIacSettingsResponseAttributes
	isSet bool
}

func (v NullableOrgIacSettingsResponseAttributes) Get() *OrgIacSettingsResponseAttributes {
	return v.value
}

func (v *NullableOrgIacSettingsResponseAttributes) Set(val *OrgIacSettingsResponseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgIacSettingsResponseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgIacSettingsResponseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgIacSettingsResponseAttributes(val *OrgIacSettingsResponseAttributes) *NullableOrgIacSettingsResponseAttributes {
	return &NullableOrgIacSettingsResponseAttributes{value: val, isSet: true}
}

func (v NullableOrgIacSettingsResponseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgIacSettingsResponseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


