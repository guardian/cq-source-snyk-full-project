/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CommonIssueModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonIssueModel{}

// CommonIssueModel struct for CommonIssueModel
type CommonIssueModel struct {
	Attributes *CommonIssueModelAttributes `json:"attributes,omitempty"`
	// The Snyk ID of the vulnerability.
	Id *string `json:"id,omitempty"`
	// The type of the REST resource. Always ‘issue’.
	Type *string `json:"type,omitempty"`
}

// NewCommonIssueModel instantiates a new CommonIssueModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonIssueModel() *CommonIssueModel {
	this := CommonIssueModel{}
	return &this
}

// NewCommonIssueModelWithDefaults instantiates a new CommonIssueModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonIssueModelWithDefaults() *CommonIssueModel {
	this := CommonIssueModel{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *CommonIssueModel) GetAttributes() CommonIssueModelAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret CommonIssueModelAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModel) GetAttributesOk() (*CommonIssueModelAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *CommonIssueModel) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given CommonIssueModelAttributes and assigns it to the Attributes field.
func (o *CommonIssueModel) SetAttributes(v CommonIssueModelAttributes) {
	o.Attributes = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonIssueModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonIssueModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonIssueModel) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommonIssueModel) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModel) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommonIssueModel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommonIssueModel) SetType(v string) {
	o.Type = &v
}

func (o CommonIssueModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonIssueModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCommonIssueModel struct {
	value *CommonIssueModel
	isSet bool
}

func (v NullableCommonIssueModel) Get() *CommonIssueModel {
	return v.value
}

func (v *NullableCommonIssueModel) Set(val *CommonIssueModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonIssueModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonIssueModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonIssueModel(val *CommonIssueModel) *NullableCommonIssueModel {
	return &NullableCommonIssueModel{value: val, isSet: true}
}

func (v NullableCommonIssueModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonIssueModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


