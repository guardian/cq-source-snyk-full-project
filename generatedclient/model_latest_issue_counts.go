/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the LatestIssueCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LatestIssueCounts{}

// LatestIssueCounts struct for LatestIssueCounts
type LatestIssueCounts struct {
	Critical *float32 `json:"critical,omitempty"`
	High *float32 `json:"high,omitempty"`
	Low *float32 `json:"low,omitempty"`
	Medium *float32 `json:"medium,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewLatestIssueCounts instantiates a new LatestIssueCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLatestIssueCounts() *LatestIssueCounts {
	this := LatestIssueCounts{}
	return &this
}

// NewLatestIssueCountsWithDefaults instantiates a new LatestIssueCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLatestIssueCountsWithDefaults() *LatestIssueCounts {
	this := LatestIssueCounts{}
	return &this
}

// GetCritical returns the Critical field value if set, zero value otherwise.
func (o *LatestIssueCounts) GetCritical() float32 {
	if o == nil || IsNil(o.Critical) {
		var ret float32
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestIssueCounts) GetCriticalOk() (*float32, bool) {
	if o == nil || IsNil(o.Critical) {
		return nil, false
	}
	return o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *LatestIssueCounts) HasCritical() bool {
	if o != nil && !IsNil(o.Critical) {
		return true
	}

	return false
}

// SetCritical gets a reference to the given float32 and assigns it to the Critical field.
func (o *LatestIssueCounts) SetCritical(v float32) {
	o.Critical = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *LatestIssueCounts) GetHigh() float32 {
	if o == nil || IsNil(o.High) {
		var ret float32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestIssueCounts) GetHighOk() (*float32, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *LatestIssueCounts) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given float32 and assigns it to the High field.
func (o *LatestIssueCounts) SetHigh(v float32) {
	o.High = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *LatestIssueCounts) GetLow() float32 {
	if o == nil || IsNil(o.Low) {
		var ret float32
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestIssueCounts) GetLowOk() (*float32, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *LatestIssueCounts) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given float32 and assigns it to the Low field.
func (o *LatestIssueCounts) SetLow(v float32) {
	o.Low = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *LatestIssueCounts) GetMedium() float32 {
	if o == nil || IsNil(o.Medium) {
		var ret float32
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestIssueCounts) GetMediumOk() (*float32, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *LatestIssueCounts) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given float32 and assigns it to the Medium field.
func (o *LatestIssueCounts) SetMedium(v float32) {
	o.Medium = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LatestIssueCounts) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LatestIssueCounts) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LatestIssueCounts) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *LatestIssueCounts) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o LatestIssueCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LatestIssueCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Critical) {
		toSerialize["critical"] = o.Critical
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableLatestIssueCounts struct {
	value *LatestIssueCounts
	isSet bool
}

func (v NullableLatestIssueCounts) Get() *LatestIssueCounts {
	return v.value
}

func (v *NullableLatestIssueCounts) Set(val *LatestIssueCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableLatestIssueCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableLatestIssueCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLatestIssueCounts(val *LatestIssueCounts) *NullableLatestIssueCounts {
	return &NullableLatestIssueCounts{value: val, isSet: true}
}

func (v NullableLatestIssueCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLatestIssueCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


