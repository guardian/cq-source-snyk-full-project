/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomBaseImagePatchRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomBaseImagePatchRequestData{}

// CustomBaseImagePatchRequestData struct for CustomBaseImagePatchRequestData
type CustomBaseImagePatchRequestData struct {
	Attributes CustomBaseImagePatchRequestDataAttributes `json:"attributes"`
	// The ID of the custom base image that should be updated. (Same one used in the URI)
	Id *string `json:"id,omitempty"`
	// This should always be \"custom_base_image\"
	Type string `json:"type"`
}

type _CustomBaseImagePatchRequestData CustomBaseImagePatchRequestData

// NewCustomBaseImagePatchRequestData instantiates a new CustomBaseImagePatchRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomBaseImagePatchRequestData(attributes CustomBaseImagePatchRequestDataAttributes, type_ string) *CustomBaseImagePatchRequestData {
	this := CustomBaseImagePatchRequestData{}
	this.Attributes = attributes
	this.Type = type_
	return &this
}

// NewCustomBaseImagePatchRequestDataWithDefaults instantiates a new CustomBaseImagePatchRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomBaseImagePatchRequestDataWithDefaults() *CustomBaseImagePatchRequestData {
	this := CustomBaseImagePatchRequestData{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *CustomBaseImagePatchRequestData) GetAttributes() CustomBaseImagePatchRequestDataAttributes {
	if o == nil {
		var ret CustomBaseImagePatchRequestDataAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *CustomBaseImagePatchRequestData) GetAttributesOk() (*CustomBaseImagePatchRequestDataAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *CustomBaseImagePatchRequestData) SetAttributes(v CustomBaseImagePatchRequestDataAttributes) {
	o.Attributes = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomBaseImagePatchRequestData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomBaseImagePatchRequestData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomBaseImagePatchRequestData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomBaseImagePatchRequestData) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *CustomBaseImagePatchRequestData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomBaseImagePatchRequestData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomBaseImagePatchRequestData) SetType(v string) {
	o.Type = v
}

func (o CustomBaseImagePatchRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomBaseImagePatchRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributes"] = o.Attributes
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CustomBaseImagePatchRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributes",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomBaseImagePatchRequestData := _CustomBaseImagePatchRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomBaseImagePatchRequestData)

	if err != nil {
		return err
	}

	*o = CustomBaseImagePatchRequestData(varCustomBaseImagePatchRequestData)

	return err
}

type NullableCustomBaseImagePatchRequestData struct {
	value *CustomBaseImagePatchRequestData
	isSet bool
}

func (v NullableCustomBaseImagePatchRequestData) Get() *CustomBaseImagePatchRequestData {
	return v.value
}

func (v *NullableCustomBaseImagePatchRequestData) Set(val *CustomBaseImagePatchRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomBaseImagePatchRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomBaseImagePatchRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomBaseImagePatchRequestData(val *CustomBaseImagePatchRequestData) *NullableCustomBaseImagePatchRequestData {
	return &NullableCustomBaseImagePatchRequestData{value: val, isSet: true}
}

func (v NullableCustomBaseImagePatchRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomBaseImagePatchRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


