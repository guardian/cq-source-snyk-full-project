/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IssuesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssuesResponse{}

// IssuesResponse struct for IssuesResponse
type IssuesResponse struct {
	Data []CommonIssueModel `json:"data,omitempty"`
	Jsonapi *JsonApi `json:"jsonapi,omitempty"`
	Links *PaginatedLinks `json:"links,omitempty"`
	Meta *IssuesMeta `json:"meta,omitempty"`
}

// NewIssuesResponse instantiates a new IssuesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesResponse() *IssuesResponse {
	this := IssuesResponse{}
	return &this
}

// NewIssuesResponseWithDefaults instantiates a new IssuesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesResponseWithDefaults() *IssuesResponse {
	this := IssuesResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *IssuesResponse) GetData() []CommonIssueModel {
	if o == nil || IsNil(o.Data) {
		var ret []CommonIssueModel
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesResponse) GetDataOk() ([]CommonIssueModel, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *IssuesResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []CommonIssueModel and assigns it to the Data field.
func (o *IssuesResponse) SetData(v []CommonIssueModel) {
	o.Data = v
}

// GetJsonapi returns the Jsonapi field value if set, zero value otherwise.
func (o *IssuesResponse) GetJsonapi() JsonApi {
	if o == nil || IsNil(o.Jsonapi) {
		var ret JsonApi
		return ret
	}
	return *o.Jsonapi
}

// GetJsonapiOk returns a tuple with the Jsonapi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesResponse) GetJsonapiOk() (*JsonApi, bool) {
	if o == nil || IsNil(o.Jsonapi) {
		return nil, false
	}
	return o.Jsonapi, true
}

// HasJsonapi returns a boolean if a field has been set.
func (o *IssuesResponse) HasJsonapi() bool {
	if o != nil && !IsNil(o.Jsonapi) {
		return true
	}

	return false
}

// SetJsonapi gets a reference to the given JsonApi and assigns it to the Jsonapi field.
func (o *IssuesResponse) SetJsonapi(v JsonApi) {
	o.Jsonapi = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *IssuesResponse) GetLinks() PaginatedLinks {
	if o == nil || IsNil(o.Links) {
		var ret PaginatedLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesResponse) GetLinksOk() (*PaginatedLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *IssuesResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given PaginatedLinks and assigns it to the Links field.
func (o *IssuesResponse) SetLinks(v PaginatedLinks) {
	o.Links = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *IssuesResponse) GetMeta() IssuesMeta {
	if o == nil || IsNil(o.Meta) {
		var ret IssuesMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesResponse) GetMetaOk() (*IssuesMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *IssuesResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given IssuesMeta and assigns it to the Meta field.
func (o *IssuesResponse) SetMeta(v IssuesMeta) {
	o.Meta = &v
}

func (o IssuesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssuesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Jsonapi) {
		toSerialize["jsonapi"] = o.Jsonapi
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableIssuesResponse struct {
	value *IssuesResponse
	isSet bool
}

func (v NullableIssuesResponse) Get() *IssuesResponse {
	return v.value
}

func (v *NullableIssuesResponse) Set(val *IssuesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesResponse(val *IssuesResponse) *NullableIssuesResponse {
	return &NullableIssuesResponse{value: val, isSet: true}
}

func (v NullableIssuesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


