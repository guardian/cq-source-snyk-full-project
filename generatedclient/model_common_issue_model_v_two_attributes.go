/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CommonIssueModelVTwoAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonIssueModelVTwoAttributes{}

// CommonIssueModelVTwoAttributes struct for CommonIssueModelVTwoAttributes
type CommonIssueModelVTwoAttributes struct {
	Coordinates []CoordinateVTwo `json:"coordinates,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A description of the issue in Markdown format
	Description *string `json:"description,omitempty"`
	// The type from enumeration of the issue’s severity level. This is usually set from the issue’s producer, but can be overridden by policies.
	EffectiveSeverityLevel *string `json:"effective_severity_level,omitempty"`
	Problems []Problem `json:"problems,omitempty"`
	// The severity level of the vulnerability: ‘low’, ‘medium’, ‘high’ or ‘critical’.
	Severities []Severity `json:"severities,omitempty"`
	Slots *Slots `json:"slots,omitempty"`
	// A human-readable title for this issue.
	Title *string `json:"title,omitempty"`
	// The issue type
	Type *string `json:"type,omitempty"`
	// When the vulnerability information was last modified.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewCommonIssueModelVTwoAttributes instantiates a new CommonIssueModelVTwoAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonIssueModelVTwoAttributes() *CommonIssueModelVTwoAttributes {
	this := CommonIssueModelVTwoAttributes{}
	return &this
}

// NewCommonIssueModelVTwoAttributesWithDefaults instantiates a new CommonIssueModelVTwoAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonIssueModelVTwoAttributesWithDefaults() *CommonIssueModelVTwoAttributes {
	this := CommonIssueModelVTwoAttributes{}
	return &this
}

// GetCoordinates returns the Coordinates field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetCoordinates() []CoordinateVTwo {
	if o == nil || IsNil(o.Coordinates) {
		var ret []CoordinateVTwo
		return ret
	}
	return o.Coordinates
}

// GetCoordinatesOk returns a tuple with the Coordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetCoordinatesOk() ([]CoordinateVTwo, bool) {
	if o == nil || IsNil(o.Coordinates) {
		return nil, false
	}
	return o.Coordinates, true
}

// HasCoordinates returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasCoordinates() bool {
	if o != nil && !IsNil(o.Coordinates) {
		return true
	}

	return false
}

// SetCoordinates gets a reference to the given []CoordinateVTwo and assigns it to the Coordinates field.
func (o *CommonIssueModelVTwoAttributes) SetCoordinates(v []CoordinateVTwo) {
	o.Coordinates = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CommonIssueModelVTwoAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CommonIssueModelVTwoAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetEffectiveSeverityLevel returns the EffectiveSeverityLevel field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetEffectiveSeverityLevel() string {
	if o == nil || IsNil(o.EffectiveSeverityLevel) {
		var ret string
		return ret
	}
	return *o.EffectiveSeverityLevel
}

// GetEffectiveSeverityLevelOk returns a tuple with the EffectiveSeverityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetEffectiveSeverityLevelOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveSeverityLevel) {
		return nil, false
	}
	return o.EffectiveSeverityLevel, true
}

// HasEffectiveSeverityLevel returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasEffectiveSeverityLevel() bool {
	if o != nil && !IsNil(o.EffectiveSeverityLevel) {
		return true
	}

	return false
}

// SetEffectiveSeverityLevel gets a reference to the given string and assigns it to the EffectiveSeverityLevel field.
func (o *CommonIssueModelVTwoAttributes) SetEffectiveSeverityLevel(v string) {
	o.EffectiveSeverityLevel = &v
}

// GetProblems returns the Problems field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetProblems() []Problem {
	if o == nil || IsNil(o.Problems) {
		var ret []Problem
		return ret
	}
	return o.Problems
}

// GetProblemsOk returns a tuple with the Problems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetProblemsOk() ([]Problem, bool) {
	if o == nil || IsNil(o.Problems) {
		return nil, false
	}
	return o.Problems, true
}

// HasProblems returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasProblems() bool {
	if o != nil && !IsNil(o.Problems) {
		return true
	}

	return false
}

// SetProblems gets a reference to the given []Problem and assigns it to the Problems field.
func (o *CommonIssueModelVTwoAttributes) SetProblems(v []Problem) {
	o.Problems = v
}

// GetSeverities returns the Severities field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetSeverities() []Severity {
	if o == nil || IsNil(o.Severities) {
		var ret []Severity
		return ret
	}
	return o.Severities
}

// GetSeveritiesOk returns a tuple with the Severities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetSeveritiesOk() ([]Severity, bool) {
	if o == nil || IsNil(o.Severities) {
		return nil, false
	}
	return o.Severities, true
}

// HasSeverities returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasSeverities() bool {
	if o != nil && !IsNil(o.Severities) {
		return true
	}

	return false
}

// SetSeverities gets a reference to the given []Severity and assigns it to the Severities field.
func (o *CommonIssueModelVTwoAttributes) SetSeverities(v []Severity) {
	o.Severities = v
}

// GetSlots returns the Slots field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetSlots() Slots {
	if o == nil || IsNil(o.Slots) {
		var ret Slots
		return ret
	}
	return *o.Slots
}

// GetSlotsOk returns a tuple with the Slots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetSlotsOk() (*Slots, bool) {
	if o == nil || IsNil(o.Slots) {
		return nil, false
	}
	return o.Slots, true
}

// HasSlots returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasSlots() bool {
	if o != nil && !IsNil(o.Slots) {
		return true
	}

	return false
}

// SetSlots gets a reference to the given Slots and assigns it to the Slots field.
func (o *CommonIssueModelVTwoAttributes) SetSlots(v Slots) {
	o.Slots = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CommonIssueModelVTwoAttributes) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommonIssueModelVTwoAttributes) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CommonIssueModelVTwoAttributes) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonIssueModelVTwoAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CommonIssueModelVTwoAttributes) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CommonIssueModelVTwoAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o CommonIssueModelVTwoAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonIssueModelVTwoAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Coordinates) {
		toSerialize["coordinates"] = o.Coordinates
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EffectiveSeverityLevel) {
		toSerialize["effective_severity_level"] = o.EffectiveSeverityLevel
	}
	if !IsNil(o.Problems) {
		toSerialize["problems"] = o.Problems
	}
	if !IsNil(o.Severities) {
		toSerialize["severities"] = o.Severities
	}
	if !IsNil(o.Slots) {
		toSerialize["slots"] = o.Slots
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCommonIssueModelVTwoAttributes struct {
	value *CommonIssueModelVTwoAttributes
	isSet bool
}

func (v NullableCommonIssueModelVTwoAttributes) Get() *CommonIssueModelVTwoAttributes {
	return v.value
}

func (v *NullableCommonIssueModelVTwoAttributes) Set(val *CommonIssueModelVTwoAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonIssueModelVTwoAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonIssueModelVTwoAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonIssueModelVTwoAttributes(val *CommonIssueModelVTwoAttributes) *NullableCommonIssueModelVTwoAttributes {
	return &NullableCommonIssueModelVTwoAttributes{value: val, isSet: true}
}

func (v NullableCommonIssueModelVTwoAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonIssueModelVTwoAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


