/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PatchProjectRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchProjectRequestDataAttributes{}

// PatchProjectRequestDataAttributes struct for PatchProjectRequestDataAttributes
type PatchProjectRequestDataAttributes struct {
	BusinessCriticality []string `json:"business_criticality,omitempty"`
	Environment []string `json:"environment,omitempty"`
	Lifecycle []string `json:"lifecycle,omitempty"`
	Tags []PatchProjectRequestDataAttributesTagsInner `json:"tags,omitempty"`
	// Test frequency of a project. Also controls when automated PRs may be created.
	TestFrequency *string `json:"test_frequency,omitempty"`
}

// NewPatchProjectRequestDataAttributes instantiates a new PatchProjectRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchProjectRequestDataAttributes() *PatchProjectRequestDataAttributes {
	this := PatchProjectRequestDataAttributes{}
	return &this
}

// NewPatchProjectRequestDataAttributesWithDefaults instantiates a new PatchProjectRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchProjectRequestDataAttributesWithDefaults() *PatchProjectRequestDataAttributes {
	this := PatchProjectRequestDataAttributes{}
	return &this
}

// GetBusinessCriticality returns the BusinessCriticality field value if set, zero value otherwise.
func (o *PatchProjectRequestDataAttributes) GetBusinessCriticality() []string {
	if o == nil || IsNil(o.BusinessCriticality) {
		var ret []string
		return ret
	}
	return o.BusinessCriticality
}

// GetBusinessCriticalityOk returns a tuple with the BusinessCriticality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchProjectRequestDataAttributes) GetBusinessCriticalityOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessCriticality) {
		return nil, false
	}
	return o.BusinessCriticality, true
}

// HasBusinessCriticality returns a boolean if a field has been set.
func (o *PatchProjectRequestDataAttributes) HasBusinessCriticality() bool {
	if o != nil && !IsNil(o.BusinessCriticality) {
		return true
	}

	return false
}

// SetBusinessCriticality gets a reference to the given []string and assigns it to the BusinessCriticality field.
func (o *PatchProjectRequestDataAttributes) SetBusinessCriticality(v []string) {
	o.BusinessCriticality = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *PatchProjectRequestDataAttributes) GetEnvironment() []string {
	if o == nil || IsNil(o.Environment) {
		var ret []string
		return ret
	}
	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchProjectRequestDataAttributes) GetEnvironmentOk() ([]string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *PatchProjectRequestDataAttributes) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given []string and assigns it to the Environment field.
func (o *PatchProjectRequestDataAttributes) SetEnvironment(v []string) {
	o.Environment = v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *PatchProjectRequestDataAttributes) GetLifecycle() []string {
	if o == nil || IsNil(o.Lifecycle) {
		var ret []string
		return ret
	}
	return o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchProjectRequestDataAttributes) GetLifecycleOk() ([]string, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *PatchProjectRequestDataAttributes) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given []string and assigns it to the Lifecycle field.
func (o *PatchProjectRequestDataAttributes) SetLifecycle(v []string) {
	o.Lifecycle = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchProjectRequestDataAttributes) GetTags() []PatchProjectRequestDataAttributesTagsInner {
	if o == nil || IsNil(o.Tags) {
		var ret []PatchProjectRequestDataAttributesTagsInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchProjectRequestDataAttributes) GetTagsOk() ([]PatchProjectRequestDataAttributesTagsInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchProjectRequestDataAttributes) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []PatchProjectRequestDataAttributesTagsInner and assigns it to the Tags field.
func (o *PatchProjectRequestDataAttributes) SetTags(v []PatchProjectRequestDataAttributesTagsInner) {
	o.Tags = v
}

// GetTestFrequency returns the TestFrequency field value if set, zero value otherwise.
func (o *PatchProjectRequestDataAttributes) GetTestFrequency() string {
	if o == nil || IsNil(o.TestFrequency) {
		var ret string
		return ret
	}
	return *o.TestFrequency
}

// GetTestFrequencyOk returns a tuple with the TestFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchProjectRequestDataAttributes) GetTestFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.TestFrequency) {
		return nil, false
	}
	return o.TestFrequency, true
}

// HasTestFrequency returns a boolean if a field has been set.
func (o *PatchProjectRequestDataAttributes) HasTestFrequency() bool {
	if o != nil && !IsNil(o.TestFrequency) {
		return true
	}

	return false
}

// SetTestFrequency gets a reference to the given string and assigns it to the TestFrequency field.
func (o *PatchProjectRequestDataAttributes) SetTestFrequency(v string) {
	o.TestFrequency = &v
}

func (o PatchProjectRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchProjectRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessCriticality) {
		toSerialize["business_criticality"] = o.BusinessCriticality
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TestFrequency) {
		toSerialize["test_frequency"] = o.TestFrequency
	}
	return toSerialize, nil
}

type NullablePatchProjectRequestDataAttributes struct {
	value *PatchProjectRequestDataAttributes
	isSet bool
}

func (v NullablePatchProjectRequestDataAttributes) Get() *PatchProjectRequestDataAttributes {
	return v.value
}

func (v *NullablePatchProjectRequestDataAttributes) Set(val *PatchProjectRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchProjectRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchProjectRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchProjectRequestDataAttributes(val *PatchProjectRequestDataAttributes) *NullablePatchProjectRequestDataAttributes {
	return &NullablePatchProjectRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePatchProjectRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchProjectRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


