/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrgRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgRelationships{}

// OrgRelationships struct for OrgRelationships
type OrgRelationships struct {
	MemberRole NullableMemberRoleRelationship `json:"member_role,omitempty"`
}

// NewOrgRelationships instantiates a new OrgRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgRelationships() *OrgRelationships {
	this := OrgRelationships{}
	return &this
}

// NewOrgRelationshipsWithDefaults instantiates a new OrgRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgRelationshipsWithDefaults() *OrgRelationships {
	this := OrgRelationships{}
	return &this
}

// GetMemberRole returns the MemberRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrgRelationships) GetMemberRole() MemberRoleRelationship {
	if o == nil || IsNil(o.MemberRole.Get()) {
		var ret MemberRoleRelationship
		return ret
	}
	return *o.MemberRole.Get()
}

// GetMemberRoleOk returns a tuple with the MemberRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrgRelationships) GetMemberRoleOk() (*MemberRoleRelationship, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemberRole.Get(), o.MemberRole.IsSet()
}

// HasMemberRole returns a boolean if a field has been set.
func (o *OrgRelationships) HasMemberRole() bool {
	if o != nil && o.MemberRole.IsSet() {
		return true
	}

	return false
}

// SetMemberRole gets a reference to the given NullableMemberRoleRelationship and assigns it to the MemberRole field.
func (o *OrgRelationships) SetMemberRole(v MemberRoleRelationship) {
	o.MemberRole.Set(&v)
}
// SetMemberRoleNil sets the value for MemberRole to be an explicit nil
func (o *OrgRelationships) SetMemberRoleNil() {
	o.MemberRole.Set(nil)
}

// UnsetMemberRole ensures that no value is present for MemberRole, not even an explicit nil
func (o *OrgRelationships) UnsetMemberRole() {
	o.MemberRole.Unset()
}

func (o OrgRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MemberRole.IsSet() {
		toSerialize["member_role"] = o.MemberRole.Get()
	}
	return toSerialize, nil
}

type NullableOrgRelationships struct {
	value *OrgRelationships
	isSet bool
}

func (v NullableOrgRelationships) Get() *OrgRelationships {
	return v.value
}

func (v *NullableOrgRelationships) Set(val *OrgRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgRelationships(val *OrgRelationships) *NullableOrgRelationships {
	return &NullableOrgRelationships{value: val, isSet: true}
}

func (v NullableOrgRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


