/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateOrg200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrg200Response{}

// UpdateOrg200Response struct for UpdateOrg200Response
type UpdateOrg200Response struct {
	Data *UpdateOrg200ResponseData `json:"data,omitempty"`
	Jsonapi *JsonApi `json:"jsonapi,omitempty"`
	Links *SelfLink `json:"links,omitempty"`
}

// NewUpdateOrg200Response instantiates a new UpdateOrg200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrg200Response() *UpdateOrg200Response {
	this := UpdateOrg200Response{}
	return &this
}

// NewUpdateOrg200ResponseWithDefaults instantiates a new UpdateOrg200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrg200ResponseWithDefaults() *UpdateOrg200Response {
	this := UpdateOrg200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UpdateOrg200Response) GetData() UpdateOrg200ResponseData {
	if o == nil || IsNil(o.Data) {
		var ret UpdateOrg200ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrg200Response) GetDataOk() (*UpdateOrg200ResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UpdateOrg200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given UpdateOrg200ResponseData and assigns it to the Data field.
func (o *UpdateOrg200Response) SetData(v UpdateOrg200ResponseData) {
	o.Data = &v
}

// GetJsonapi returns the Jsonapi field value if set, zero value otherwise.
func (o *UpdateOrg200Response) GetJsonapi() JsonApi {
	if o == nil || IsNil(o.Jsonapi) {
		var ret JsonApi
		return ret
	}
	return *o.Jsonapi
}

// GetJsonapiOk returns a tuple with the Jsonapi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrg200Response) GetJsonapiOk() (*JsonApi, bool) {
	if o == nil || IsNil(o.Jsonapi) {
		return nil, false
	}
	return o.Jsonapi, true
}

// HasJsonapi returns a boolean if a field has been set.
func (o *UpdateOrg200Response) HasJsonapi() bool {
	if o != nil && !IsNil(o.Jsonapi) {
		return true
	}

	return false
}

// SetJsonapi gets a reference to the given JsonApi and assigns it to the Jsonapi field.
func (o *UpdateOrg200Response) SetJsonapi(v JsonApi) {
	o.Jsonapi = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *UpdateOrg200Response) GetLinks() SelfLink {
	if o == nil || IsNil(o.Links) {
		var ret SelfLink
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrg200Response) GetLinksOk() (*SelfLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *UpdateOrg200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given SelfLink and assigns it to the Links field.
func (o *UpdateOrg200Response) SetLinks(v SelfLink) {
	o.Links = &v
}

func (o UpdateOrg200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrg200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Jsonapi) {
		toSerialize["jsonapi"] = o.Jsonapi
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableUpdateOrg200Response struct {
	value *UpdateOrg200Response
	isSet bool
}

func (v NullableUpdateOrg200Response) Get() *UpdateOrg200Response {
	return v.value
}

func (v *NullableUpdateOrg200Response) Set(val *UpdateOrg200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrg200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrg200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrg200Response(val *UpdateOrg200Response) *NullableUpdateOrg200Response {
	return &NullableUpdateOrg200Response{value: val, isSet: true}
}

func (v NullableUpdateOrg200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrg200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


