/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManualRemediationPRsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualRemediationPRsSettings{}

// ManualRemediationPRsSettings Manually raise pull requests to fix new and existing vulnerabilities. If not specified, settings will be inherited from the Project's integration.
type ManualRemediationPRsSettings struct {
	// Include vulnerability patches in manual pull requests.
	IsPatchRemediationEnabled *bool `json:"is_patch_remediation_enabled,omitempty"`
}

// NewManualRemediationPRsSettings instantiates a new ManualRemediationPRsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualRemediationPRsSettings() *ManualRemediationPRsSettings {
	this := ManualRemediationPRsSettings{}
	return &this
}

// NewManualRemediationPRsSettingsWithDefaults instantiates a new ManualRemediationPRsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualRemediationPRsSettingsWithDefaults() *ManualRemediationPRsSettings {
	this := ManualRemediationPRsSettings{}
	return &this
}

// GetIsPatchRemediationEnabled returns the IsPatchRemediationEnabled field value if set, zero value otherwise.
func (o *ManualRemediationPRsSettings) GetIsPatchRemediationEnabled() bool {
	if o == nil || IsNil(o.IsPatchRemediationEnabled) {
		var ret bool
		return ret
	}
	return *o.IsPatchRemediationEnabled
}

// GetIsPatchRemediationEnabledOk returns a tuple with the IsPatchRemediationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualRemediationPRsSettings) GetIsPatchRemediationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPatchRemediationEnabled) {
		return nil, false
	}
	return o.IsPatchRemediationEnabled, true
}

// HasIsPatchRemediationEnabled returns a boolean if a field has been set.
func (o *ManualRemediationPRsSettings) HasIsPatchRemediationEnabled() bool {
	if o != nil && !IsNil(o.IsPatchRemediationEnabled) {
		return true
	}

	return false
}

// SetIsPatchRemediationEnabled gets a reference to the given bool and assigns it to the IsPatchRemediationEnabled field.
func (o *ManualRemediationPRsSettings) SetIsPatchRemediationEnabled(v bool) {
	o.IsPatchRemediationEnabled = &v
}

func (o ManualRemediationPRsSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualRemediationPRsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsPatchRemediationEnabled) {
		toSerialize["is_patch_remediation_enabled"] = o.IsPatchRemediationEnabled
	}
	return toSerialize, nil
}

type NullableManualRemediationPRsSettings struct {
	value *ManualRemediationPRsSettings
	isSet bool
}

func (v NullableManualRemediationPRsSettings) Get() *ManualRemediationPRsSettings {
	return v.value
}

func (v *NullableManualRemediationPRsSettings) Set(val *ManualRemediationPRsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableManualRemediationPRsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableManualRemediationPRsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualRemediationPRsSettings(val *ManualRemediationPRsSettings) *NullableManualRemediationPRsSettings {
	return &NullableManualRemediationPRsSettings{value: val, isSet: true}
}

func (v NullableManualRemediationPRsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualRemediationPRsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


