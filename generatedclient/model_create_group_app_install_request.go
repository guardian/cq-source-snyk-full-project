/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateGroupAppInstallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGroupAppInstallRequest{}

// CreateGroupAppInstallRequest struct for CreateGroupAppInstallRequest
type CreateGroupAppInstallRequest struct {
	Data CreateGroupAppInstallRequestData `json:"data"`
	Relationships CreateGroupAppInstallRequestRelationships `json:"relationships"`
}

type _CreateGroupAppInstallRequest CreateGroupAppInstallRequest

// NewCreateGroupAppInstallRequest instantiates a new CreateGroupAppInstallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupAppInstallRequest(data CreateGroupAppInstallRequestData, relationships CreateGroupAppInstallRequestRelationships) *CreateGroupAppInstallRequest {
	this := CreateGroupAppInstallRequest{}
	this.Data = data
	this.Relationships = relationships
	return &this
}

// NewCreateGroupAppInstallRequestWithDefaults instantiates a new CreateGroupAppInstallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupAppInstallRequestWithDefaults() *CreateGroupAppInstallRequest {
	this := CreateGroupAppInstallRequest{}
	return &this
}

// GetData returns the Data field value
func (o *CreateGroupAppInstallRequest) GetData() CreateGroupAppInstallRequestData {
	if o == nil {
		var ret CreateGroupAppInstallRequestData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateGroupAppInstallRequest) GetDataOk() (*CreateGroupAppInstallRequestData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateGroupAppInstallRequest) SetData(v CreateGroupAppInstallRequestData) {
	o.Data = v
}

// GetRelationships returns the Relationships field value
func (o *CreateGroupAppInstallRequest) GetRelationships() CreateGroupAppInstallRequestRelationships {
	if o == nil {
		var ret CreateGroupAppInstallRequestRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *CreateGroupAppInstallRequest) GetRelationshipsOk() (*CreateGroupAppInstallRequestRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *CreateGroupAppInstallRequest) SetRelationships(v CreateGroupAppInstallRequestRelationships) {
	o.Relationships = v
}

func (o CreateGroupAppInstallRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGroupAppInstallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["relationships"] = o.Relationships
	return toSerialize, nil
}

func (o *CreateGroupAppInstallRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"relationships",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateGroupAppInstallRequest := _CreateGroupAppInstallRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateGroupAppInstallRequest)

	if err != nil {
		return err
	}

	*o = CreateGroupAppInstallRequest(varCreateGroupAppInstallRequest)

	return err
}

type NullableCreateGroupAppInstallRequest struct {
	value *CreateGroupAppInstallRequest
	isSet bool
}

func (v NullableCreateGroupAppInstallRequest) Get() *CreateGroupAppInstallRequest {
	return v.value
}

func (v *NullableCreateGroupAppInstallRequest) Set(val *CreateGroupAppInstallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupAppInstallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupAppInstallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupAppInstallRequest(val *CreateGroupAppInstallRequest) *NullableCreateGroupAppInstallRequest {
	return &NullableCreateGroupAppInstallRequest{value: val, isSet: true}
}

func (v NullableCreateGroupAppInstallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupAppInstallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


