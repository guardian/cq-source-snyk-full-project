/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AuditLogSearchItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogSearchItemsInner{}

// AuditLogSearchItemsInner struct for AuditLogSearchItemsInner
type AuditLogSearchItemsInner struct {
	Content map[string]interface{} `json:"content,omitempty"`
	Created time.Time `json:"created"`
	Event string `json:"event"`
	GroupId *string `json:"group_id,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	ProjectId *string `json:"project_id,omitempty"`
}

type _AuditLogSearchItemsInner AuditLogSearchItemsInner

// NewAuditLogSearchItemsInner instantiates a new AuditLogSearchItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogSearchItemsInner(created time.Time, event string) *AuditLogSearchItemsInner {
	this := AuditLogSearchItemsInner{}
	this.Created = created
	this.Event = event
	return &this
}

// NewAuditLogSearchItemsInnerWithDefaults instantiates a new AuditLogSearchItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogSearchItemsInnerWithDefaults() *AuditLogSearchItemsInner {
	this := AuditLogSearchItemsInner{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AuditLogSearchItemsInner) GetContent() map[string]interface{} {
	if o == nil || IsNil(o.Content) {
		var ret map[string]interface{}
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetContentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Content) {
		return map[string]interface{}{}, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *AuditLogSearchItemsInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given map[string]interface{} and assigns it to the Content field.
func (o *AuditLogSearchItemsInner) SetContent(v map[string]interface{}) {
	o.Content = v
}

// GetCreated returns the Created field value
func (o *AuditLogSearchItemsInner) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *AuditLogSearchItemsInner) SetCreated(v time.Time) {
	o.Created = v
}

// GetEvent returns the Event field value
func (o *AuditLogSearchItemsInner) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *AuditLogSearchItemsInner) SetEvent(v string) {
	o.Event = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *AuditLogSearchItemsInner) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *AuditLogSearchItemsInner) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *AuditLogSearchItemsInner) SetGroupId(v string) {
	o.GroupId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AuditLogSearchItemsInner) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AuditLogSearchItemsInner) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *AuditLogSearchItemsInner) SetOrgId(v string) {
	o.OrgId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *AuditLogSearchItemsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogSearchItemsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *AuditLogSearchItemsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *AuditLogSearchItemsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o AuditLogSearchItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogSearchItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	toSerialize["created"] = o.Created
	toSerialize["event"] = o.Event
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	return toSerialize, nil
}

func (o *AuditLogSearchItemsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"event",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuditLogSearchItemsInner := _AuditLogSearchItemsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuditLogSearchItemsInner)

	if err != nil {
		return err
	}

	*o = AuditLogSearchItemsInner(varAuditLogSearchItemsInner)

	return err
}

type NullableAuditLogSearchItemsInner struct {
	value *AuditLogSearchItemsInner
	isSet bool
}

func (v NullableAuditLogSearchItemsInner) Get() *AuditLogSearchItemsInner {
	return v.value
}

func (v *NullableAuditLogSearchItemsInner) Set(val *AuditLogSearchItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogSearchItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogSearchItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogSearchItemsInner(val *AuditLogSearchItemsInner) *NullableAuditLogSearchItemsInner {
	return &NullableAuditLogSearchItemsInner{value: val, isSet: true}
}

func (v NullableAuditLogSearchItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogSearchItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


