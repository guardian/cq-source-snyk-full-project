/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HelloWorldAttributesRequestSubject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelloWorldAttributesRequestSubject{}

// HelloWorldAttributesRequestSubject struct for HelloWorldAttributesRequestSubject
type HelloWorldAttributesRequestSubject struct {
	ClientId *string `json:"clientId,omitempty"`
	PublicId string `json:"publicId"`
	Type string `json:"type"`
}

type _HelloWorldAttributesRequestSubject HelloWorldAttributesRequestSubject

// NewHelloWorldAttributesRequestSubject instantiates a new HelloWorldAttributesRequestSubject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelloWorldAttributesRequestSubject(publicId string, type_ string) *HelloWorldAttributesRequestSubject {
	this := HelloWorldAttributesRequestSubject{}
	this.PublicId = publicId
	this.Type = type_
	return &this
}

// NewHelloWorldAttributesRequestSubjectWithDefaults instantiates a new HelloWorldAttributesRequestSubject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelloWorldAttributesRequestSubjectWithDefaults() *HelloWorldAttributesRequestSubject {
	this := HelloWorldAttributesRequestSubject{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *HelloWorldAttributesRequestSubject) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelloWorldAttributesRequestSubject) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *HelloWorldAttributesRequestSubject) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *HelloWorldAttributesRequestSubject) SetClientId(v string) {
	o.ClientId = &v
}

// GetPublicId returns the PublicId field value
func (o *HelloWorldAttributesRequestSubject) GetPublicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value
// and a boolean to check if the value has been set.
func (o *HelloWorldAttributesRequestSubject) GetPublicIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicId, true
}

// SetPublicId sets field value
func (o *HelloWorldAttributesRequestSubject) SetPublicId(v string) {
	o.PublicId = v
}

// GetType returns the Type field value
func (o *HelloWorldAttributesRequestSubject) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *HelloWorldAttributesRequestSubject) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *HelloWorldAttributesRequestSubject) SetType(v string) {
	o.Type = v
}

func (o HelloWorldAttributesRequestSubject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelloWorldAttributesRequestSubject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	toSerialize["publicId"] = o.PublicId
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *HelloWorldAttributesRequestSubject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publicId",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHelloWorldAttributesRequestSubject := _HelloWorldAttributesRequestSubject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHelloWorldAttributesRequestSubject)

	if err != nil {
		return err
	}

	*o = HelloWorldAttributesRequestSubject(varHelloWorldAttributesRequestSubject)

	return err
}

type NullableHelloWorldAttributesRequestSubject struct {
	value *HelloWorldAttributesRequestSubject
	isSet bool
}

func (v NullableHelloWorldAttributesRequestSubject) Get() *HelloWorldAttributesRequestSubject {
	return v.value
}

func (v *NullableHelloWorldAttributesRequestSubject) Set(val *HelloWorldAttributesRequestSubject) {
	v.value = val
	v.isSet = true
}

func (v NullableHelloWorldAttributesRequestSubject) IsSet() bool {
	return v.isSet
}

func (v *NullableHelloWorldAttributesRequestSubject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelloWorldAttributesRequestSubject(val *HelloWorldAttributesRequestSubject) *NullableHelloWorldAttributesRequestSubject {
	return &NullableHelloWorldAttributesRequestSubject{value: val, isSet: true}
}

func (v NullableHelloWorldAttributesRequestSubject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelloWorldAttributesRequestSubject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


