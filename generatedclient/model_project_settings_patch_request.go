/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectSettingsPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectSettingsPatchRequest{}

// ProjectSettingsPatchRequest struct for ProjectSettingsPatchRequest
type ProjectSettingsPatchRequest struct {
	Data *ProjectSettingsPatchRequestData `json:"data,omitempty"`
}

// NewProjectSettingsPatchRequest instantiates a new ProjectSettingsPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectSettingsPatchRequest() *ProjectSettingsPatchRequest {
	this := ProjectSettingsPatchRequest{}
	return &this
}

// NewProjectSettingsPatchRequestWithDefaults instantiates a new ProjectSettingsPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectSettingsPatchRequestWithDefaults() *ProjectSettingsPatchRequest {
	this := ProjectSettingsPatchRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ProjectSettingsPatchRequest) GetData() ProjectSettingsPatchRequestData {
	if o == nil || IsNil(o.Data) {
		var ret ProjectSettingsPatchRequestData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectSettingsPatchRequest) GetDataOk() (*ProjectSettingsPatchRequestData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ProjectSettingsPatchRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ProjectSettingsPatchRequestData and assigns it to the Data field.
func (o *ProjectSettingsPatchRequest) SetData(v ProjectSettingsPatchRequestData) {
	o.Data = &v
}

func (o ProjectSettingsPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectSettingsPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableProjectSettingsPatchRequest struct {
	value *ProjectSettingsPatchRequest
	isSet bool
}

func (v NullableProjectSettingsPatchRequest) Get() *ProjectSettingsPatchRequest {
	return v.value
}

func (v *NullableProjectSettingsPatchRequest) Set(val *ProjectSettingsPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectSettingsPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectSettingsPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectSettingsPatchRequest(val *ProjectSettingsPatchRequest) *NullableProjectSettingsPatchRequest {
	return &NullableProjectSettingsPatchRequest{value: val, isSet: true}
}

func (v NullableProjectSettingsPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectSettingsPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


