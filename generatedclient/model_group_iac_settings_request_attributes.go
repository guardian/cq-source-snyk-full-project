/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GroupIacSettingsRequestAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupIacSettingsRequestAttributes{}

// GroupIacSettingsRequestAttributes struct for GroupIacSettingsRequestAttributes
type GroupIacSettingsRequestAttributes struct {
	CustomRules *GroupIacSettingsRequestAttributesCustomRules `json:"custom_rules,omitempty"`
}

// NewGroupIacSettingsRequestAttributes instantiates a new GroupIacSettingsRequestAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupIacSettingsRequestAttributes() *GroupIacSettingsRequestAttributes {
	this := GroupIacSettingsRequestAttributes{}
	return &this
}

// NewGroupIacSettingsRequestAttributesWithDefaults instantiates a new GroupIacSettingsRequestAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupIacSettingsRequestAttributesWithDefaults() *GroupIacSettingsRequestAttributes {
	this := GroupIacSettingsRequestAttributes{}
	return &this
}

// GetCustomRules returns the CustomRules field value if set, zero value otherwise.
func (o *GroupIacSettingsRequestAttributes) GetCustomRules() GroupIacSettingsRequestAttributesCustomRules {
	if o == nil || IsNil(o.CustomRules) {
		var ret GroupIacSettingsRequestAttributesCustomRules
		return ret
	}
	return *o.CustomRules
}

// GetCustomRulesOk returns a tuple with the CustomRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupIacSettingsRequestAttributes) GetCustomRulesOk() (*GroupIacSettingsRequestAttributesCustomRules, bool) {
	if o == nil || IsNil(o.CustomRules) {
		return nil, false
	}
	return o.CustomRules, true
}

// HasCustomRules returns a boolean if a field has been set.
func (o *GroupIacSettingsRequestAttributes) HasCustomRules() bool {
	if o != nil && !IsNil(o.CustomRules) {
		return true
	}

	return false
}

// SetCustomRules gets a reference to the given GroupIacSettingsRequestAttributesCustomRules and assigns it to the CustomRules field.
func (o *GroupIacSettingsRequestAttributes) SetCustomRules(v GroupIacSettingsRequestAttributesCustomRules) {
	o.CustomRules = &v
}

func (o GroupIacSettingsRequestAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupIacSettingsRequestAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomRules) {
		toSerialize["custom_rules"] = o.CustomRules
	}
	return toSerialize, nil
}

type NullableGroupIacSettingsRequestAttributes struct {
	value *GroupIacSettingsRequestAttributes
	isSet bool
}

func (v NullableGroupIacSettingsRequestAttributes) Get() *GroupIacSettingsRequestAttributes {
	return v.value
}

func (v *NullableGroupIacSettingsRequestAttributes) Set(val *GroupIacSettingsRequestAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupIacSettingsRequestAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupIacSettingsRequestAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupIacSettingsRequestAttributes(val *GroupIacSettingsRequestAttributes) *NullableGroupIacSettingsRequestAttributes {
	return &NullableGroupIacSettingsRequestAttributes{value: val, isSet: true}
}

func (v NullableGroupIacSettingsRequestAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupIacSettingsRequestAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


