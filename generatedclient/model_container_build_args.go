/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContainerBuildArgs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerBuildArgs{}

// ContainerBuildArgs struct for ContainerBuildArgs
type ContainerBuildArgs struct {
	Platform string `json:"platform"`
}

type _ContainerBuildArgs ContainerBuildArgs

// NewContainerBuildArgs instantiates a new ContainerBuildArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerBuildArgs(platform string) *ContainerBuildArgs {
	this := ContainerBuildArgs{}
	this.Platform = platform
	return &this
}

// NewContainerBuildArgsWithDefaults instantiates a new ContainerBuildArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerBuildArgsWithDefaults() *ContainerBuildArgs {
	this := ContainerBuildArgs{}
	return &this
}

// GetPlatform returns the Platform field value
func (o *ContainerBuildArgs) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *ContainerBuildArgs) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *ContainerBuildArgs) SetPlatform(v string) {
	o.Platform = v
}

func (o ContainerBuildArgs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerBuildArgs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["platform"] = o.Platform
	return toSerialize, nil
}

func (o *ContainerBuildArgs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"platform",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerBuildArgs := _ContainerBuildArgs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainerBuildArgs)

	if err != nil {
		return err
	}

	*o = ContainerBuildArgs(varContainerBuildArgs)

	return err
}

type NullableContainerBuildArgs struct {
	value *ContainerBuildArgs
	isSet bool
}

func (v NullableContainerBuildArgs) Get() *ContainerBuildArgs {
	return v.value
}

func (v *NullableContainerBuildArgs) Set(val *ContainerBuildArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerBuildArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerBuildArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerBuildArgs(val *ContainerBuildArgs) *NullableContainerBuildArgs {
	return &NullableContainerBuildArgs{value: val, isSet: true}
}

func (v NullableContainerBuildArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerBuildArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


