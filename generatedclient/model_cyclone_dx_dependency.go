/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CycloneDxDependency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CycloneDxDependency{}

// CycloneDxDependency struct for CycloneDxDependency
type CycloneDxDependency struct {
	DependsOn []string `json:"dependsOn,omitempty"`
	Ref *string `json:"ref,omitempty"`
}

// NewCycloneDxDependency instantiates a new CycloneDxDependency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCycloneDxDependency() *CycloneDxDependency {
	this := CycloneDxDependency{}
	return &this
}

// NewCycloneDxDependencyWithDefaults instantiates a new CycloneDxDependency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCycloneDxDependencyWithDefaults() *CycloneDxDependency {
	this := CycloneDxDependency{}
	return &this
}

// GetDependsOn returns the DependsOn field value if set, zero value otherwise.
func (o *CycloneDxDependency) GetDependsOn() []string {
	if o == nil || IsNil(o.DependsOn) {
		var ret []string
		return ret
	}
	return o.DependsOn
}

// GetDependsOnOk returns a tuple with the DependsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CycloneDxDependency) GetDependsOnOk() ([]string, bool) {
	if o == nil || IsNil(o.DependsOn) {
		return nil, false
	}
	return o.DependsOn, true
}

// HasDependsOn returns a boolean if a field has been set.
func (o *CycloneDxDependency) HasDependsOn() bool {
	if o != nil && !IsNil(o.DependsOn) {
		return true
	}

	return false
}

// SetDependsOn gets a reference to the given []string and assigns it to the DependsOn field.
func (o *CycloneDxDependency) SetDependsOn(v []string) {
	o.DependsOn = v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *CycloneDxDependency) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CycloneDxDependency) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *CycloneDxDependency) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *CycloneDxDependency) SetRef(v string) {
	o.Ref = &v
}

func (o CycloneDxDependency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CycloneDxDependency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DependsOn) {
		toSerialize["dependsOn"] = o.DependsOn
	}
	if !IsNil(o.Ref) {
		toSerialize["ref"] = o.Ref
	}
	return toSerialize, nil
}

type NullableCycloneDxDependency struct {
	value *CycloneDxDependency
	isSet bool
}

func (v NullableCycloneDxDependency) Get() *CycloneDxDependency {
	return v.value
}

func (v *NullableCycloneDxDependency) Set(val *CycloneDxDependency) {
	v.value = val
	v.isSet = true
}

func (v NullableCycloneDxDependency) IsSet() bool {
	return v.isSet
}

func (v *NullableCycloneDxDependency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCycloneDxDependency(val *CycloneDxDependency) *NullableCycloneDxDependency {
	return &NullableCycloneDxDependency{value: val, isSet: true}
}

func (v NullableCycloneDxDependency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCycloneDxDependency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


