/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppPostRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPostRequestDataAttributes{}

// AppPostRequestDataAttributes struct for AppPostRequestDataAttributes
type AppPostRequestDataAttributes struct {
	// The access token time to live for your app, in seconds. It only affects the newly generated access tokens, existing access token will  continue to have their previous time to live as expiration.
	AccessTokenTtlSeconds *float32 `json:"access_token_ttl_seconds,omitempty"`
	Context Context `json:"context"`
	// New name of the app to display to users during authorization flow.
	Name string `json:"name"`
	// List of allowed redirect URIs to call back after authentication.
	RedirectUris []string `json:"redirect_uris"`
	// The scopes this app is allowed to request during authorization.
	Scopes []string `json:"scopes"`
}

type _AppPostRequestDataAttributes AppPostRequestDataAttributes

// NewAppPostRequestDataAttributes instantiates a new AppPostRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPostRequestDataAttributes(context Context, name string, redirectUris []string, scopes []string) *AppPostRequestDataAttributes {
	this := AppPostRequestDataAttributes{}
	this.Context = context
	this.Name = name
	this.RedirectUris = redirectUris
	this.Scopes = scopes
	return &this
}

// NewAppPostRequestDataAttributesWithDefaults instantiates a new AppPostRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPostRequestDataAttributesWithDefaults() *AppPostRequestDataAttributes {
	this := AppPostRequestDataAttributes{}
	return &this
}

// GetAccessTokenTtlSeconds returns the AccessTokenTtlSeconds field value if set, zero value otherwise.
func (o *AppPostRequestDataAttributes) GetAccessTokenTtlSeconds() float32 {
	if o == nil || IsNil(o.AccessTokenTtlSeconds) {
		var ret float32
		return ret
	}
	return *o.AccessTokenTtlSeconds
}

// GetAccessTokenTtlSecondsOk returns a tuple with the AccessTokenTtlSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPostRequestDataAttributes) GetAccessTokenTtlSecondsOk() (*float32, bool) {
	if o == nil || IsNil(o.AccessTokenTtlSeconds) {
		return nil, false
	}
	return o.AccessTokenTtlSeconds, true
}

// HasAccessTokenTtlSeconds returns a boolean if a field has been set.
func (o *AppPostRequestDataAttributes) HasAccessTokenTtlSeconds() bool {
	if o != nil && !IsNil(o.AccessTokenTtlSeconds) {
		return true
	}

	return false
}

// SetAccessTokenTtlSeconds gets a reference to the given float32 and assigns it to the AccessTokenTtlSeconds field.
func (o *AppPostRequestDataAttributes) SetAccessTokenTtlSeconds(v float32) {
	o.AccessTokenTtlSeconds = &v
}

// GetContext returns the Context field value
func (o *AppPostRequestDataAttributes) GetContext() Context {
	if o == nil {
		var ret Context
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *AppPostRequestDataAttributes) GetContextOk() (*Context, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *AppPostRequestDataAttributes) SetContext(v Context) {
	o.Context = v
}

// GetName returns the Name field value
func (o *AppPostRequestDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AppPostRequestDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AppPostRequestDataAttributes) SetName(v string) {
	o.Name = v
}

// GetRedirectUris returns the RedirectUris field value
func (o *AppPostRequestDataAttributes) GetRedirectUris() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value
// and a boolean to check if the value has been set.
func (o *AppPostRequestDataAttributes) GetRedirectUrisOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedirectUris, true
}

// SetRedirectUris sets field value
func (o *AppPostRequestDataAttributes) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetScopes returns the Scopes field value
func (o *AppPostRequestDataAttributes) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *AppPostRequestDataAttributes) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *AppPostRequestDataAttributes) SetScopes(v []string) {
	o.Scopes = v
}

func (o AppPostRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPostRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessTokenTtlSeconds) {
		toSerialize["access_token_ttl_seconds"] = o.AccessTokenTtlSeconds
	}
	toSerialize["context"] = o.Context
	toSerialize["name"] = o.Name
	toSerialize["redirect_uris"] = o.RedirectUris
	toSerialize["scopes"] = o.Scopes
	return toSerialize, nil
}

func (o *AppPostRequestDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
		"name",
		"redirect_uris",
		"scopes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppPostRequestDataAttributes := _AppPostRequestDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppPostRequestDataAttributes)

	if err != nil {
		return err
	}

	*o = AppPostRequestDataAttributes(varAppPostRequestDataAttributes)

	return err
}

type NullableAppPostRequestDataAttributes struct {
	value *AppPostRequestDataAttributes
	isSet bool
}

func (v NullableAppPostRequestDataAttributes) Get() *AppPostRequestDataAttributes {
	return v.value
}

func (v *NullableAppPostRequestDataAttributes) Set(val *AppPostRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPostRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPostRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPostRequestDataAttributes(val *AppPostRequestDataAttributes) *NullableAppPostRequestDataAttributes {
	return &NullableAppPostRequestDataAttributes{value: val, isSet: true}
}

func (v NullableAppPostRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPostRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


