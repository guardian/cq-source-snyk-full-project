/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppPatchRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPatchRequestData{}

// AppPatchRequestData struct for AppPatchRequestData
type AppPatchRequestData struct {
	Attributes *AppPatchRequestDataAttributes `json:"attributes,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAppPatchRequestData instantiates a new AppPatchRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPatchRequestData() *AppPatchRequestData {
	this := AppPatchRequestData{}
	return &this
}

// NewAppPatchRequestDataWithDefaults instantiates a new AppPatchRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPatchRequestDataWithDefaults() *AppPatchRequestData {
	this := AppPatchRequestData{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *AppPatchRequestData) GetAttributes() AppPatchRequestDataAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret AppPatchRequestDataAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPatchRequestData) GetAttributesOk() (*AppPatchRequestDataAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *AppPatchRequestData) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given AppPatchRequestDataAttributes and assigns it to the Attributes field.
func (o *AppPatchRequestData) SetAttributes(v AppPatchRequestDataAttributes) {
	o.Attributes = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AppPatchRequestData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPatchRequestData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AppPatchRequestData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AppPatchRequestData) SetType(v string) {
	o.Type = &v
}

func (o AppPatchRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPatchRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAppPatchRequestData struct {
	value *AppPatchRequestData
	isSet bool
}

func (v NullableAppPatchRequestData) Get() *AppPatchRequestData {
	return v.value
}

func (v *NullableAppPatchRequestData) Set(val *AppPatchRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPatchRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPatchRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPatchRequestData(val *AppPatchRequestData) *NullableAppPatchRequestData {
	return &NullableAppPatchRequestData{value: val, isSet: true}
}

func (v NullableAppPatchRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPatchRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


