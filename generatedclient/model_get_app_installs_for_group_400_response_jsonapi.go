/*
Snyk API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: REST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetAppInstallsForGroup400ResponseJsonapi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAppInstallsForGroup400ResponseJsonapi{}

// GetAppInstallsForGroup400ResponseJsonapi struct for GetAppInstallsForGroup400ResponseJsonapi
type GetAppInstallsForGroup400ResponseJsonapi struct {
	// Version of the JSON API specification this server supports.
	Version string `json:"version"`
}

type _GetAppInstallsForGroup400ResponseJsonapi GetAppInstallsForGroup400ResponseJsonapi

// NewGetAppInstallsForGroup400ResponseJsonapi instantiates a new GetAppInstallsForGroup400ResponseJsonapi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAppInstallsForGroup400ResponseJsonapi(version string) *GetAppInstallsForGroup400ResponseJsonapi {
	this := GetAppInstallsForGroup400ResponseJsonapi{}
	this.Version = version
	return &this
}

// NewGetAppInstallsForGroup400ResponseJsonapiWithDefaults instantiates a new GetAppInstallsForGroup400ResponseJsonapi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAppInstallsForGroup400ResponseJsonapiWithDefaults() *GetAppInstallsForGroup400ResponseJsonapi {
	this := GetAppInstallsForGroup400ResponseJsonapi{}
	return &this
}

// GetVersion returns the Version field value
func (o *GetAppInstallsForGroup400ResponseJsonapi) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *GetAppInstallsForGroup400ResponseJsonapi) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *GetAppInstallsForGroup400ResponseJsonapi) SetVersion(v string) {
	o.Version = v
}

func (o GetAppInstallsForGroup400ResponseJsonapi) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAppInstallsForGroup400ResponseJsonapi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *GetAppInstallsForGroup400ResponseJsonapi) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAppInstallsForGroup400ResponseJsonapi := _GetAppInstallsForGroup400ResponseJsonapi{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAppInstallsForGroup400ResponseJsonapi)

	if err != nil {
		return err
	}

	*o = GetAppInstallsForGroup400ResponseJsonapi(varGetAppInstallsForGroup400ResponseJsonapi)

	return err
}

type NullableGetAppInstallsForGroup400ResponseJsonapi struct {
	value *GetAppInstallsForGroup400ResponseJsonapi
	isSet bool
}

func (v NullableGetAppInstallsForGroup400ResponseJsonapi) Get() *GetAppInstallsForGroup400ResponseJsonapi {
	return v.value
}

func (v *NullableGetAppInstallsForGroup400ResponseJsonapi) Set(val *GetAppInstallsForGroup400ResponseJsonapi) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAppInstallsForGroup400ResponseJsonapi) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAppInstallsForGroup400ResponseJsonapi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAppInstallsForGroup400ResponseJsonapi(val *GetAppInstallsForGroup400ResponseJsonapi) *NullableGetAppInstallsForGroup400ResponseJsonapi {
	return &NullableGetAppInstallsForGroup400ResponseJsonapi{value: val, isSet: true}
}

func (v NullableGetAppInstallsForGroup400ResponseJsonapi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAppInstallsForGroup400ResponseJsonapi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


